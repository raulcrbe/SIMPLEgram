ActionBar/ActionBarLayout.java:            layerShadowDrawable = getResources().getDrawable(R.drawable.layer_shadow);
ActionBar/ActionBarLayout.java:            headerShadowDrawable = getResources().getDrawable(R.drawable.header_shadow).mutate();
ActionBar/ActionBarMenuItem.java:            closeIconView.setImageResource(R.drawable.ic_close_white);
ActionBar/ActionBarMenuItem.java:                        CombinedDrawable combinedDrawable = Theme.createCircleDrawableWithIcon(AndroidUtilities.dp(32), R.drawable.chats_saved);
ActionBar/ActionBarMenuItem.java:                CombinedDrawable combinedDrawable = Theme.createCircleDrawableWithIcon(AndroidUtilities.dp(32), R.drawable.chats_archive);
ActionBar/ActionBarMenuSubItem.java:            checkView.setImageResource(R.drawable.msg_text_check);
ActionBar/ActionBarPopupWindow.java:            backgroundDrawable = getResources().getDrawable(R.drawable.popup_fixed_alert2).mutate();
ActionBar/AlertDialog.java:            shadowDrawable = context.getResources().getDrawable(R.drawable.popup_fixed_alert).mutate();
ActionBar/AlertDialog.java:            topImageView.setBackgroundDrawable(getContext().getResources().getDrawable(R.drawable.popup_fixed_top));
ActionBar/AlertDialog.java:            shadow[0] = (BitmapDrawable) getContext().getResources().getDrawable(R.drawable.header_shadow).mutate();
ActionBar/AlertDialog.java:            shadow[1] = (BitmapDrawable) getContext().getResources().getDrawable(R.drawable.header_shadow_reverse).mutate();
ActionBar/BottomSheet.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
ActionBar/DrawerLayoutContainer.java:        shadowLeft = getResources().getDrawable(R.drawable.menu_shadow);
ActionBar/FloatingToolbar.java:            mArrow = mContext.getDrawable(R.drawable.ft_avd_tooverflow).mutate();
ActionBar/FloatingToolbar.java:            mOverflow = mContext.getDrawable(R.drawable.ft_avd_toarrow).mutate();
ActionBar/FloatingToolbar.java:            mToArrow = (AnimatedVectorDrawable) mContext.getDrawable(R.drawable.ft_avd_toarrow_animation).mutate();
ActionBar/FloatingToolbar.java:            mToOverflow = (AnimatedVectorDrawable) mContext.getDrawable(R.drawable.ft_avd_tooverflow_animation).mutate();
ActionBar/Theme.java:        Drawable defaultDrawable = resources.getDrawable(R.drawable.search_dark).mutate();
ActionBar/Theme.java:        Drawable pressedDrawable = resources.getDrawable(R.drawable.search_dark_activated).mutate();
ActionBar/Theme.java:                    dialogs_holidayDrawable = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.newyear);
ActionBar/Theme.java:            Drawable backDrawable = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_back).mutate();
ActionBar/Theme.java:            Drawable otherDrawable = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_dots).mutate();
ActionBar/Theme.java:            Drawable emojiDrawable = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_smile).mutate();
ActionBar/Theme.java:            Drawable micDrawable = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_mic).mutate();
ActionBar/Theme.java:                BitmapDrawable catsDrawable = (BitmapDrawable) ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.catstile).mutate();
ActionBar/Theme.java:            avatarDrawables[0] = resources.getDrawable(R.drawable.chats_saved);
ActionBar/Theme.java:            avatarDrawables[1] = resources.getDrawable(R.drawable.ghost);
ActionBar/Theme.java:            avatarDrawables[2] = resources.getDrawable(R.drawable.folders_private);
ActionBar/Theme.java:            avatarDrawables[3] = resources.getDrawable(R.drawable.folders_requests);
ActionBar/Theme.java:            avatarDrawables[4] = resources.getDrawable(R.drawable.folders_group);
ActionBar/Theme.java:            avatarDrawables[5] = resources.getDrawable(R.drawable.folders_channel);
ActionBar/Theme.java:            avatarDrawables[6] = resources.getDrawable(R.drawable.folders_bot);
ActionBar/Theme.java:            avatarDrawables[7] = resources.getDrawable(R.drawable.folders_mute);
ActionBar/Theme.java:            avatarDrawables[8] = resources.getDrawable(R.drawable.folders_read);
ActionBar/Theme.java:            avatarDrawables[9] = resources.getDrawable(R.drawable.folders_archive);
ActionBar/Theme.java:            avatarDrawables[10] = resources.getDrawable(R.drawable.folders_private);
ActionBar/Theme.java:            avatarDrawables[11] = resources.getDrawable(R.drawable.chats_replies);
ActionBar/Theme.java:            dialogs_lockDrawable = resources.getDrawable(R.drawable.list_secret);
ActionBar/Theme.java:            dialogs_checkDrawable = resources.getDrawable(R.drawable.list_check).mutate();
ActionBar/Theme.java:            dialogs_playDrawable = resources.getDrawable(R.drawable.minithumb_play).mutate();
ActionBar/Theme.java:            dialogs_checkReadDrawable = resources.getDrawable(R.drawable.list_check).mutate();
ActionBar/Theme.java:            dialogs_halfCheckDrawable = resources.getDrawable(R.drawable.list_halfcheck);
ActionBar/Theme.java:            dialogs_errorDrawable = resources.getDrawable(R.drawable.list_warning_sign);
ActionBar/Theme.java:            dialogs_reorderDrawable = resources.getDrawable(R.drawable.list_reorder).mutate();
ActionBar/Theme.java:            dialogs_groupDrawable = resources.getDrawable(R.drawable.list_group);
ActionBar/Theme.java:            dialogs_broadcastDrawable = resources.getDrawable(R.drawable.list_broadcast);
ActionBar/Theme.java:            dialogs_muteDrawable = resources.getDrawable(R.drawable.list_mute).mutate();
ActionBar/Theme.java:            dialogs_verifiedDrawable = resources.getDrawable(R.drawable.verified_area).mutate();
ActionBar/Theme.java:            dialogs_verifiedCheckDrawable = resources.getDrawable(R.drawable.verified_check).mutate();
ActionBar/Theme.java:            dialogs_mentionDrawable = resources.getDrawable(R.drawable.mentionchatslist);
ActionBar/Theme.java:            dialogs_botDrawable = resources.getDrawable(R.drawable.list_bot);
ActionBar/Theme.java:            dialogs_pinnedDrawable = resources.getDrawable(R.drawable.list_pin);
ActionBar/Theme.java:            moveUpDrawable = resources.getDrawable(R.drawable.preview_open);
ActionBar/Theme.java:            chat_msgNoSoundDrawable = resources.getDrawable(R.drawable.video_muted);
ActionBar/Theme.java:            chat_msgOutCheckDrawable = resources.getDrawable(R.drawable.msg_check).mutate();
ActionBar/Theme.java:            chat_msgOutCheckSelectedDrawable = resources.getDrawable(R.drawable.msg_check).mutate();
ActionBar/Theme.java:            chat_msgOutCheckReadDrawable = resources.getDrawable(R.drawable.msg_check).mutate();
ActionBar/Theme.java:            chat_msgOutCheckReadSelectedDrawable = resources.getDrawable(R.drawable.msg_check).mutate();
ActionBar/Theme.java:            chat_msgMediaCheckDrawable = resources.getDrawable(R.drawable.msg_check_s).mutate();
ActionBar/Theme.java:            chat_msgStickerCheckDrawable = resources.getDrawable(R.drawable.msg_check_s).mutate();
ActionBar/Theme.java:            chat_msgOutHalfCheckDrawable = resources.getDrawable(R.drawable.msg_halfcheck).mutate();
ActionBar/Theme.java:            chat_msgOutHalfCheckSelectedDrawable = resources.getDrawable(R.drawable.msg_halfcheck).mutate();
ActionBar/Theme.java:            chat_msgMediaHalfCheckDrawable = resources.getDrawable(R.drawable.msg_halfcheck_s).mutate();
ActionBar/Theme.java:            chat_msgStickerHalfCheckDrawable = resources.getDrawable(R.drawable.msg_halfcheck_s).mutate();
ActionBar/Theme.java:            chat_msgInViewsDrawable = resources.getDrawable(R.drawable.msg_views).mutate();
ActionBar/Theme.java:            chat_msgInViewsSelectedDrawable = resources.getDrawable(R.drawable.msg_views).mutate();
ActionBar/Theme.java:            chat_msgOutViewsDrawable = resources.getDrawable(R.drawable.msg_views).mutate();
ActionBar/Theme.java:            chat_msgOutViewsSelectedDrawable = resources.getDrawable(R.drawable.msg_views).mutate();
ActionBar/Theme.java:            chat_msgInRepliesDrawable = resources.getDrawable(R.drawable.msg_reply_small).mutate();
ActionBar/Theme.java:            chat_msgInRepliesSelectedDrawable = resources.getDrawable(R.drawable.msg_reply_small).mutate();
ActionBar/Theme.java:            chat_msgOutRepliesDrawable = resources.getDrawable(R.drawable.msg_reply_small).mutate();
ActionBar/Theme.java:            chat_msgOutRepliesSelectedDrawable = resources.getDrawable(R.drawable.msg_reply_small).mutate();
ActionBar/Theme.java:            chat_msgInPinnedDrawable = resources.getDrawable(R.drawable.msg_pin_mini).mutate();
ActionBar/Theme.java:            chat_msgInPinnedSelectedDrawable = resources.getDrawable(R.drawable.msg_pin_mini).mutate();
ActionBar/Theme.java:            chat_msgOutPinnedDrawable = resources.getDrawable(R.drawable.msg_pin_mini).mutate();
ActionBar/Theme.java:            chat_msgOutPinnedSelectedDrawable = resources.getDrawable(R.drawable.msg_pin_mini).mutate();
ActionBar/Theme.java:            chat_msgMediaPinnedDrawable = resources.getDrawable(R.drawable.msg_pin_mini).mutate();
ActionBar/Theme.java:            chat_msgStickerPinnedDrawable = resources.getDrawable(R.drawable.msg_pin_mini).mutate();
ActionBar/Theme.java:            chat_msgMediaViewsDrawable = resources.getDrawable(R.drawable.msg_views).mutate();
ActionBar/Theme.java:            chat_msgMediaRepliesDrawable = resources.getDrawable(R.drawable.msg_reply_small).mutate();
ActionBar/Theme.java:            chat_msgStickerViewsDrawable = resources.getDrawable(R.drawable.msg_views).mutate();
ActionBar/Theme.java:            chat_msgStickerRepliesDrawable = resources.getDrawable(R.drawable.msg_reply_small).mutate();
ActionBar/Theme.java:            chat_msgInMenuDrawable = resources.getDrawable(R.drawable.msg_actions).mutate();
ActionBar/Theme.java:            chat_msgInMenuSelectedDrawable = resources.getDrawable(R.drawable.msg_actions).mutate();
ActionBar/Theme.java:            chat_msgOutMenuDrawable = resources.getDrawable(R.drawable.msg_actions).mutate();
ActionBar/Theme.java:            chat_msgOutMenuSelectedDrawable = resources.getDrawable(R.drawable.msg_actions).mutate();
ActionBar/Theme.java:            chat_msgMediaMenuDrawable = resources.getDrawable(R.drawable.video_actions);
ActionBar/Theme.java:            chat_msgInInstantDrawable = resources.getDrawable(R.drawable.msg_instant).mutate();
ActionBar/Theme.java:            chat_msgOutInstantDrawable = resources.getDrawable(R.drawable.msg_instant).mutate();
ActionBar/Theme.java:            chat_msgErrorDrawable = resources.getDrawable(R.drawable.msg_warning);
ActionBar/Theme.java:            chat_muteIconDrawable = resources.getDrawable(R.drawable.list_mute).mutate();
ActionBar/Theme.java:            chat_lockIconDrawable = resources.getDrawable(R.drawable.ic_lock_header);
ActionBar/Theme.java:            chat_msgBroadcastDrawable = resources.getDrawable(R.drawable.broadcast3).mutate();
ActionBar/Theme.java:            chat_msgBroadcastMediaDrawable = resources.getDrawable(R.drawable.broadcast3).mutate();
ActionBar/Theme.java:            chat_msgInCallDrawable[0] = resources.getDrawable(R.drawable.chat_calls_voice).mutate();
ActionBar/Theme.java:            chat_msgInCallSelectedDrawable[0] = resources.getDrawable(R.drawable.chat_calls_voice).mutate();
ActionBar/Theme.java:            chat_msgOutCallDrawable[0] = resources.getDrawable(R.drawable.chat_calls_voice).mutate();
ActionBar/Theme.java:            chat_msgOutCallSelectedDrawable[0] = resources.getDrawable(R.drawable.chat_calls_voice).mutate();
ActionBar/Theme.java:            chat_msgInCallDrawable[1] = resources.getDrawable(R.drawable.chat_calls_video).mutate();
ActionBar/Theme.java:            chat_msgInCallSelectedDrawable[1] = resources.getDrawable(R.drawable.chat_calls_video).mutate();
ActionBar/Theme.java:            chat_msgOutCallDrawable[1] = resources.getDrawable(R.drawable.chat_calls_video).mutate();
ActionBar/Theme.java:            chat_msgOutCallSelectedDrawable[1] = resources.getDrawable(R.drawable.chat_calls_video).mutate();
ActionBar/Theme.java:            chat_msgCallUpGreenDrawable = resources.getDrawable(R.drawable.chat_calls_outgoing).mutate();
ActionBar/Theme.java:            chat_msgCallDownRedDrawable = resources.getDrawable(R.drawable.chat_calls_incoming).mutate();
ActionBar/Theme.java:            chat_msgCallDownGreenDrawable = resources.getDrawable(R.drawable.chat_calls_incoming).mutate();
ActionBar/Theme.java:                chat_pollCheckDrawable[a] = resources.getDrawable(R.drawable.poll_right).mutate();
ActionBar/Theme.java:                chat_pollCrossDrawable[a] = resources.getDrawable(R.drawable.poll_wrong).mutate();
ActionBar/Theme.java:                chat_pollHintDrawable[a] = resources.getDrawable(R.drawable.smiles_panel_objects).mutate();
ActionBar/Theme.java:                chat_psaHelpDrawable[a] = resources.getDrawable(R.drawable.msg_psa).mutate();
ActionBar/Theme.java:            calllog_msgCallUpRedDrawable = resources.getDrawable(R.drawable.ic_call_made_green_18dp).mutate();
ActionBar/Theme.java:            calllog_msgCallUpGreenDrawable = resources.getDrawable(R.drawable.ic_call_made_green_18dp).mutate();
ActionBar/Theme.java:            calllog_msgCallDownRedDrawable = resources.getDrawable(R.drawable.ic_call_received_green_18dp).mutate();
ActionBar/Theme.java:            calllog_msgCallDownGreenDrawable = resources.getDrawable(R.drawable.ic_call_received_green_18dp).mutate();
ActionBar/Theme.java:            chat_msgAvatarLiveLocationDrawable = resources.getDrawable(R.drawable.livepin).mutate();
ActionBar/Theme.java:            chat_inlineResultFile = resources.getDrawable(R.drawable.bot_file);
ActionBar/Theme.java:            chat_inlineResultAudio = resources.getDrawable(R.drawable.bot_music);
ActionBar/Theme.java:            chat_inlineResultLocation = resources.getDrawable(R.drawable.bot_location);
ActionBar/Theme.java:            chat_redLocationIcon = resources.getDrawable(R.drawable.map_pin).mutate();
ActionBar/Theme.java:            chat_botLinkDrawalbe = resources.getDrawable(R.drawable.bot_link);
ActionBar/Theme.java:            chat_botInlineDrawable = resources.getDrawable(R.drawable.bot_lines);
ActionBar/Theme.java:            chat_commentDrawable = resources.getDrawable(R.drawable.msg_msgbubble);
ActionBar/Theme.java:            chat_commentStickerDrawable = resources.getDrawable(R.drawable.msg_msgbubble2);
ActionBar/Theme.java:            chat_commentArrowDrawable = resources.getDrawable(R.drawable.msg_arrowright);
ActionBar/Theme.java:            chat_systemDrawable = resources.getDrawable(R.drawable.system);
ActionBar/Theme.java:            chat_contextResult_shadowUnderSwitchDrawable = resources.getDrawable(R.drawable.header_shadow).mutate();
ActionBar/Theme.java:            chat_attachEmptyDrawable = resources.getDrawable(R.drawable.nophotos3);
ActionBar/Theme.java:            chat_cornerOuter[0] = resources.getDrawable(R.drawable.corner_out_tl);
ActionBar/Theme.java:            chat_cornerOuter[1] = resources.getDrawable(R.drawable.corner_out_tr);
ActionBar/Theme.java:            chat_cornerOuter[2] = resources.getDrawable(R.drawable.corner_out_br);
ActionBar/Theme.java:            chat_cornerOuter[3] = resources.getDrawable(R.drawable.corner_out_bl);
ActionBar/Theme.java:            chat_cornerInner[0] = resources.getDrawable(R.drawable.corner_in_tr);
ActionBar/Theme.java:            chat_cornerInner[1] = resources.getDrawable(R.drawable.corner_in_tl);
ActionBar/Theme.java:            chat_cornerInner[2] = resources.getDrawable(R.drawable.corner_in_br);
ActionBar/Theme.java:            chat_cornerInner[3] = resources.getDrawable(R.drawable.corner_in_bl);
ActionBar/Theme.java:            chat_shareIconDrawable = resources.getDrawable(R.drawable.share_arrow).mutate();
ActionBar/Theme.java:            chat_replyIconDrawable = resources.getDrawable(R.drawable.fast_reply);
ActionBar/Theme.java:            chat_goIconDrawable = resources.getDrawable(R.drawable.message_arrow);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[0][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.audio_mini_arrow);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[0][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.audio_mini_arrow);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[1][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.audio_mini_cancel);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[1][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.audio_mini_cancel);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[2][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.audio_mini_arrow);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[2][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.audio_mini_arrow);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[3][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.audio_mini_cancel);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[3][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.audio_mini_cancel);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[4][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.video_mini_arrow);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[4][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.video_mini_arrow);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[5][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.video_mini_cancel);
ActionBar/Theme.java:            chat_fileMiniStatesDrawable[5][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(22), R.drawable.video_mini_cancel);
ActionBar/Theme.java:            chat_flameIcon = resources.getDrawable(R.drawable.burn).mutate();
ActionBar/Theme.java:            chat_gifIcon = resources.getDrawable(R.drawable.msg_round_gif_m).mutate();
ActionBar/Theme.java:            chat_fileStatesDrawable[0][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_play_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[0][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_play_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[1][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_pause_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[1][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_pause_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[2][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_load_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[2][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_load_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[3][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_file_s);
ActionBar/Theme.java:            chat_fileStatesDrawable[3][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_file_s);
ActionBar/Theme.java:            chat_fileStatesDrawable[4][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_cancel_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[4][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_cancel_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[5][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_play_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[5][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_play_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[6][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_pause_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[6][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_pause_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[7][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_load_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[7][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_load_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[8][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_file_s);
ActionBar/Theme.java:            chat_fileStatesDrawable[8][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_file_s);
ActionBar/Theme.java:            chat_fileStatesDrawable[9][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_cancel_m);
ActionBar/Theme.java:            chat_fileStatesDrawable[9][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_round_cancel_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[0][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_load_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[0][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_load_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[1][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_cancel_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[1][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_cancel_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[2][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_gif_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[2][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_gif_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[3][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_play_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[3][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_play_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[4][0] = chat_photoStatesDrawables[4][1] = resources.getDrawable(R.drawable.burn);
ActionBar/Theme.java:            chat_photoStatesDrawables[5][0] = chat_photoStatesDrawables[5][1] = resources.getDrawable(R.drawable.circle);
ActionBar/Theme.java:            chat_photoStatesDrawables[6][0] = chat_photoStatesDrawables[6][1] = resources.getDrawable(R.drawable.photocheck);
ActionBar/Theme.java:            chat_photoStatesDrawables[7][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_load_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[7][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_load_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[8][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_cancel_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[8][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_cancel_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[9][0] = resources.getDrawable(R.drawable.doc_big).mutate();
ActionBar/Theme.java:            chat_photoStatesDrawables[9][1] = resources.getDrawable(R.drawable.doc_big).mutate();
ActionBar/Theme.java:            chat_photoStatesDrawables[10][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_load_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[10][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_load_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[11][0] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_cancel_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[11][1] = createCircleDrawableWithIcon(AndroidUtilities.dp(48), R.drawable.msg_round_cancel_m);
ActionBar/Theme.java:            chat_photoStatesDrawables[12][0] = resources.getDrawable(R.drawable.doc_big).mutate();
ActionBar/Theme.java:            chat_photoStatesDrawables[12][1] = resources.getDrawable(R.drawable.doc_big).mutate();
ActionBar/Theme.java:            chat_contactDrawable[0] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_contact);
ActionBar/Theme.java:            chat_contactDrawable[1] = createCircleDrawableWithIcon(AndroidUtilities.dp(44), R.drawable.msg_contact);
ActionBar/Theme.java:            chat_locationDrawable[0] = resources.getDrawable(R.drawable.msg_location).mutate();
ActionBar/Theme.java:            chat_locationDrawable[1] = resources.getDrawable(R.drawable.msg_location).mutate();
ActionBar/Theme.java:            chat_composeShadowDrawable = context.getResources().getDrawable(R.drawable.compose_panel_shadow);
ActionBar/Theme.java:            profile_verifiedDrawable = resources.getDrawable(R.drawable.verified_area).mutate();
ActionBar/Theme.java:            profile_verifiedCheckDrawable = resources.getDrawable(R.drawable.verified_check).mutate();
ActionBar/Theme.java:                            wallpaper = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.background_hd);
ActionBar/Theme.java:                                    wallpaper = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.background_hd);
ActionIntroActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ActionIntroActivity.java:                imageView.setImageResource(Theme.getCurrentTheme().isDark() ? R.drawable.groupsintro2 : R.drawable.groupsintro);
ActionIntroActivity.java:                drawable1 = context.getResources().getDrawable(R.drawable.sim_old);
ActionIntroActivity.java:                drawable2 = context.getResources().getDrawable(R.drawable.sim_new);
Adapters/ContactsAdapter.java:                Drawable drawable = Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_invite, false);
Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("AddPeopleNearby", R.string.AddPeopleNearby), R.drawable.menu_location, false);
Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("ChannelInviteViaLink", R.string.ChannelInviteViaLink), R.drawable.profile_link, false);
Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("InviteToGroupByLink", R.string.InviteToGroupByLink), R.drawable.profile_link, false);
Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("NewGroup", R.string.NewGroup), R.drawable.menu_groups, false);
Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_secret, false);
Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("NewChannel", R.string.NewChannel), R.drawable.menu_broadcast, false);
Adapters/DialogsAdapter.java:                v.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
Adapters/DialogsAdapter.java:                Drawable drawable = Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
Adapters/DialogsAdapter.java:                Drawable drawable = Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
Adapters/DialogsAdapter.java:                    arrowDrawable = mContext.getResources().getDrawable(R.drawable.arrow_newchat);
Adapters/DialogsAdapter.java:                cell.setTextAndIcon(LocaleController.getString("CreateGroupForImport", R.string.CreateGroupForImport), R.drawable.groups_create, dialogsCount != 0);
Adapters/DrawerLayoutAdapter.java:            newGroupIcon = R.drawable.menu_groups_ny;
Adapters/DrawerLayoutAdapter.java:            //newSecretIcon = R.drawable.menu_secret_ny;
Adapters/DrawerLayoutAdapter.java:            //newChannelIcon = R.drawable.menu_channel_ny;
Adapters/DrawerLayoutAdapter.java:            contactsIcon = R.drawable.menu_contacts_ny;
Adapters/DrawerLayoutAdapter.java:            callsIcon = R.drawable.menu_calls_ny;
Adapters/DrawerLayoutAdapter.java:            savedIcon = R.drawable.menu_bookmarks_ny;
Adapters/DrawerLayoutAdapter.java:            settingsIcon = R.drawable.menu_settings_ny;
Adapters/DrawerLayoutAdapter.java:            inviteIcon = R.drawable.menu_invite_ny;
Adapters/DrawerLayoutAdapter.java:            helpIcon = R.drawable.menu_help_ny;
Adapters/DrawerLayoutAdapter.java:            peopleNearbyIcon = R.drawable.menu_nearby_ny;
Adapters/DrawerLayoutAdapter.java:            newGroupIcon = R.drawable.menu_groups_14;
Adapters/DrawerLayoutAdapter.java:            //newSecretIcon = R.drawable.menu_secret_14;
Adapters/DrawerLayoutAdapter.java:            //newChannelIcon = R.drawable.menu_broadcast_14;
Adapters/DrawerLayoutAdapter.java:            contactsIcon = R.drawable.menu_contacts_14;
Adapters/DrawerLayoutAdapter.java:            callsIcon = R.drawable.menu_calls_14;
Adapters/DrawerLayoutAdapter.java:            savedIcon = R.drawable.menu_bookmarks_14;
Adapters/DrawerLayoutAdapter.java:            settingsIcon = R.drawable.menu_settings_14;
Adapters/DrawerLayoutAdapter.java:            inviteIcon = R.drawable.menu_secret_ny;
Adapters/DrawerLayoutAdapter.java:            helpIcon = R.drawable.menu_help;
Adapters/DrawerLayoutAdapter.java:            peopleNearbyIcon = R.drawable.menu_secret_14;
Adapters/DrawerLayoutAdapter.java:            newGroupIcon = R.drawable.menu_groups_hw;
Adapters/DrawerLayoutAdapter.java:            //newSecretIcon = R.drawable.menu_secret_hw;
Adapters/DrawerLayoutAdapter.java:            //newChannelIcon = R.drawable.menu_broadcast_hw;
Adapters/DrawerLayoutAdapter.java:            contactsIcon = R.drawable.menu_contacts_hw;
Adapters/DrawerLayoutAdapter.java:            callsIcon = R.drawable.menu_calls_hw;
Adapters/DrawerLayoutAdapter.java:            savedIcon = R.drawable.menu_bookmarks_hw;
Adapters/DrawerLayoutAdapter.java:            settingsIcon = R.drawable.menu_settings_hw;
Adapters/DrawerLayoutAdapter.java:            inviteIcon = R.drawable.menu_invite_hw;
Adapters/DrawerLayoutAdapter.java:            helpIcon = R.drawable.menu_help_hw;
Adapters/DrawerLayoutAdapter.java:            peopleNearbyIcon = R.drawable.menu_secret_hw;
Adapters/DrawerLayoutAdapter.java:            newGroupIcon = R.drawable.menu_groups;
Adapters/DrawerLayoutAdapter.java:            //newSecretIcon = R.drawable.menu_secret;
Adapters/DrawerLayoutAdapter.java:            //newChannelIcon = R.drawable.menu_broadcast;
Adapters/DrawerLayoutAdapter.java:            contactsIcon = R.drawable.menu_contacts;
Adapters/DrawerLayoutAdapter.java:            callsIcon = R.drawable.menu_calls;
Adapters/DrawerLayoutAdapter.java:            savedIcon = R.drawable.menu_saved;
Adapters/DrawerLayoutAdapter.java:            settingsIcon = R.drawable.menu_settings;
Adapters/DrawerLayoutAdapter.java:            inviteIcon = R.drawable.menu_invite;
Adapters/DrawerLayoutAdapter.java:            helpIcon = R.drawable.menu_help;
Adapters/DrawerLayoutAdapter.java:            peopleNearbyIcon = R.drawable.menu_nearby;
Adapters/FiltersView.java:            new MediaFilterData(R.drawable.search_media, R.drawable.search_media_filled, LocaleController.getString("SharedMediaTab2", R.string.SharedMediaTab2), new TLRPC.TL_inputMessagesFilterPhotoVideo(), FILTER_TYPE_MEDIA),
Adapters/FiltersView.java:            new MediaFilterData(R.drawable.search_links, R.drawable.search_links_filled, LocaleController.getString("SharedLinksTab2", R.string.SharedLinksTab2), new TLRPC.TL_inputMessagesFilterUrl(), FILTER_TYPE_LINKS),
Adapters/FiltersView.java:            new MediaFilterData(R.drawable.search_files, R.drawable.search_files_filled, LocaleController.getString("SharedFilesTab2", R.string.SharedFilesTab2), new TLRPC.TL_inputMessagesFilterDocument(), FILTER_TYPE_FILES),
Adapters/FiltersView.java:            new MediaFilterData(R.drawable.search_music, R.drawable.search_music_filled, LocaleController.getString("SharedMusicTab2", R.string.SharedMusicTab2), new TLRPC.TL_inputMessagesFilterMusic(), FILTER_TYPE_MUSIC),
Adapters/FiltersView.java:            new MediaFilterData(R.drawable.search_voice, R.drawable.search_voice_filled, LocaleController.getString("SharedVoiceTab2", R.string.SharedVoiceTab2), new TLRPC.TL_inputMessagesFilterRoundVoice(), FILTER_TYPE_VOICE)
Adapters/FiltersView.java:                    MediaFilterData data = new MediaFilterData(R.drawable.search_users, R.drawable.search_users_filled, title, null, FILTER_TYPE_CHAT);
Adapters/FiltersView.java:                    MediaFilterData data = new MediaFilterData(R.drawable.search_users, R.drawable.search_users_filled, title, null, FILTER_TYPE_CHAT);
Adapters/FiltersView.java:                MediaFilterData data = new MediaFilterData(R.drawable.search_date, R.drawable.search_date_filled, dateData.title, null, FILTER_TYPE_DATE);
Adapters/FiltersView.java:                        CombinedDrawable combinedDrawable = Theme.createCircleDrawableWithIcon(AndroidUtilities.dp(32), R.drawable.chats_saved);
Adapters/LocationActivityAdapter.java:                Drawable drawable = Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow);
Adapters/StickersSearchAdapter.java:                emptyImageView.setImageResource(R.drawable.stickers_empty);
ArchivedStickersActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ArchivedStickersActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ArchivedStickersActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ArticleViewer.java:            popupLayout.setBackgroundDrawable(parentActivity.getResources().getDrawable(R.drawable.menu_copy));
ArticleViewer.java:        layerShadowDrawable = activity.getResources().getDrawable(R.drawable.layer_shadow);
ArticleViewer.java:        slideDotDrawable = activity.getResources().getDrawable(R.drawable.slide_dot_small);
ArticleViewer.java:        slideDotBigDrawable = activity.getResources().getDrawable(R.drawable.slide_dot_big);
ArticleViewer.java:        searchShadow.setBackgroundResource(R.drawable.header_shadow);
ArticleViewer.java:        menuButton.setIcon(R.drawable.ic_ab_other);
ArticleViewer.java:        menuButton.addSubItem(search_item, R.drawable.msg_search, LocaleController.getString("Search", R.string.Search));
ArticleViewer.java:        menuButton.addSubItem(share_item, R.drawable.msg_share, LocaleController.getString("ShareFile", R.string.ShareFile));
ArticleViewer.java:        menuButton.addSubItem(open_item, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
ArticleViewer.java:        menuButton.addSubItem(settings_item, R.drawable.menu_settings, LocaleController.getString("Settings", R.string.Settings));
ArticleViewer.java:        searchUpButton.setImageResource(R.drawable.msg_go_up);
ArticleViewer.java:        searchDownButton.setImageResource(R.drawable.msg_go_down);
ArticleViewer.java:            Drawable drawable = Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, 0xff000000);
ArticleViewer.java:                linkDrawable = getResources().getDrawable(R.drawable.instant_link);
ArticleViewer.java:            imageView.setImageResource(R.drawable.list_check);
AvatarPreviewer.java:        OPEN_PROFILE("OpenProfile", R.string.OpenProfile, R.drawable.msg_openprofile),
AvatarPreviewer.java:        OPEN_CHANNEL("OpenChannel2", R.string.OpenChannel2, R.drawable.msg_channel),
AvatarPreviewer.java:        OPEN_GROUP("OpenGroup2", R.string.OpenGroup2, R.drawable.msg_discussion),
AvatarPreviewer.java:        SEND_MESSAGE("SendMessage", R.string.SendMessage, R.drawable.msg_discussion),
AvatarPreviewer.java:        MENTION("Mention", R.string.Mention, R.drawable.msg_mention);
AvatarPreviewer.java:            arrowDrawable = ContextCompat.getDrawable(context, R.drawable.preview_arrow);
BubbleActivity.java:        getWindow().setBackgroundDrawableResource(R.drawable.transparent);
CacheControlActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
CacheControlActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
CacheControlActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
CacheControlActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
CallLogActivity.java:		greenDrawable = getParentActivity().getResources().getDrawable(R.drawable.ic_call_made_green_18dp).mutate();
CallLogActivity.java:		greenDrawable2 = getParentActivity().getResources().getDrawable(R.drawable.ic_call_received_green_18dp).mutate();
CallLogActivity.java:		redDrawable = getParentActivity().getResources().getDrawable(R.drawable.ic_call_received_green_18dp).mutate();
CallLogActivity.java:		otherItem = menu.addItem(10, R.drawable.ic_ab_other);
CallLogActivity.java:		otherItem.addSubItem(delete_all_calls, R.drawable.msg_delete, LocaleController.getString("DeleteAllCalls", R.string.DeleteAllCalls));
CallLogActivity.java:			Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow).mutate();
CallLogActivity.java:		floatingButton.setImageResource(R.drawable.ic_call);
CallLogActivity.java:		actionModeViews.add(actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete)));
CallLogActivity.java:					view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
CallLogActivity.java:				customCell.imageView.setImageResource(row.video ? R.drawable.profile_video : R.drawable.profile_phone);
CameraScanActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
CameraScanActivity.java:                galleryButton.setImageResource(R.drawable.qr_gallery);
CameraScanActivity.java:            flashButton.setImageResource(R.drawable.qr_flashlight);
CancelAccountDeletionActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
CancelAccountDeletionActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
CancelAccountDeletionActivity.java:                imageView.setImageResource(R.drawable.phone_activate);
CancelAccountDeletionActivity.java:                    blackImageView.setImageResource(R.drawable.sms_devices);
CancelAccountDeletionActivity.java:                    blueImageView.setImageResource(R.drawable.sms_bubble);
CancelAccountDeletionActivity.java:                    Drawable pressedDrawable = getResources().getDrawable(R.drawable.search_dark_activated).mutate();
Cells/AccountSelectCell.java:            checkImageView.setImageResource(R.drawable.account_check);
Cells/AdminedChannelCell.java:        deleteButton.setImageResource(R.drawable.msg_panel_clear);
Cells/ArchiveHintInnerCell.java:                imageView2.setImageResource(R.drawable.chats_archive_arrow);
Cells/ArchiveHintInnerCell.java:                imageView.setImageResource(R.drawable.chats_archive_box);
Cells/ArchiveHintInnerCell.java:                imageView.setImageResource(R.drawable.chats_archive_muted);
Cells/ArchiveHintInnerCell.java:                imageView.setImageResource(R.drawable.chats_archive_pin);
Cells/BrightnessControlCell.java:        leftImageView.setImageResource(R.drawable.brightness_low);
Cells/BrightnessControlCell.java:        rightImageView.setImageResource(R.drawable.brightness_high);
Cells/ChatLoadingCell.java:        frameLayout.setBackgroundResource(R.drawable.system_loader);
Cells/ChatMessageCell.java:                            photoImage.setImageBitmap(getResources().getDrawable(R.drawable.theme_preview_image));
Cells/ChatUnreadCell.java:        backgroundLayout.setBackgroundResource(R.drawable.newmsg_divider);
Cells/ChatUnreadCell.java:        imageView.setImageResource(R.drawable.ic_ab_new);
Cells/DrawerAddCell.java:        Drawable drawable = getResources().getDrawable(R.drawable.account_add);
Cells/DrawerProfileCell.java:        shadowView.setImageResource(R.drawable.bottom_shadow);
Cells/DrawerProfileCell.java:        arrowView.setImageResource(R.drawable.menu_expand);
Cells/EmojiReplacementCell.java:            setBackgroundResource(R.drawable.stickers_back_left);
Cells/EmojiReplacementCell.java:            setBackgroundResource(R.drawable.stickers_back_center);
Cells/EmojiReplacementCell.java:            setBackgroundResource(R.drawable.stickers_back_right);
Cells/EmojiReplacementCell.java:            setBackgroundResource(R.drawable.stickers_back_all);
Cells/FeaturedStickerSetCell.java:        checkImage.setImageResource(R.drawable.sticker_added);
Cells/GroupCallInvitedCell.java:        muteButton.setImageResource(R.drawable.msg_invited);
Cells/GroupCallUserCell.java:            drawables[0] = context.getResources().getDrawable(R.drawable.verified_area).mutate();
Cells/GroupCallUserCell.java:            drawables[1] = context.getResources().getDrawable(R.drawable.verified_check).mutate();
Cells/GroupCallUserCell.java:        speakingDrawable = context.getResources().getDrawable(R.drawable.voice_volume_mini);
Cells/GroupCreateSectionCell.java:        drawable = getResources().getDrawable(R.drawable.shadowdown);
Cells/LanguageCell.java:        checkImage.setImageResource(R.drawable.sticker_added);
Cells/LocationDirectionCell.java:        buttonTextView.setLeftDrawable(R.drawable.navigate);
Cells/LocationLoadingCell.java:        imageView.setImageResource(R.drawable.location_empty);
Cells/LocationPoweredCell.java:        imageView.setImageResource(R.drawable.foursquare);
Cells/ManageChatUserCell.java:            optionsButton.setImageResource(R.drawable.ic_ab_other);
Cells/NotificationsCheckCell.java:            moveImageView.setImageResource(R.drawable.poll_reorder);
Cells/PhotoAttachCameraCell.java:        imageView.setImageResource(R.drawable.instant_camera);
Cells/PhotoAttachCameraCell.java:            backgroundView.setImageResource(R.drawable.icplaceholder);
Cells/PhotoAttachPermissionCell.java:            imageView.setImageResource(R.drawable.permissions_camera1);
Cells/PhotoAttachPermissionCell.java:            imageView2.setImageResource(R.drawable.permissions_camera2);
Cells/PhotoAttachPermissionCell.java:            imageView.setImageResource(R.drawable.permissions_gallery1);
Cells/PhotoAttachPermissionCell.java:            imageView2.setImageResource(R.drawable.permissions_gallery2);
Cells/PhotoAttachPhotoCell.java:        imageView1.setImageResource(R.drawable.play_mini_video);
Cells/PhotoAttachPhotoCell.java:        Drawable thumb = zoomOnSelect ? Theme.chat_attachEmptyDrawable : getResources().getDrawable(R.drawable.nophotos);
Cells/PhotoPickerAlbumsCell.java:            linearLayout.setBackgroundResource(R.drawable.album_shadow);
Cells/PhotoPickerPhotoCell.java:        imageView1.setImageResource(R.drawable.ic_video);
Cells/PhotoPickerPhotoCell.java:        Drawable thumb = getResources().getDrawable(R.drawable.nophotos);
Cells/PhotoPickerPhotoCell.java:        Drawable thumb = getResources().getDrawable(R.drawable.nophotos);
Cells/PollEditTextCell.java:            moveImageView.setImageResource(R.drawable.poll_reorder);
Cells/PollEditTextCell.java:            deleteImageView.setImageResource(R.drawable.poll_remove);
Cells/SendLocationCell.java:            Drawable drawable = getResources().getDrawable(R.drawable.pin);
Cells/SettingsSearchCell.java:                    Drawable drawable = getContext().getResources().getDrawable(R.drawable.settings_arrow).mutate();
Cells/SettingsSearchCell.java:                    Drawable drawable = getContext().getResources().getDrawable(R.drawable.settings_arrow).mutate();
Cells/SettingsSearchCell.java:                        Drawable drawable = getContext().getResources().getDrawable(R.drawable.settings_arrow).mutate();
Cells/ShadowSectionCell.java:        setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
Cells/ShadowSectionCell.java:        Drawable shadowDrawable = Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
Cells/SharedDocumentCell.java:                if (resId == R.drawable.files_storage) {
Cells/SharedDocumentCell.java:                } else if (resId == R.drawable.files_gallery) {
Cells/SharedDocumentCell.java:                } else if (resId == R.drawable.files_music) {
Cells/SharedDocumentCell.java:                } else if (resId == R.drawable.files_internal) {
Cells/SharedPhotoVideoCell.java:            imageView1.setImageResource(R.drawable.play_mini_video);
Cells/SharedPhotoVideoCell.java:                imageView.setImageResource(R.drawable.photo_placeholder_in);
Cells/SharedPhotoVideoCell.java:                    imageView.setImage(ImageLocation.getForDocument(qualityThumb, document), "100_100", ImageLocation.getForDocument(thumb, document), "b", ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.photo_placeholder_in), null, null, 0, messageObject);
Cells/SharedPhotoVideoCell.java:                    imageView.setImageResource(R.drawable.photo_placeholder_in);
Cells/SharedPhotoVideoCell.java:                    imageView.setImage(null, null, ImageLocation.getForObject(currentPhotoObjectThumb, messageObject.photoThumbsObject), "b", ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.photo_placeholder_in), null, null, 0, messageObject);
Cells/SharedPhotoVideoCell.java:                imageView.setImageResource(R.drawable.photo_placeholder_in);
Cells/SharingLiveLocationCell.java:            Drawable drawable = getResources().getDrawable(R.drawable.pin);
Cells/StickerCell.java:            setBackgroundResource(R.drawable.stickers_back_left);
Cells/StickerCell.java:            setBackgroundResource(R.drawable.stickers_back_center);
Cells/StickerCell.java:            setBackgroundResource(R.drawable.stickers_back_right);
Cells/StickerCell.java:            setBackgroundResource(R.drawable.stickers_back_all);
Cells/StickerSetCell.java:                optionsButton.setImageResource(R.drawable.msg_actions);
Cells/StickerSetCell.java:                reorderButton.setImageResource(R.drawable.list_reorder);
Cells/StickerSetCell.java:                optionsButton.setImageResource(R.drawable.sticker_added);
Cells/TextSelectionHelper.java:                        popupLayout.setBackgroundDrawable(textSelectionOverlay.getContext().getResources().getDrawable(R.drawable.menu_copy));
Cells/ThemeCell.java:        checkImage.setImageResource(R.drawable.sticker_added);
Cells/ThemeCell.java:            optionsButton.setImageResource(R.drawable.ic_ab_other);
Cells/ThemePreviewMessagesCell.java:        shadowDrawable = Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow);
Cells/ThemesHorizontalListCell.java:            inDrawable = context.getResources().getDrawable(R.drawable.minibubble_in).mutate();
Cells/ThemesHorizontalListCell.java:            outDrawable = context.getResources().getDrawable(R.drawable.minibubble_out).mutate();
Cells/ThemesHorizontalListCell.java:                optionsDrawable = getResources().getDrawable(R.drawable.preview_dots).mutate();
Cells/ThemesHorizontalListCell.java:                BitmapDrawable drawable = (BitmapDrawable) getResources().getDrawable(R.drawable.catstile).mutate();
Cells/ThemesHorizontalListCell.java:                        loadingDrawable = getResources().getDrawable(R.drawable.msg_theme).mutate();
Cells/ThemesHorizontalListCell.java:                        loadingDrawable = getResources().getDrawable(R.drawable.preview_custom).mutate();
Cells/ThemeTypeCell.java:        checkImage.setImageResource(R.drawable.sticker_added);
Cells/TooManyCommunitiesHintCell.java:        imageView.setImageResource(R.drawable.groups_limit1);
Cells/UserCell.java:            checkBox = new CheckBox(context, R.drawable.round_check2);
Cells/UserCell2.java:            checkBox = new CheckBox(context, R.drawable.round_check2);
Cells/WallpaperCell.java:            imageView2.setImageResource(R.drawable.ic_gallery_background);
Cells/WallpaperCell.java:            checkBox = new CheckBox(context, R.drawable.round_check2);
Cells/WallpaperCell.java:        checkDrawable = context.getResources().getDrawable(R.drawable.background_selected).mutate();
ChangeBioActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ChangeBioActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56));
ChangeNameActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ChangeNameActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
ChangePhoneActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ChangePhoneActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
ChangePhoneActivity.java:                imageView.setImageResource(R.drawable.phone_activate);
ChangePhoneActivity.java:                    blackImageView.setImageResource(R.drawable.sms_devices);
ChangePhoneActivity.java:                    blueImageView.setImageResource(R.drawable.sms_bubble);
ChangePhoneActivity.java:                    Drawable pressedDrawable = getResources().getDrawable(R.drawable.search_dark_activated).mutate();
ChangeUsernameActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ChangeUsernameActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
ChannelAdminLogActivity.java:        searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
ChannelAdminLogActivity.java:        progressView2.setBackgroundResource(R.drawable.system_loader);
ChannelAdminLogActivity.java:        bottomOverlayImage.setImageResource(R.drawable.log_info);
ChannelAdminLogActivity.java:        searchUpButton.setImageResource(R.drawable.msg_go_up);
ChannelAdminLogActivity.java:        searchDownButton.setImageResource(R.drawable.msg_go_down);
ChannelAdminLogActivity.java:        searchCalendarButton.setImageResource(R.drawable.msg_calendar);
ChannelCreateActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ChannelCreateActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
ChannelCreateActivity.java:            typeInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChannelCreateActivity.java:            adminedInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChannelCreateActivity.java:                typeInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(typeInfoCell.getContext(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChannelCreateActivity.java:                typeInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(typeInfoCell.getContext(), R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ChannelCreateActivity.java:            typeInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(typeInfoCell.getContext(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
Charts/view_data/ChartHeaderView.java:        zoomIcon = ContextCompat.getDrawable(getContext(), R.drawable.stats_zoom);
Charts/view_data/LegendSignatureView.java:        chevron.setImageResource(R.drawable.ic_chevron_right_black_18dp);
Charts/view_data/LegendSignatureView.java:        shadowDrawable = getContext().getResources().getDrawable(R.drawable.stats_tooltip).mutate();
ChatActivity.java:            searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
ChatActivity.java:            headerItem = menu.addItem(0, R.drawable.ic_ab_other);
ChatActivity.java:                headerItem.addSubItem(call, R.drawable.msg_callback, LocaleController.getString("Call", R.string.Call));
ChatActivity.java:                    headerItem.addSubItem(video_call, R.drawable.msg_videocall, LocaleController.getString("VideoCall", R.string.VideoCall));
ChatActivity.java:            editTextItem = menu.addItem(0, R.drawable.ic_ab_other);
ChatActivity.java:                headerItem.addSubItem(search, R.drawable.msg_search, LocaleController.getString("Search", R.string.Search));
ChatActivity.java:                headerItem.addSubItem(report, R.drawable.msg_report, LocaleController.getString("ReportChat", R.string.ReportChat));
ChatActivity.java:                addContactItem = headerItem.addSubItem(share_contact, R.drawable.msg_addcontact, "");
ChatActivity.java:                timeItem2 = headerItem.addSubItem(chat_enc_timer, R.drawable.msg_timer, LocaleController.getString("SetTimer", R.string.SetTimer));
ChatActivity.java:                headerItem.addSubItem(clear_history, R.drawable.msg_clear, LocaleController.getString("ClearHistory", R.string.ClearHistory));
ChatActivity.java:                headerItem.addSubItem(auto_delete_timer, R.drawable.msg_timer, LocaleController.getString("AutoDeleteSetTimer", R.string.AutoDeleteSetTimer));
ChatActivity.java:                muteItem = headerItem.addSubItem(mute, R.drawable.msg_mute, null);
ChatActivity.java:                        headerItem.addSubItem(delete_chat, R.drawable.msg_leave, LocaleController.getString("LeaveMegaMenu", R.string.LeaveMegaMenu));
ChatActivity.java:                        headerItem.addSubItem(delete_chat, R.drawable.msg_leave, LocaleController.getString("LeaveChannelMenu", R.string.LeaveChannelMenu));
ChatActivity.java:                    headerItem.addSubItem(delete_chat, R.drawable.msg_leave, LocaleController.getString("DeleteAndExit", R.string.DeleteAndExit));
ChatActivity.java:                    headerItem.addSubItem(delete_chat, R.drawable.msg_delete, LocaleController.getString("DeleteChatUser", R.string.DeleteChatUser));
ChatActivity.java:                headerItem.addSubItem(add_shortcut, R.drawable.msg_home, LocaleController.getString("AddShortcut", R.string.AddShortcut));
ChatActivity.java:                headerItem.addSubItem(bot_settings, R.drawable.menu_settings, LocaleController.getString("BotSettings", R.string.BotSettings));
ChatActivity.java:                headerItem.addSubItem(bot_help, R.drawable.menu_help, LocaleController.getString("BotHelp", R.string.BotHelp));
ChatActivity.java:            attachItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_other).setOverrideMenuClick(true).setAllowCloseAnimation(false);
ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(save_to, R.drawable.msg_download, AndroidUtilities.dp(54), LocaleController.getString("SaveToMusic", R.string.SaveToMusic)));
ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(edit, R.drawable.msg_edit, AndroidUtilities.dp(54), LocaleController.getString("Edit", R.string.Edit)));
ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(star, R.drawable.msg_fave, AndroidUtilities.dp(54), LocaleController.getString("AddToFavorites", R.string.AddToFavorites)));
ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(copy, R.drawable.msg_copy, AndroidUtilities.dp(54), LocaleController.getString("Copy", R.string.Copy)));
ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(forward, R.drawable.msg_forward, AndroidUtilities.dp(54), LocaleController.getString("Forward", R.string.Forward)));
ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete)));
ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(edit, R.drawable.msg_edit, AndroidUtilities.dp(54), LocaleController.getString("Edit", R.string.Edit)));
ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(star, R.drawable.msg_fave, AndroidUtilities.dp(54), LocaleController.getString("AddToFavorites", R.string.AddToFavorites)));
ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(copy, R.drawable.msg_copy, AndroidUtilities.dp(54), LocaleController.getString("Copy", R.string.Copy)));
ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete)));
ChatActivity.java:                    emptyView.setBackgroundResource(R.drawable.system);
ChatActivity.java:        progressView2.setBackgroundResource(R.drawable.system_loader);
ChatActivity.java:            pinnedMessageView.setBackgroundResource(R.drawable.blockpanel);
ChatActivity.java:            pinnedListButton.setImageResource(R.drawable.menu_pinnedlist);
ChatActivity.java:            closePinned.setImageResource(R.drawable.miniplayer_close);
ChatActivity.java:        topChatPanelView.setBackgroundResource(R.drawable.blockpanel);
ChatActivity.java:        closeReportSpam.setImageResource(R.drawable.miniplayer_close);
ChatActivity.java:        alertView.setBackgroundResource(R.drawable.blockpanel);
ChatActivity.java:        pagedownButtonImage.setImageResource(R.drawable.pagedown);
ChatActivity.java:        Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.pagedown_shadow).mutate();
ChatActivity.java:        mentiondownButtonImage.setImageResource(R.drawable.mentionbutton);
ChatActivity.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.pagedown_shadow).mutate();
ChatActivity.java:        replyCloseImageView.setImageResource(R.drawable.input_clear);
ChatActivity.java:            imageView.setImageResource(firstButton ? R.drawable.msg_photoeditor : R.drawable.msg_replace);
ChatActivity.java:        stickersPanelArrow.setImageResource(R.drawable.stickers_back_arrow);
ChatActivity.java:        searchUpButton.setImageResource(R.drawable.msg_go_up);
ChatActivity.java:        searchDownButton.setImageResource(R.drawable.msg_go_down);
ChatActivity.java:            searchUserButton.setImageResource(R.drawable.msg_usersearch);
ChatActivity.java:        searchCalendarButton.setImageResource(R.drawable.msg_calendar);
ChatActivity.java:        bottomOverlayImage.setImageResource(R.drawable.log_info);
ChatActivity.java:        Drawable image = context.getResources().getDrawable(R.drawable.input_reply).mutate();
ChatActivity.java:        image = context.getResources().getDrawable(R.drawable.input_forward).mutate();
ChatActivity.java:        emojiButtonRed.setBackgroundResource(R.drawable.redcircle);
ChatActivity.java:                    buttons[0].getImageView().setImageResource(editButtonText != null ? R.drawable.msg_photoeditor : R.drawable.msg_replace);
ChatActivity.java:                    replyIconImageView.setImageResource(R.drawable.group_edit);
ChatActivity.java:                replyIconImageView.setImageResource(R.drawable.msg_panel_reply);
ChatActivity.java:                replyIconImageView.setImageResource(R.drawable.msg_panel_forward);
ChatActivity.java:                replyIconImageView.setImageResource(R.drawable.msg_link);
ChatActivity.java:                starItem.setIcon(hasUnfavedSelected ? R.drawable.msg_fave : R.drawable.msg_unfave);
ChatActivity.java:                muteItem.setTextAndIcon(LocaleController.getString("UnmuteNotifications", R.string.UnmuteNotifications), R.drawable.msg_unmute);
ChatActivity.java:                muteItem.setTextAndIcon(LocaleController.getString("MuteNotifications", R.string.MuteNotifications), R.drawable.msg_mute);
ChatActivity.java:                        icons.add(R.drawable.msg_copy);
ChatActivity.java:                    icons.add(R.drawable.msg_delete);
ChatActivity.java:                    icons.add(R.drawable.msg_retry);
ChatActivity.java:                    icons.add(selectedObject.messageOwner.ttl_period != 0 ? R.drawable.msg_delete_auto : R.drawable.msg_delete);
ChatActivity.java:                            icons.add(R.drawable.msg_callback);
ChatActivity.java:                            icons.add(R.drawable.msg_reply);
ChatActivity.java:                            icons.add(R.drawable.msg_viewreplies);
ChatActivity.java:                            icons.add(R.drawable.msg_unpin);
ChatActivity.java:                            icons.add(R.drawable.msg_pin);
ChatActivity.java:                            icons.add(R.drawable.msg_edit);
ChatActivity.java:                            icons.add(R.drawable.msg_report);
ChatActivity.java:                            icons.add(R.drawable.msg_reply);
ChatActivity.java:                        icons.add(selectedObject.messageOwner.ttl_period != 0 ? R.drawable.msg_delete_auto : R.drawable.msg_delete);
ChatActivity.java:                    icons.add(R.drawable.msg_retry);
ChatActivity.java:                    icons.add(R.drawable.msg_copy);
ChatActivity.java:                    icons.add(selectedObject.messageOwner.ttl_period != 0 ? R.drawable.msg_delete_auto : R.drawable.msg_delete);
ChatActivity.java:                            icons.add(R.drawable.outline_send);
ChatActivity.java:                            icons.add(R.drawable.msg_callback);
ChatActivity.java:                                icons.add(R.drawable.msg_fave);
ChatActivity.java:                            icons.add(R.drawable.msg_reply);
ChatActivity.java:                            icons.add(R.drawable.msg_copy);
ChatActivity.java:                            icons.add(R.drawable.msg_viewreplies);
ChatActivity.java:                            icons.add(R.drawable.msg_link);
ChatActivity.java:                                        icons.add(R.drawable.msg_unvote);
ChatActivity.java:                                        icons.add(R.drawable.msg_pollstop);
ChatActivity.java:                                    icons.add(R.drawable.msg_download);
ChatActivity.java:                                    icons.add(R.drawable.msg_download);
ChatActivity.java:                                icons.add(R.drawable.msg_gif);
ChatActivity.java:                                    icons.add(R.drawable.msg_gallery);
ChatActivity.java:                                    icons.add(R.drawable.msg_shareout);
ChatActivity.java:                                icons.add(R.drawable.msg_download);
ChatActivity.java:                                icons.add(R.drawable.msg_shareout);
ChatActivity.java:                                    icons.add(R.drawable.msg_gif);
ChatActivity.java:                                icons.add(R.drawable.msg_download);
ChatActivity.java:                                icons.add(R.drawable.msg_shareout);
ChatActivity.java:                                    icons.add(R.drawable.msg_gallery);
ChatActivity.java:                            icons.add(R.drawable.msg_language);
ChatActivity.java:                            icons.add(R.drawable.msg_download);
ChatActivity.java:                            icons.add(R.drawable.msg_shareout);
ChatActivity.java:                            icons.add(R.drawable.msg_theme);
ChatActivity.java:                            icons.add(R.drawable.msg_download);
ChatActivity.java:                            icons.add(R.drawable.msg_shareout);
ChatActivity.java:                            icons.add(R.drawable.msg_gallery);
ChatActivity.java:                            icons.add(R.drawable.msg_download);
ChatActivity.java:                            icons.add(R.drawable.msg_shareout);
ChatActivity.java:                                icons.add(R.drawable.msg_sticker);
ChatActivity.java:                                icons.add(R.drawable.msg_sticker);
ChatActivity.java:                                        icons.add(R.drawable.msg_fave);
ChatActivity.java:                                    icons.add(R.drawable.msg_unfave);
ChatActivity.java:                                icons.add(R.drawable.msg_addcontact);
ChatActivity.java:                                icons.add(R.drawable.msg_copy);
ChatActivity.java:                                icons.add(R.drawable.msg_callback);
ChatActivity.java:                                    icons.add(R.drawable.msg_fave);
ChatActivity.java:                                icons.add(R.drawable.msg_unfave);
ChatActivity.java:                            icons.add(R.drawable.msg_forward);
ChatActivity.java://                            icons.add(R.drawable.msg_stats);
ChatActivity.java:                            icons.add(R.drawable.msg_unpin);
ChatActivity.java:                            icons.add(R.drawable.msg_pin);
ChatActivity.java:                            icons.add(R.drawable.msg_edit);
ChatActivity.java:                            icons.add(R.drawable.msg_schedule);
ChatActivity.java:                                icons.add(R.drawable.msg_block2);
ChatActivity.java:                                icons.add(R.drawable.msg_report);
ChatActivity.java:                            icons.add(selectedObject.messageOwner.ttl_period != 0 ? R.drawable.msg_delete_auto : R.drawable.msg_delete);
ChatActivity.java:                            icons.add(R.drawable.msg_reply);
ChatActivity.java:                            icons.add(R.drawable.msg_copy);
ChatActivity.java:                            icons.add(R.drawable.msg_viewreplies);
ChatActivity.java:                                icons.add(R.drawable.msg_gallery);
ChatActivity.java:                                icons.add(R.drawable.msg_shareout);
ChatActivity.java:                                icons.add(R.drawable.msg_download);
ChatActivity.java:                                icons.add(R.drawable.msg_shareout);
ChatActivity.java:                                icons.add(R.drawable.msg_download);
ChatActivity.java:                                icons.add(R.drawable.msg_shareout);
ChatActivity.java:                                icons.add(R.drawable.msg_gallery);
ChatActivity.java:                            icons.add(R.drawable.msg_language);
ChatActivity.java:                            icons.add(R.drawable.msg_theme);
ChatActivity.java:                            icons.add(R.drawable.msg_sticker);
ChatActivity.java:                                icons.add(R.drawable.msg_addcontact);
ChatActivity.java:                                icons.add(R.drawable.msg_copy);
ChatActivity.java:                                icons.add(R.drawable.msg_callback);
ChatActivity.java:                        icons.add(selectedObject.messageOwner.ttl_period != 0 ? R.drawable.msg_delete_auto : R.drawable.msg_delete);
ChatActivity.java:            Drawable shadowDrawable = getParentActivity().getResources().getDrawable(R.drawable.popup_fixed_alert).mutate();
ChatEditActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ChatEditActivity.java:            doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56));
ChatEditActivity.java:            logCell.setTextAndIcon(LocaleController.getString("EventLog", R.string.EventLog), R.drawable.group_log, false);
ChatEditActivity.java:            deleteInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatEditActivity.java:                    infoSectionCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatEditActivity.java:                stickersInfoCell3.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatEditActivity.java:                stickersInfoCell3.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ChatEditActivity.java:                setAvatarCell.setTextAndIcon(LocaleController.getString("ChatSetNewPhoto", R.string.ChatSetNewPhoto), R.drawable.menu_camera2, true);
ChatEditActivity.java:                setAvatarCell.setTextAndIcon(LocaleController.getString("ChatSetPhotoOrVideo", R.string.ChatSetPhotoOrVideo), R.drawable.menu_camera2, true);
ChatEditActivity.java:                setAvatarCell.setTextAndIcon(LocaleController.getString("ChatSetNewPhoto", R.string.ChatSetNewPhoto), R.drawable.menu_camera2, true);
ChatEditActivity.java:                    membersCell.setTextAndValueAndIcon(LocaleController.getString("ChannelSubscribers", R.string.ChannelSubscribers), String.format("%d", info.participants_count), R.drawable.actions_viewmembers, true);
ChatEditActivity.java:                    blockCell.setTextAndValueAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), String.format("%d", Math.max(info.banned_count, info.kicked_count)), R.drawable.actions_removed, logCell != null && logCell.getVisibility() == View.VISIBLE);
ChatEditActivity.java:                        membersCell.setTextAndValueAndIcon(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), String.format("%d", info.participants_count), R.drawable.actions_viewmembers, logCell != null && logCell.getVisibility() == View.VISIBLE);
ChatEditActivity.java:                        membersCell.setTextAndValueAndIcon(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), String.format("%d", info.participants.participants.size()), R.drawable.actions_viewmembers, logCell != null && logCell.getVisibility() == View.VISIBLE);
ChatEditActivity.java:                        blockCell.setTextAndValueAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), String.format("%d", Math.max(info.banned_count, info.kicked_count)), R.drawable.actions_removed, logCell != null && logCell.getVisibility() == View.VISIBLE);
ChatEditActivity.java:                        blockCell.setTextAndValueAndIcon(LocaleController.getString("ChannelPermissions", R.string.ChannelPermissions), String.format("%d/%d", count, 8), R.drawable.actions_permissions, true);
ChatEditActivity.java:                adminCell.setTextAndValueAndIcon(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators), String.format("%d", ChatObject.isChannel(currentChat) ? info.admins_count : getAdminCount()), R.drawable.actions_addadmin, true);
ChatEditActivity.java:                    membersCell.setTextAndIcon(LocaleController.getString("ChannelSubscribers", R.string.ChannelSubscribers), R.drawable.actions_viewmembers, true);
ChatEditActivity.java:                    blockCell.setTextAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), R.drawable.actions_removed, logCell != null && logCell.getVisibility() == View.VISIBLE);
ChatEditActivity.java:                    membersCell.setTextAndIcon(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), R.drawable.actions_viewmembers, logCell != null && logCell.getVisibility() == View.VISIBLE);
ChatEditActivity.java:                        blockCell.setTextAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), R.drawable.actions_removed, logCell != null && logCell.getVisibility() == View.VISIBLE);
ChatEditActivity.java:                        blockCell.setTextAndIcon(LocaleController.getString("ChannelPermissions", R.string.ChannelPermissions), R.drawable.actions_permissions, true);
ChatEditActivity.java:                adminCell.setTextAndIcon(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators), R.drawable.actions_addadmin, true);
ChatEditActivity.java:                    inviteLinksCell.setTextAndValueAndIcon(LocaleController.getString("InviteLinks", R.string.InviteLinks), Integer.toString(info.invitesCount), R.drawable.actions_link, true);
ChatEditActivity.java:                    inviteLinksCell.setTextAndValueAndIcon(LocaleController.getString("InviteLinks", R.string.InviteLinks), "1", R.drawable.actions_link, true);
ChatEditTypeActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ChatEditTypeActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
ChatEditTypeActivity.java:        checkTextView.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatEditTypeActivity.java:        manageLinksTextView.setTextAndIcon(LocaleController.getString("ManageInviteLinks", R.string.ManageInviteLinks), R.drawable.actions_link, false);
ChatEditTypeActivity.java:                typeInfoCell.setBackgroundDrawable(checkTextView.getVisibility() == View.VISIBLE ? null : Theme.getThemedDrawable(typeInfoCell.getContext(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatEditTypeActivity.java:                adminedInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(adminedInfoCell.getContext(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatEditTypeActivity.java:                typeInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(typeInfoCell.getContext(), R.drawable.greydivider_top, Theme.key_windowBackgroundGrayShadow));
ChatEditTypeActivity.java:            typeInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(typeInfoCell.getContext(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatEditTypeActivity.java:                typeInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(typeInfoCell.getContext(), R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ChatEditTypeActivity.java:                manageLinksInfoCell.setBackground(Theme.getThemedDrawable(typeInfoCell.getContext(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatEditTypeActivity.java:                typeInfoCell.setBackgroundDrawable(checkTextView.getVisibility() == View.VISIBLE ? null : Theme.getThemedDrawable(typeInfoCell.getContext(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatEditTypeActivity.java:        typeInfoCell.setBackgroundDrawable(checkTextView.getVisibility() == View.VISIBLE ? null : Theme.getThemedDrawable(typeInfoCell.getContext(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatLinkActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ChatLinkActivity.java:        searchItem = menu.addItem(search_button, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
ChatLinkActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatLinkActivity.java:                            actionCell.setText(LocaleController.getString("DiscussionUnlinkGroup", R.string.DiscussionUnlinkGroup), null, R.drawable.actions_remove_user, false);
ChatLinkActivity.java:                            actionCell.setText(LocaleController.getString("DiscussionCreateGroup", R.string.DiscussionCreateGroup), null, R.drawable.menu_groups, true);
ChatLinkActivity.java:                        actionCell.setText(LocaleController.getString("DiscussionUnlinkChannel", R.string.DiscussionUnlinkChannel), null, R.drawable.actions_remove_user, false);
ChatRightsEditActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ChatRightsEditActivity.java:            menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
ChatRightsEditActivity.java:                    dotImageView.setImageResource(R.drawable.list_circle);
ChatRightsEditActivity.java:                    dotImageView.setImageResource(R.drawable.list_circle);
ChatRightsEditActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatRightsEditActivity.java:                            checkCell.setIcon(defaultBannedRights.change_info ? R.drawable.permission_locked : 0);
ChatRightsEditActivity.java:                            checkCell.setIcon(defaultBannedRights.invite_users ? R.drawable.permission_locked : 0);
ChatRightsEditActivity.java:                            checkCell.setIcon(defaultBannedRights.pin_messages ? R.drawable.permission_locked : 0);
ChatRightsEditActivity.java:                        checkCell.setIcon(defaultBannedRights.send_messages ? R.drawable.permission_locked : 0);
ChatRightsEditActivity.java:                        checkCell.setIcon(defaultBannedRights.send_media ? R.drawable.permission_locked : 0);
ChatRightsEditActivity.java:                        checkCell.setIcon(defaultBannedRights.send_stickers ? R.drawable.permission_locked : 0);
ChatRightsEditActivity.java:                        checkCell.setIcon(defaultBannedRights.embed_links ? R.drawable.permission_locked : 0);
ChatRightsEditActivity.java:                        checkCell.setIcon(defaultBannedRights.send_polls ? R.drawable.permission_locked : 0);
ChatRightsEditActivity.java:                        shadowCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, removeAdminRow == -1 && rankRow == -1 ? R.drawable.greydivider_bottom : R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ChatRightsEditActivity.java:                        shadowCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatRightsEditActivity.java:                        shadowCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, canEdit ? R.drawable.greydivider : R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatRightsEditActivity.java:                        shadowCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ChatUsersActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ChatUsersActivity.java:            searchItem = menu.addItem(search_button, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
ChatUsersActivity.java:                doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
ChatUsersActivity.java:                icons.add(R.drawable.actions_addadmin);
ChatUsersActivity.java:                        icons.add(R.drawable.actions_permissions);
ChatUsersActivity.java:                icons.add(R.drawable.actions_remove_user);
ChatUsersActivity.java:                        R.drawable.actions_permissions,
ChatUsersActivity.java:                        R.drawable.chats_delete};
ChatUsersActivity.java:                        R.drawable.actions_addmember2,
ChatUsersActivity.java:                        R.drawable.chats_delete};
ChatUsersActivity.java:                            R.drawable.actions_addadmin,
ChatUsersActivity.java:                            R.drawable.actions_remove_user};
ChatUsersActivity.java:                            R.drawable.actions_remove_user};
ChatUsersActivity.java:                    frameLayout.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatUsersActivity.java:                    imageView.setImageResource(R.drawable.group_ban_empty);
ChatUsersActivity.java:                            privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatUsersActivity.java:                            privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatUsersActivity.java:                            privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatUsersActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ChatUsersActivity.java:                            actionCell.setText(LocaleController.getString("ChannelAddException", R.string.ChannelAddException), null, R.drawable.actions_addmember2, participantsStartRow != -1);
ChatUsersActivity.java:                            actionCell.setText(LocaleController.getString("ChannelBlockUser", R.string.ChannelBlockUser), null, R.drawable.actions_removed, false);
ChatUsersActivity.java:                            actionCell.setText(LocaleController.getString("ChannelAddAdmin", R.string.ChannelAddAdmin), null, R.drawable.add_admin, showDivider);
ChatUsersActivity.java:                                actionCell.setText(LocaleController.getString("AddSubscriber", R.string.AddSubscriber), null, R.drawable.actions_addmember2, showDivider);
ChatUsersActivity.java:                                actionCell.setText(LocaleController.getString("AddMember", R.string.AddMember), null, R.drawable.actions_addmember2, showDivider);
ChatUsersActivity.java:                        actionCell.setText(LocaleController.getString("EventLog", R.string.EventLog), null, R.drawable.group_log, false);
ChatUsersActivity.java:                        actionCell.setText(LocaleController.getString("ChannelInviteViaLink", R.string.ChannelInviteViaLink), null, R.drawable.profile_link, true);
ChatUsersActivity.java:                        actionCell.setText(LocaleController.getString("BroadcastGroupConvert", R.string.BroadcastGroupConvert), null, R.drawable.msg_channel, false);
ChatUsersActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ChatUsersActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ChatUsersActivity.java:                            checkCell.setIcon(R.drawable.permission_locked);
Components/AdminLogFilterAlert.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
Components/AdminLogFilterAlert.java:        shadow.setBackgroundResource(R.drawable.header_shadow_reverse);
Components/AlertsCreator.java:                R.drawable.notifications_on,
Components/AlertsCreator.java:                R.drawable.notifications_mute1h,
Components/AlertsCreator.java:                R.drawable.notifications_mute2d,
Components/AlertsCreator.java:                R.drawable.notifications_settings,
Components/AlertsCreator.java:                R.drawable.notifications_off
Components/AlertsCreator.java:                optionsButton.setIcon(R.drawable.ic_ab_other);
Components/AlertsCreator.java:                    R.drawable.msg_report_spam,
Components/AlertsCreator.java:                    R.drawable.msg_report_violence,
Components/AlertsCreator.java:                    R.drawable.msg_report_abuse,
Components/AlertsCreator.java:                    R.drawable.msg_report_xxx,
Components/AlertsCreator.java:                    R.drawable.msg_report_other
Components/AlertsCreator.java:                    R.drawable.msg_report_spam,
Components/AlertsCreator.java:                    R.drawable.msg_report_fake,
Components/AlertsCreator.java:                    R.drawable.msg_report_violence,
Components/AlertsCreator.java:                    R.drawable.msg_report_abuse,
Components/AlertsCreator.java:                    R.drawable.msg_report_xxx,
Components/AlertsCreator.java:                    R.drawable.msg_report_other
Components/AlertsCreator.java:        builder.setTopImage(R.drawable.permissions_contacts, Theme.getColor(Theme.key_dialogTopBackground));
Components/AudioPlayerAlert.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
Components/AudioPlayerAlert.java:        searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
Components/AudioPlayerAlert.java:        actionBarShadow.setBackgroundResource(R.drawable.header_shadow);
Components/AudioPlayerAlert.java:        playbackSpeedButton.setImageResource(R.drawable.voice2x);
Components/AudioPlayerAlert.java:        repeatSongItem = repeatButton.addSubItem(3, R.drawable.player_new_repeatone, LocaleController.getString("RepeatSong", R.string.RepeatSong));
Components/AudioPlayerAlert.java:        repeatListItem = repeatButton.addSubItem(4, R.drawable.player_new_repeatall, LocaleController.getString("RepeatList", R.string.RepeatList));
Components/AudioPlayerAlert.java:        shuffleListItem = repeatButton.addSubItem(2, R.drawable.player_new_shuffle, LocaleController.getString("ShuffleList", R.string.ShuffleList));
Components/AudioPlayerAlert.java:        reverseOrderItem = repeatButton.addSubItem(1, R.drawable.player_new_order, LocaleController.getString("ReverseOrder", R.string.ReverseOrder));
Components/AudioPlayerAlert.java:        optionsButton.setIcon(R.drawable.ic_ab_other);
Components/AudioPlayerAlert.java:        optionsButton.addSubItem(1, R.drawable.msg_forward, LocaleController.getString("Forward", R.string.Forward));
Components/AudioPlayerAlert.java:        optionsButton.addSubItem(2, R.drawable.msg_shareout, LocaleController.getString("ShareFile", R.string.ShareFile));
Components/AudioPlayerAlert.java:        optionsButton.addSubItem(5, R.drawable.msg_download, LocaleController.getString("SaveToMusic", R.string.SaveToMusic));
Components/AudioPlayerAlert.java:        optionsButton.addSubItem(4, R.drawable.msg_message, LocaleController.getString("ShowInChat", R.string.ShowInChat));
Components/AudioPlayerAlert.java:        emptyImageView.setImageResource(R.drawable.music_empty);
Components/AudioPlayerAlert.java:                    repeatButton.setIcon(R.drawable.player_new_shuffle);
Components/AudioPlayerAlert.java:                    repeatButton.setIcon(R.drawable.player_new_repeat_shuffle);
Components/AudioPlayerAlert.java:                    repeatButton.setIcon(R.drawable.player_new_order);
Components/AudioPlayerAlert.java:                    repeatButton.setIcon(R.drawable.player_new_repeat_reverse);
Components/AudioPlayerAlert.java:                repeatButton.setIcon(R.drawable.player_new_repeatall);
Components/AudioPlayerAlert.java:            repeatButton.setIcon(R.drawable.player_new_repeatone);
Components/BetterRatingView.java:		filledStar = BitmapFactory.decodeResource(getResources(), R.drawable.ic_rating_star_filled).extractAlpha();
Components/BetterRatingView.java:		hollowStar = BitmapFactory.decodeResource(getResources(), R.drawable.ic_rating_star).extractAlpha();
Components/BlockingUpdateView.java:        imageView.setImageResource(R.drawable.intro_tg_plane);
Components/Bulletin.java:                undoImageView.setImageResource(R.drawable.chats_undo);
Components/ChatActivityEnterView.java:            micDrawable = getResources().getDrawable(R.drawable.input_mic_pressed).mutate();
Components/ChatActivityEnterView.java:            cameraDrawable = getResources().getDrawable(R.drawable.input_video_pressed).mutate();
Components/ChatActivityEnterView.java:            sendDrawable = getResources().getDrawable(R.drawable.attach_send).mutate();
Components/ChatActivityEnterView.java:            micOutline = getResources().getDrawable(R.drawable.input_mic).mutate();
Components/ChatActivityEnterView.java:            cameraOutline = getResources().getDrawable(R.drawable.input_video).mutate();
Components/ChatActivityEnterView.java:            lockShadowDrawable = getResources().getDrawable(R.drawable.lock_round_shadow);
Components/ChatActivityEnterView.java:            tooltipBackgroundArrow = ContextCompat.getDrawable(context, R.drawable.tooltip_arrow);
Components/ChatActivityEnterView.java:                Drawable drawable1 = context.getResources().getDrawable(R.drawable.input_calendar1).mutate();
Components/ChatActivityEnterView.java:                Drawable drawable2 = context.getResources().getDrawable(R.drawable.input_calendar2).mutate();
Components/ChatActivityEnterView.java:            botButtonDrawablel.setIcon(R.drawable.input_bot2, false);
Components/ChatActivityEnterView.java:            notifySilentDrawable = new CrossOutDrawable(context, R.drawable.input_notify_on, Theme.key_chat_messagePanelIcons);
Components/ChatActivityEnterView.java:                        notifySilentDrawable = new CrossOutDrawable(context, R.drawable.input_notify_on, Theme.key_chat_messagePanelIcons);
Components/ChatActivityEnterView.java:            attachButton.setImageResource(R.drawable.qr_gallery);
Components/ChatActivityEnterView.java:        audioSendButton.setImageResource(R.drawable.input_mic);
Components/ChatActivityEnterView.java:            videoSendButton.setImageResource(R.drawable.input_video);
Components/ChatActivityEnterView.java:            sendButtonDrawable = context.getResources().getDrawable(R.drawable.input_schedule).mutate();
Components/ChatActivityEnterView.java:            sendButtonInverseDrawable = context.getResources().getDrawable(R.drawable.input_schedule).mutate();
Components/ChatActivityEnterView.java:            inactinveSendButtonDrawable = context.getResources().getDrawable(R.drawable.input_schedule).mutate();
Components/ChatActivityEnterView.java:            sendButtonDrawable = context.getResources().getDrawable(R.drawable.ic_send).mutate();
Components/ChatActivityEnterView.java:            sendButtonInverseDrawable = context.getResources().getDrawable(R.drawable.ic_send).mutate();
Components/ChatActivityEnterView.java:            inactinveSendButtonDrawable = context.getResources().getDrawable(R.drawable.ic_send).mutate();
Components/ChatActivityEnterView.java:        doneCheckDrawable = context.getResources().getDrawable(R.drawable.input_done).mutate();
Components/ChatActivityEnterView.java:                        cell.setTextAndIcon(LocaleController.getString("SetReminder", R.string.SetReminder), R.drawable.msg_schedule);
Components/ChatActivityEnterView.java:                        cell.setTextAndIcon(LocaleController.getString("ScheduleMessage", R.string.ScheduleMessage), R.drawable.msg_schedule);
Components/ChatActivityEnterView.java:                    cell.setTextAndIcon(LocaleController.getString("SendWithoutSound", R.string.SendWithoutSound), R.drawable.input_notify_off);
Components/ChatActivityEnterView.java:                    notifySilentDrawable = new CrossOutDrawable(getContext(), R.drawable.input_notify_on, Theme.key_chat_messagePanelIcons);
Components/ChatActivityEnterView.java:                    botButtonDrawablel.setIcon(R.drawable.input_keyboard, true);
Components/ChatActivityEnterView.java:                    botButtonDrawablel.setIcon(R.drawable.input_bot2, true);
Components/ChatActivityEnterView.java:                botButtonDrawablel.setIcon(R.drawable.input_bot1, true);
Components/ChatActivityEnterView.java:            //emojiButton[animated ? 1 : 0].setImageResource(R.drawable.input_keyboard);
Components/ChatActivityEnterView.java:            emojiButton[animated ? 1 : 0].setImageResource(R.drawable.input_smile);
Components/ChatActivityEnterView.java:            emojiButton[animated ? 1 : 0].setImageResource(R.drawable.input_smile);
Components/ChatActivityEnterView.java:            emojiButton[animated ? 1 : 0].setImageResource(R.drawable.input_sticker);
Components/ChatActivityEnterView.java:            emojiButton[animated ? 1 : 0].setImageResource(R.drawable.input_gif);
Components/ChatAttachAlert.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
Components/ChatAttachAlert.java:        selectedMenuItem.setIcon(R.drawable.ic_ab_other);
Components/ChatAttachAlert.java:        searchItem.setIcon(R.drawable.ic_ab_search);
Components/ChatAttachAlert.java:        shadow.setBackgroundResource(R.drawable.attach_shadow);
Components/ChatAttachAlert.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
Components/ChatAttachAlert.java:        writeButton.setImageResource(R.drawable.attach_send);
Components/ChatAttachAlert.java:                        itemCells[a].setTextAndIcon(LocaleController.getString("SetReminder", R.string.SetReminder), R.drawable.msg_schedule);
Components/ChatAttachAlert.java:                        itemCells[a].setTextAndIcon(LocaleController.getString("ScheduleMessage", R.string.ScheduleMessage), R.drawable.msg_schedule);
Components/ChatAttachAlert.java:                    itemCells[a].setTextAndIcon(LocaleController.getString("SendWithoutSound", R.string.SendWithoutSound), R.drawable.input_notify_off);
Components/ChatAttachAlertAudioLayout.java:        emptyImageView.setImageResource(R.drawable.music_empty);
Components/ChatAttachAlertDocumentLayout.java:        searchItem = menu.addItem(search_button, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
Components/ChatAttachAlertDocumentLayout.java:        sortItem = menu.addItem(sort_button, sortByName ? R.drawable.contacts_sort_time : R.drawable.contacts_sort_name);
Components/ChatAttachAlertDocumentLayout.java:        emptyImageView.setImageResource(R.drawable.files_empty);
Components/ChatAttachAlertDocumentLayout.java:                if (item.icon == R.drawable.files_gallery) {
Components/ChatAttachAlertDocumentLayout.java:                } else if (item.icon == R.drawable.files_music) {
Components/ChatAttachAlertDocumentLayout.java:            sortItem.setIcon(sortByName ? R.drawable.contacts_sort_time : R.drawable.contacts_sort_name);
Components/ChatAttachAlertDocumentLayout.java:                item.icon = R.drawable.files_folder;
Components/ChatAttachAlertDocumentLayout.java:        item.icon = R.drawable.files_folder;
Components/ChatAttachAlertDocumentLayout.java:                ext.icon = R.drawable.files_internal;
Components/ChatAttachAlertDocumentLayout.java:                ext.icon = R.drawable.files_storage;
Components/ChatAttachAlertDocumentLayout.java:                                item.icon = R.drawable.files_internal;
Components/ChatAttachAlertDocumentLayout.java:        fs.icon = R.drawable.files_folder;
Components/ChatAttachAlertDocumentLayout.java:                fs.icon = R.drawable.files_folder;
Components/ChatAttachAlertDocumentLayout.java:        fs.icon = R.drawable.files_gallery;
Components/ChatAttachAlertDocumentLayout.java:            fs.icon = R.drawable.files_music;
Components/ChatAttachAlertDocumentLayout.java:                    Drawable drawable = Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
Components/ChatAttachAlertLocationLayout.java:            lastPressedMarkerView.setBackgroundResource(R.drawable.venue_tooltip);
Components/ChatAttachAlertLocationLayout.java:        searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
Components/ChatAttachAlertLocationLayout.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.places_btn).mutate();
Components/ChatAttachAlertLocationLayout.java:        mapTypeButton.addSubItem(map_list_menu_map, R.drawable.msg_map, LocaleController.getString("Map", R.string.Map));
Components/ChatAttachAlertLocationLayout.java:        mapTypeButton.addSubItem(map_list_menu_satellite, R.drawable.msg_satellite, LocaleController.getString("Satellite", R.string.Satellite));
Components/ChatAttachAlertLocationLayout.java:        mapTypeButton.addSubItem(map_list_menu_hybrid, R.drawable.msg_hybrid, LocaleController.getString("Hybrid", R.string.Hybrid));
Components/ChatAttachAlertLocationLayout.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
Components/ChatAttachAlertLocationLayout.java:        mapTypeButton.setIcon(R.drawable.location_type);
Components/ChatAttachAlertLocationLayout.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
Components/ChatAttachAlertLocationLayout.java:        locationButton.setImageResource(R.drawable.location_current);
Components/ChatAttachAlertLocationLayout.java:        emptyImageView.setImageResource(R.drawable.location_empty);
Components/ChatAttachAlertLocationLayout.java:        markerImageView.setImageResource(R.drawable.map_pin2);
Components/ChatAttachAlertPhotoLayout.java:        cameraDrawable = context.getResources().getDrawable(R.drawable.instant_camera).mutate();
Components/ChatAttachAlertPhotoLayout.java:        dropDownDrawable = context.getResources().getDrawable(R.drawable.ic_arrow_drop_down).mutate();
Components/ChatAttachAlertPhotoLayout.java:        parentAlert.selectedMenuItem.addSubItem(open_in, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
Components/ChatAttachAlertPhotoLayout.java:        recordTime.setBackgroundResource(R.drawable.system);
Components/ChatAttachAlertPhotoLayout.java:        counterTextView.setBackgroundResource(R.drawable.photos_rounded);
Components/ChatAttachAlertPhotoLayout.java:        counterTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.photos_arrow, 0);
Components/ChatAttachAlertPhotoLayout.java:                    switchCameraButton.setImageResource(cameraView != null && cameraView.isFrontface() ? R.drawable.camera_revert1 : R.drawable.camera_revert2);
Components/ChatAttachAlertPhotoLayout.java:                imageView.setImageResource(R.drawable.flash_off);
Components/ChatAttachAlertPhotoLayout.java:                imageView.setImageResource(R.drawable.flash_on);
Components/ChatAttachAlertPhotoLayout.java:                imageView.setImageResource(R.drawable.flash_auto);
Components/ChatAttachAlertPhotoLayout.java:                    switchCameraButton.setImageResource(cameraView.isFrontface() ? R.drawable.camera_revert1 : R.drawable.camera_revert2);
Components/ChatAttachAlertPollLayout.java:                    Drawable drawable = Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow);
Components/ChatAttachAlertPollLayout.java:                    Drawable drawable1 = mContext.getResources().getDrawable(R.drawable.poll_add_circle);
Components/ChatAttachAlertPollLayout.java:                    Drawable drawable2 = mContext.getResources().getDrawable(R.drawable.poll_add_plus);
Components/ChatAttachAlertPollLayout.java:                    Drawable drawable = Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
Components/ChatBigEmptyView.java:        setBackgroundResource(R.drawable.system);
Components/ChatBigEmptyView.java:            imageView.setImageResource(R.drawable.cloud_big);
Components/ChatBigEmptyView.java:                imageView.setImageResource(R.drawable.ic_lock_white);
Components/ChatBigEmptyView.java:                imageView.setImageResource(R.drawable.list_circle);
Components/ChatBigEmptyView.java:                imageView.setImageResource(R.drawable.groups_overview_check);
Components/ChecksHintView.java:        arrowImageView.setImageResource(R.drawable.tooltip_arrow);
Components/ClearHistoryAlert.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
Components/ClearHistoryAlert.java:            Drawable drawable = Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
Components/ClearHistoryAlert.java:        Drawable drawable = Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow);
Components/ColorPicker.java:        circleDrawable = context.getResources().getDrawable(R.drawable.knob_shadow).mutate();
Components/ColorPicker.java:            menuItem.setIcon(R.drawable.ic_ab_other);
Components/ColorPicker.java:            menuItem.addSubItem(item_edit, R.drawable.msg_edit, LocaleController.getString("OpenInEditor", R.string.OpenInEditor));
Components/ColorPicker.java:            menuItem.addSubItem(item_share, R.drawable.msg_share, LocaleController.getString("ShareTheme", R.string.ShareTheme));
Components/ColorPicker.java:            menuItem.addSubItem(item_delete, R.drawable.msg_delete, LocaleController.getString("DeleteTheme", R.string.DeleteTheme));
Components/ColorPicker.java:            exchangeButton.setImageResource(R.drawable.menu_switch);
Components/ColorPicker.java:            exchangeButton.setImageResource(R.drawable.editor_rotate);
Components/ContactsEmptyView.java:            imageView.setImageResource(R.drawable.list_circle);
Components/Crop/CropRotationWheel.java:        mirrorButton.setImageResource(R.drawable.photo_flip);
Components/Crop/CropRotationWheel.java:        aspectRatioButton.setImageResource(R.drawable.tool_cropfix);
Components/Crop/CropRotationWheel.java:        rotation90Button.setImageResource(R.drawable.tool_rotate);
Components/EditTextBoldCursor.java:                mCursorDrawableResField.set(this, R.drawable.field_carret_empty);
Components/EditTextEmoji.java:            emojiIconDrawable.setIcon(R.drawable.smiles_tab_smiles, false);
Components/EditTextEmoji.java:            emojiIconDrawable.setIcon(R.drawable.input_smile, false);
Components/EditTextEmoji.java:                emojiIconDrawable.setIcon(R.drawable.input_keyboard, true);
Components/EditTextEmoji.java:                      emojiIconDrawable.setIcon(R.drawable.smiles_tab_smiles, true);
Components/EditTextEmoji.java:                      emojiIconDrawable.setIcon(R.drawable.input_smile, true);
Components/EmbedBottomSheet.java:        pipButton.setImageResource(R.drawable.video_pip);
Components/EmbedBottomSheet.java:        copyButton.setImageResource(R.drawable.video_copy);
Components/EmojiView.java:            searchIconImageView.setImageResource(R.drawable.smiles_inputsearch);
Components/EmojiView.java:            backgroundDrawable = getResources().getDrawable(R.drawable.stickers_back_all);
Components/EmojiView.java:            arrowDrawable = getResources().getDrawable(R.drawable.stickers_back_arrow);
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_tab_smiles, Theme.getColor(Theme.key_chat_emojiBottomPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_tab_gif, Theme.getColor(Theme.key_chat_emojiBottomPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_tab_stickers, Theme.getColor(Theme.key_chat_emojiBottomPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected))
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_panel_recent, Theme.getColor(Theme.key_chat_emojiPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_panel_smiles, Theme.getColor(Theme.key_chat_emojiPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_panel_cat, Theme.getColor(Theme.key_chat_emojiPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_panel_food, Theme.getColor(Theme.key_chat_emojiPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_panel_activities, Theme.getColor(Theme.key_chat_emojiPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_panel_travel, Theme.getColor(Theme.key_chat_emojiPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_panel_objects, Theme.getColor(Theme.key_chat_emojiPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_panel_other, Theme.getColor(Theme.key_chat_emojiPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_panel_flags, Theme.getColor(Theme.key_chat_emojiPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.stickers_recent, Theme.getColor(Theme.key_chat_emojiBottomPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.stickers_favorites, Theme.getColor(Theme.key_chat_emojiBottomPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.stickers_trending3, Theme.getColor(Theme.key_chat_emojiBottomPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                        Theme.createEmojiIconSelectorDrawable(context, R.drawable.stickers_trending1, Theme.getColor(Theme.key_chat_emojiBottomPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                        Theme.createEmojiIconSelectorDrawable(context, R.drawable.stickers_trending2, Theme.getColor(Theme.key_chat_emojiPanelStickerPackSelectorLine), Theme.getColor(Theme.key_chat_emojiPanelStickerPackSelectorLine))
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.stickers_recent, Theme.getColor(Theme.key_chat_emojiBottomPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.stickers_gifs_trending, Theme.getColor(Theme.key_chat_emojiBottomPanelIcon), Theme.getColor(Theme.key_chat_emojiPanelIconSelected)),
Components/EmojiView.java:        topShadow.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, 0xffe2e5e7));
Components/EmojiView.java:        backspaceButton.setImageResource(R.drawable.smiles_tab_clear);
Components/EmojiView.java:            stickerSettingsButton.setImageResource(R.drawable.smiles_tab_settings);
Components/EmojiView.java:            searchButton.setImageResource(R.drawable.smiles_tab_search);
Components/EmojiView.java:                Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow).mutate();
Components/EmojiView.java:                setBackgroundResource(R.drawable.smiles_popup);
Components/EmojiView.java:                            icon = groupStickerSet != null ? R.drawable.stickersclose : R.drawable.stickerset_close;
Components/EmojiView.java:                    imageView.setImageResource(R.drawable.smiles_panel_question);
Components/EmojiView.java:                            imageView1.setImageResource(R.drawable.smiles_info);
Components/EmojiView.java:            imageView.setImageResource(R.drawable.gif_empty);
Components/EmojiView.java:                    imageView.setImageResource(R.drawable.stickers_empty);
Components/FiltersListBottomSheet.java:                    icon = R.drawable.menu_private;
Components/FiltersListBottomSheet.java:                    icon = R.drawable.menu_unread;
Components/FiltersListBottomSheet.java:                    icon = R.drawable.menu_broadcast;
Components/FiltersListBottomSheet.java:                    icon = R.drawable.menu_groups;
Components/FiltersListBottomSheet.java:                    icon = R.drawable.menu_contacts;
Components/FiltersListBottomSheet.java:                    icon = R.drawable.menu_bots;
Components/FiltersListBottomSheet.java:                    icon = R.drawable.menu_folders;
Components/FiltersListBottomSheet.java:                Drawable drawable1 = context.getResources().getDrawable(R.drawable.poll_add_circle);
Components/FiltersListBottomSheet.java:                Drawable drawable2 = context.getResources().getDrawable(R.drawable.poll_add_plus);
Components/FireworksOverlay.java:            heartDrawable[a] = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.heart_confetti).mutate();
Components/FragmentContextView.java:        shadow.setBackgroundResource(R.drawable.blockpanel_shadow);
Components/FragmentContextView.java:            playbackSpeedButton.setImageResource(R.drawable.voice2x);
Components/FragmentContextView.java:        closeButton.setImageResource(R.drawable.miniplayer_close);
Components/GigagroupConvertAlert.java:            imageView.setImageResource(R.drawable.list_circle);
Components/GroupCallPipAlertView.java:        leaveButton.setData(R.drawable.calls_decline, 0xffffffff, 0xFFCE4A4A, 0.3f, false, LocaleController.getString("VoipGroupLeave", R.string.VoipGroupLeave), false, false);
Components/GroupCallPipAlertView.java:            soundButton.setData(R.drawable.calls_bluetooth, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipAudioRoutingBluetooth", R.string.VoipAudioRoutingBluetooth), false, animated);
Components/GroupCallPipAlertView.java:            soundButton.setData(R.drawable.calls_speaker, Color.WHITE, 0, 0.3f, true, LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
Components/GroupCallPipAlertView.java:                soundButton.setData(R.drawable.calls_headphones, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipAudioRoutingHeadset", R.string.VoipAudioRoutingHeadset), false, animated);
Components/GroupCallPipAlertView.java:                soundButton.setData(R.drawable.calls_speaker, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
Components/GroupCallPipAlertView.java:            muteButton.setData(R.drawable.calls_unmute, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.3f)), 0.1f, true, LocaleController.getString("VoipMutedByAdminShort", R.string.VoipMutedByAdminShort), true, animated);
Components/GroupCallPipAlertView.java:            muteButton.setData(R.drawable.calls_unmute, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * (service.isMicMute() ? 0.3f : 0.15f))), 0.1f, true, service.isMicMute() ? LocaleController.getString("VoipUnmute", R.string.VoipUnmute) : LocaleController.getString("VoipMute", R.string.VoipMute), service.isMicMute(), animated);
Components/GroupCreateSpan.java:        deleteDrawable = getResources().getDrawable(R.drawable.delete);
Components/GroupVoipInviteAlert.java:                    manageChatUserCell.setCustomRightImage(R.drawable.msg_invited);
Components/GroupVoipInviteAlert.java:                    manageChatUserCell.setCustomRightImage(R.drawable.msg_invited);
Components/GroupVoipInviteAlert.java:                        actionCell.setText(LocaleController.getString("VoipGroupCopyInviteLink", R.string.VoipGroupCopyInviteLink), null, R.drawable.msg_link, 7, showDivider);
Components/HintView.java:            imageView.setImageResource(R.drawable.tooltip_sound);
Components/HintView.java:        arrowImageView.setImageResource(topArrow ? R.drawable.tooltip_arrow_up : R.drawable.tooltip_arrow);
Components/ImageUpdater.java:        icons.add(R.drawable.menu_camera);
Components/ImageUpdater.java:            icons.add(R.drawable.msg_video);
Components/ImageUpdater.java:        icons.add(R.drawable.profile_photos);
Components/ImageUpdater.java:            icons.add(R.drawable.menu_search);
Components/ImageUpdater.java:            icons.add(R.drawable.chats_delete);
Components/InstantCameraView.java:                    switchCameraButton.setImageResource(isFrontface ? R.drawable.camera_revert1 : R.drawable.camera_revert2);
Components/InstantCameraView.java:        muteImageView.setImageResource(R.drawable.video_mute);
Components/InstantCameraView.java:        switchCameraButton.setImageResource(R.drawable.camera_revert1);
Components/InstantCameraView.java:            textureOverlayView.setImageResource(R.drawable.icplaceholder);
Components/InviteLinkBottomSheet.java:            CombinedDrawable combinedDrawable = new CombinedDrawable(new ColorDrawable(Theme.getColor(Theme.key_windowBackgroundGray)), Theme.getThemedDrawable(view.getContext(), R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
Components/InviteLinkBottomSheet.java:                Drawable shadowDrawable = Theme.getThemedDrawable(view.getContext(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow);
Components/InviteLinkBottomSheet.java:                Drawable shadowDrawable = Theme.getThemedDrawable(view.getContext(), R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
Components/InviteLinkBottomSheet.java:                    CombinedDrawable combinedDrawable = new CombinedDrawable(new ColorDrawable(Theme.getColor(Theme.key_windowBackgroundGray)), Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
Components/InviteLinkBottomSheet.java:                    Drawable shadowDrawable = Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow);
Components/InviteMembersBottomSheet.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow).mutate();
Components/InviteMembersBottomSheet.java:        floatingButton.setImageResource(R.drawable.floating_check);
Components/InviteMembersBottomSheet.java:                    manageChatTextCell.setText(LocaleController.getString("VoipGroupCopyInviteLink", R.string.VoipGroupCopyInviteLink), null, R.drawable.msg_link, 7, true);
Components/JoinCallAlert.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
Components/LinkActionView.java:        optionsView.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.ic_ab_other));
Components/LinkActionView.java:        spannableStringBuilder.append("..").setSpan(new ColoredImageSpan(ContextCompat.getDrawable(context, R.drawable.msg_copy_filled)), 0, 1, 0);
Components/LinkActionView.java:        spannableStringBuilder.append("..").setSpan(new ColoredImageSpan(ContextCompat.getDrawable(context, R.drawable.msg_share_filled)), 0, 1, 0);
Components/LinkActionView.java:        spannableStringBuilder.append("..").setSpan(new ColoredImageSpan(ContextCompat.getDrawable(context, R.drawable.msg_delete_filled)), 0, 1, 0);
Components/LinkActionView.java:                subItem.setTextAndIcon(LocaleController.getString("Edit", R.string.Edit), R.drawable.msg_edit);
Components/LinkActionView.java:            subItem.setTextAndIcon(LocaleController.getString("GetQRCode", R.string.GetQRCode), R.drawable.msg_qrcode);
Components/LinkActionView.java:                subItem.setTextAndIcon(LocaleController.getString("RevokeLink", R.string.RevokeLink), R.drawable.msg_delete);
Components/LinkActionView.java:            optionsView.setImageDrawable(ContextCompat.getDrawable(optionsView.getContext(), R.drawable.ic_ab_other));
Components/Paint/Brush.java:            return BitmapFactory.decodeResource(ApplicationLoader.applicationContext.getResources(), R.drawable.paint_radial_brush, options);
Components/Paint/Brush.java:            return BitmapFactory.decodeResource(ApplicationLoader.applicationContext.getResources(), R.drawable.paint_elliptical_brush, options);
Components/Paint/Brush.java:            return BitmapFactory.decodeResource(ApplicationLoader.applicationContext.getResources(), R.drawable.paint_neon_brush, options);
Components/Paint/Brush.java:            return BitmapFactory.decodeResource(ApplicationLoader.applicationContext.getResources(), R.drawable.paint_radial_brush, options);
Components/Paint/Views/ColorPicker.java:        shadowDrawable = getResources().getDrawable(R.drawable.knob_shadow);
Components/Paint/Views/ColorPicker.java:        settingsButton.setImageResource(R.drawable.photo_paint_brush);
Components/Paint/Views/ColorPicker.java:        undoButton.setImageResource(R.drawable.photo_undo);
Components/PasscodeView.java:        imageView.setImageResource(R.drawable.passcode_logo);
Components/PasscodeView.java:        checkImage.setImageResource(R.drawable.passcode_check);
Components/PasscodeView.java:        checkImage.setBackgroundResource(R.drawable.bar_selector_lock);
Components/PasscodeView.java:        eraseView.setImageResource(R.drawable.passcode_delete);
Components/PasscodeView.java:            frameLayout.setBackgroundResource(R.drawable.bar_selector_lock);
Components/PasscodeView.java:                    fingerprintImageView.setImageResource(R.drawable.ic_fp_40px);
Components/PasscodeView.java:        fingerprintImageView.setImageResource(R.drawable.ic_fingerprint_error);
Components/PhonebookShareAlert.java:                                layout.imageView.setImageResource(R.drawable.menu_calls);
Components/PhonebookShareAlert.java:                                layout.imageView.setImageResource(R.drawable.menu_mail);
Components/PhonebookShareAlert.java:                                layout.imageView.setImageResource(R.drawable.menu_info);
Components/PhonebookShareAlert.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
Components/PhonebookShareAlert.java:                    icon = R.drawable.menu_calls;
Components/PhonebookShareAlert.java:                        icon = R.drawable.menu_mail;
Components/PhonebookShareAlert.java:                        icon = R.drawable.menu_location;
Components/PhonebookShareAlert.java:                        icon = R.drawable.msg_link;
Components/PhonebookShareAlert.java:                        icon = R.drawable.profile_info;
Components/PhonebookShareAlert.java:                        icon = R.drawable.menu_date;
Components/PhonebookShareAlert.java:                            icon = R.drawable.menu_work;
Components/PhonebookShareAlert.java:                            icon = R.drawable.menu_jobtitle;
Components/PhonebookShareAlert.java:                        icon = R.drawable.menu_info;
Components/PhonebookShareAlert.java:                        icon = R.drawable.menu_info;
Components/PhotoFilterView.java:        tuneItem.setImageResource(R.drawable.photo_tools);
Components/PhotoFilterView.java:        blurItem.setImageResource(R.drawable.tool_blur);
Components/PhotoFilterView.java:        curveItem.setImageResource(R.drawable.tool_curve);
Components/PhotoFilterView.java:            Drawable drawable = blurOffButton.getContext().getResources().getDrawable(R.drawable.blur_off).mutate();
Components/PhotoFilterView.java:            blurRadialButton.setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.blur_radial, 0, 0);
Components/PhotoFilterView.java:            blurLinearButton.setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.blur_linear, 0, 0);
Components/PhotoFilterView.java:            blurOffButton.setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.blur_off, 0, 0);
Components/PhotoFilterView.java:            Drawable drawable = blurOffButton.getContext().getResources().getDrawable(R.drawable.blur_radial).mutate();
Components/PhotoFilterView.java:            blurLinearButton.setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.blur_linear, 0, 0);
Components/PhotoFilterView.java:            blurOffButton.setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.blur_off, 0, 0);
Components/PhotoFilterView.java:            blurRadialButton.setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.blur_radial, 0, 0);
Components/PhotoFilterView.java:            Drawable drawable = blurOffButton.getContext().getResources().getDrawable(R.drawable.blur_linear).mutate();
Components/PhotoPaintView.java:        paintButton.setImageResource(R.drawable.photo_paint);
Components/PhotoPaintView.java:        stickerButton.setImageResource(R.drawable.photo_sticker);
Components/PhotoPaintView.java:        textButton.setImageResource(R.drawable.photo_paint_text);
Components/PhotoPaintView.java:        int resource = R.drawable.photo_paint_brush;
Components/PhotoPaintView.java:                resource = R.drawable.photo_flip;
Components/PhotoPaintView.java:                resource = R.drawable.photo_outline;
Components/PhotoPaintView.java:            paintButton.setImageResource(R.drawable.photo_paint);
Components/PhotoPaintView.java:            paintButton.setImageResource(R.drawable.photo_paint);
Components/PhotoPaintView.java:        check.setImageResource(R.drawable.msg_text_check);
Components/PhotoPaintView.java:            View radial = buttonForBrush(0, R.drawable.msg_draw_pen, LocaleController.getString("PaintPen", R.string.PaintPen), currentBrush == 0);
Components/PhotoPaintView.java:            View elliptical = buttonForBrush(1, R.drawable.msg_draw_marker, LocaleController.getString("PaintMarker", R.string.PaintMarker), currentBrush == 1);
Components/PhotoPaintView.java:            View neon = buttonForBrush(2, R.drawable.msg_draw_neon, LocaleController.getString("PaintNeon", R.string.PaintNeon), currentBrush == 2);
Components/PhotoPaintView.java:            View arrow = buttonForBrush(3, R.drawable.msg_draw_arrow, LocaleController.getString("PaintArrow", R.string.PaintArrow), currentBrush == 3);
Components/PhotoPaintView.java:            check.setImageResource(R.drawable.msg_text_check);
Components/PhotoPaintView.java:                    icon = R.drawable.msg_text_outlined;
Components/PhotoPaintView.java:                    icon = R.drawable.msg_text_regular;
Components/PhotoPaintView.java:                    icon = R.drawable.msg_text_framed;
Components/PhotoViewerCaptionEnterView.java:        emojiIconDrawable.setIcon(R.drawable.input_smile, false);
Components/PhotoViewerCaptionEnterView.java:        checkDrawable = context.getResources().getDrawable(R.drawable.input_done).mutate();
Components/PhotoViewerCaptionEnterView.java:                emojiIconDrawable.setIcon(R.drawable.input_keyboard, true);
Components/PhotoViewerCaptionEnterView.java:                emojiIconDrawable.setIcon(R.drawable.input_smile, true);
Components/PickerBottomLayoutViewer.java:        doneButtonBadgeTextView.setBackgroundResource(isDarkTheme ? R.drawable.photobadge : R.drawable.bluecounter);
Components/PipVideoView.java:            inlineButton.setImageResource(R.drawable.ic_outinline);
Components/PipVideoView.java:                    playButton.setImageResource(R.drawable.ic_againinline);
Components/PipVideoView.java:                    playButton.setImageResource(R.drawable.ic_playinline);
Components/PipVideoView.java:                playButton.setImageResource(R.drawable.ic_pauseinline);
Components/PollVotesAlert.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
Components/PollVotesAlert.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
Components/PollVotesAlert.java:                    textCell.setTextAndIcon(LocaleController.formatPluralString("ShowVotes", votesList.count - votesList.getCount()), R.drawable.arrow_more, false);
Components/ProximitySheet.java:        Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
Components/ProxyDrawable.java:        emptyDrawable = context.getResources().getDrawable(R.drawable.proxy_off);
Components/ProxyDrawable.java:        fullDrawable = context.getResources().getDrawable(R.drawable.proxy_on);
Components/SearchField.java:        searchIconImageView.setImageResource(R.drawable.smiles_inputsearch);
Components/SearchViewPager.java:            gotoItem = actionMode.addItemWithWidth(gotoItemId, R.drawable.msg_message, AndroidUtilities.dp(54), LocaleController.getString("AccDescrGoToMessage", R.string.AccDescrGoToMessage));
Components/SearchViewPager.java:            forwardItem = actionMode.addItemWithWidth(forwardItemId, R.drawable.msg_forward, AndroidUtilities.dp(54), LocaleController.getString("Forward", R.string.Forward));
Components/ShareAlert.java:            leftTab.setLeftDrawable(R.drawable.msg_tabs_mic1);
Components/ShareAlert.java:            rightTab.setLeftDrawable(R.drawable.msg_tabs_mic2);
Components/ShareAlert.java:            searchIconImageView.setImageResource(R.drawable.smiles_inputsearch);
Components/ShareAlert.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
Components/ShareAlert.java:                    imageView.setImageResource(R.drawable.share_arrow);
Components/ShareAlert.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
Components/ShareAlert.java:        writeButton.setImageResource(R.drawable.attach_send);
Components/SharedMediaLayout.java:        pinnedHeaderShadowDrawable = context.getResources().getDrawable(R.drawable.photos_header_shadow);
Components/SharedMediaLayout.java:        searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
Components/SharedMediaLayout.java:            gotoItem.setIcon(R.drawable.msg_message);
Components/SharedMediaLayout.java:            forwardItem.setIcon(R.drawable.msg_forward);
Components/SharedMediaLayout.java:        deleteItem.setIcon(R.drawable.msg_delete);
Components/SharedMediaLayout.java:            emptyStubView.emptyImageView.setImageResource(R.drawable.tip1);
Components/SharedMediaLayout.java:            emptyStubView.emptyImageView.setImageResource(R.drawable.tip2);
Components/SharedMediaLayout.java:            emptyStubView.emptyImageView.setImageResource(R.drawable.tip5);
Components/SharedMediaLayout.java:            emptyStubView.emptyImageView.setImageResource(R.drawable.tip3);
Components/SharedMediaLayout.java:            emptyStubView.emptyImageView.setImageResource(R.drawable.tip4);
Components/SharedMediaLayout.java:            emptyStubView.emptyImageView.setImageResource(R.drawable.tip1);
Components/ShareLocationDrawable.java:            drawable = context.getResources().getDrawable(R.drawable.pin);
Components/ShareLocationDrawable.java:            drawableLeft = context.getResources().getDrawable(R.drawable.smallanimationpinleft);
Components/ShareLocationDrawable.java:            drawableRight = context.getResources().getDrawable(R.drawable.smallanimationpinright);
Components/ShareLocationDrawable.java:            drawable = context.getResources().getDrawable(R.drawable.nearby_l);
Components/ShareLocationDrawable.java:            drawableLeft = context.getResources().getDrawable(R.drawable.animationpinleft);
Components/ShareLocationDrawable.java:            drawableRight = context.getResources().getDrawable(R.drawable.animationpinright);
Components/ShareLocationDrawable.java:            drawable = context.getResources().getDrawable(R.drawable.nearby_m);
Components/ShareLocationDrawable.java:            drawableLeft = context.getResources().getDrawable(R.drawable.animationpinleft);
Components/ShareLocationDrawable.java:            drawableRight = context.getResources().getDrawable(R.drawable.animationpinright);
Components/ShareLocationDrawable.java:            drawable = context.getResources().getDrawable(R.drawable.smallanimationpin);
Components/ShareLocationDrawable.java:            drawableLeft = context.getResources().getDrawable(R.drawable.smallanimationpinleft);
Components/ShareLocationDrawable.java:            drawableRight = context.getResources().getDrawable(R.drawable.smallanimationpinright);
Components/ShareLocationDrawable.java:            drawable = context.getResources().getDrawable(R.drawable.animationpin);
Components/ShareLocationDrawable.java:            drawableLeft = context.getResources().getDrawable(R.drawable.animationpinleft);
Components/ShareLocationDrawable.java:            drawableRight = context.getResources().getDrawable(R.drawable.animationpinright);
Components/SharingLocationsAlert.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
Components/SharingLocationsAlert.java:        shadow.setBackgroundResource(R.drawable.header_shadow_reverse);
Components/ShutterButton.java:        shadowDrawable = getResources().getDrawable(R.drawable.camera_btn);
Components/StickerMasksAlert.java:            searchIconImageView.setImageResource(R.drawable.smiles_inputsearch);
Components/StickerMasksAlert.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
Components/StickerMasksAlert.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.stickers_recent, 0xff4b4b4b, 0xff6ebaed),
Components/StickerMasksAlert.java:                Theme.createEmojiIconSelectorDrawable(context, R.drawable.stickers_favorites, 0xff4b4b4b, 0xff6ebaed),
Components/StickerMasksAlert.java:        topShadow.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, 0xffe2e5e7));
Components/StickerMasksAlert.java:            stickersButton.setImageDrawable(Theme.createEmojiIconSelectorDrawable(context, R.drawable.smiles_tab_stickers, 0xffffffff, 0xff6ebaed));
Components/StickerMasksAlert.java:            masksButton.setImageDrawable(Theme.createEmojiIconSelectorDrawable(context, R.drawable.ic_masks_msk1, 0xffffffff, 0xff6ebaed));
Components/StickerMasksAlert.java:                    imageView.setImageResource(R.drawable.stickers_empty);
Components/StickersAlert.java:        optionsButton.setIcon(R.drawable.ic_ab_other);
Components/StickersAlert.java:        optionsButton.addSubItem(1, R.drawable.msg_share, LocaleController.getString("StickersShare", R.string.StickersShare));
Components/StickersAlert.java:        optionsButton.addSubItem(2, R.drawable.msg_link, LocaleController.getString("CopyLink", R.string.CopyLink));
Components/TermsOfServiceView.java:        imageView.setImageResource(R.drawable.logo_middle);
Components/ThemeEditorView.java:                searchIconImageView.setImageResource(R.drawable.smiles_inputsearch);
Components/ThemeEditorView.java:                circleDrawable = context.getResources().getDrawable(R.drawable.knob_shadow).mutate();
Components/ThemeEditorView.java:            shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
Components/ThemeEditorView.java:        windowView.setBackgroundResource(R.drawable.theme_picker);
Components/ThemePreviewDrawable.java:        Drawable backDrawable = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_back).mutate();
Components/ThemePreviewDrawable.java:        Drawable otherDrawable = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_dots).mutate();
Components/ThemePreviewDrawable.java:        Drawable emojiDrawable = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_smile).mutate();
Components/ThemePreviewDrawable.java:        Drawable micDrawable = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_mic).mutate();
Components/ThemePreviewDrawable.java:            BitmapDrawable catsDrawable = (BitmapDrawable) ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.catstile).mutate();
Components/UndoView.java:        undoImageView.setImageResource(R.drawable.chats_undo);
Components/UndoView.java:                leftImageView.setImageResource(R.drawable.dice);
Components/UndoView.java:            leftImageView.setImageResource(R.drawable.toast_pallete);
Components/UpdateAppAlertDialog.java:        setTopImage(R.drawable.update, Theme.getColor(Theme.key_dialogTopBackground));
Components/UsersAlertBase.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
Components/UsersAlertBase.java:            searchIconImageView.setImageResource(R.drawable.smiles_inputsearch);
Components/VideoSeekPreviewImage.java:        frameDrawable = context.getResources().getDrawable(R.drawable.videopreview);
Components/VideoTimelinePlayView.java:        drawableLeft = context.getResources().getDrawable(R.drawable.video_cropleft);
Components/VideoTimelinePlayView.java:        drawableRight = context.getResources().getDrawable(R.drawable.video_cropright);
Components/VideoTimelineView.java:            tooltipBackgroundArrow = ContextCompat.getDrawable(context, R.drawable.tooltip_arrow);
Components/voip/AcceptDeclineView.java:        callDrawable = ContextCompat.getDrawable(context, R.drawable.calls_decline).mutate();
Components/voip/AcceptDeclineView.java:        cancelDrawable = ContextCompat.getDrawable(context, R.drawable.ic_close_white).mutate();
Components/voip/AcceptDeclineView.java:        arrowDrawable = ContextCompat.getDrawable(context, R.drawable.call_arrow_right);
Components/voip/VoIPFloatingLayout.java:        mutedDrawable = ContextCompat.getDrawable(context, R.drawable.calls_mute_mini);
Components/voip/VoIPPiPView.java:        Drawable outerDrawable = ContextCompat.getDrawable(context, R.drawable.calls_pip_outershadow);
Components/voip/VoIPPiPView.java:            closeIcon.setImageResource(R.drawable.pip_close);
Components/voip/VoIPPiPView.java:            enlargeIcon.setImageResource(R.drawable.pip_enlarge);
Components/WallpaperUpdater.java:            icons = new int[]{R.drawable.menu_camera, R.drawable.profile_photos};
Components/WebPlayerView.java:            shareButton.setImageResource(R.drawable.ic_share_video);
Components/WebPlayerView.java:                playButton.setImageResource(isInline ? R.drawable.ic_againinline : R.drawable.ic_again);
Components/WebPlayerView.java:                playButton.setImageResource(isInline ? R.drawable.ic_playinline : R.drawable.ic_play);
Components/WebPlayerView.java:            playButton.setImageResource(isInline ? R.drawable.ic_pauseinline : R.drawable.ic_pause);
Components/WebPlayerView.java:            fullscreenButton.setImageResource(R.drawable.ic_gofullscreen);
Components/WebPlayerView.java:            fullscreenButton.setImageResource(R.drawable.ic_outfullscreen);
Components/WebPlayerView.java:        inlineButton.setImageResource(isInline ? R.drawable.ic_goinline : R.drawable.ic_outinline);
Components/ZoomControlView.java:        minusDrawable = context.getResources().getDrawable(R.drawable.zoom_minus);
Components/ZoomControlView.java:        plusDrawable = context.getResources().getDrawable(R.drawable.zoom_plus);
Components/ZoomControlView.java:        progressDrawable = context.getResources().getDrawable(R.drawable.zoom_slide);
Components/ZoomControlView.java:        filledProgressDrawable = context.getResources().getDrawable(R.drawable.zoom_slide_a);
Components/ZoomControlView.java:        knobDrawable = context.getResources().getDrawable(R.drawable.zoom_round);
Components/ZoomControlView.java:        pressedKnobDrawable = context.getResources().getDrawable(R.drawable.zoom_round_b);
ContactAddActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ContactsActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ContactsActivity.java:                    sortItem.setIcon(sortByName ? R.drawable.contacts_sort_time : R.drawable.contacts_sort_name);
ContactsActivity.java:        ActionBarMenuItem item = menu.addItem(search_button, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
ContactsActivity.java:            sortItem = menu.addItem(sort_button, sortByName ? R.drawable.contacts_sort_time : R.drawable.contacts_sort_name);
ContactsActivity.java:                Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow).mutate();
ContentPreviewViewer.java:                        icons.add(R.drawable.outline_send);
ContentPreviewViewer.java:                        icons.add(R.drawable.msg_timer);
ContentPreviewViewer.java:                        icons.add(R.drawable.outline_pack);
ContentPreviewViewer.java:                    icons.add(inFavs ? R.drawable.outline_unfave : R.drawable.outline_fave);
ContentPreviewViewer.java:                    icons.add(R.drawable.msg_delete);
ContentPreviewViewer.java:                    icons.add(R.drawable.outline_send);
ContentPreviewViewer.java:                    icons.add(R.drawable.msg_timer);
ContentPreviewViewer.java:                        icons.add(R.drawable.msg_delete);
ContentPreviewViewer.java:                        icons.add(R.drawable.outline_add_gif);
ContentPreviewViewer.java:        slideUpDrawable = parentActivity.getResources().getDrawable(R.drawable.preview_arrow);
CountrySelectActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
CountrySelectActivity.java:        ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
DataAutoDownloadActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
DataAutoDownloadActivity.java:                        Drawable drawable = Theme.getThemedDrawable(getParentActivity(), R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
DataAutoDownloadActivity.java:                        view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
DataAutoDownloadActivity.java:                            view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
DataAutoDownloadActivity.java:                            view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
DataAutoDownloadActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
DataSettingsActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
DataSettingsActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
DataSettingsActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
DataSettingsActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
DataUsageActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
DataUsageActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
DataUsageActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
DataUsageActivity.java:                    cell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
DialogOrContactPickerActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
DialogOrContactPickerActivity.java:        searchItem = menu.addItem(search_button, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
DialogsActivity.java:       /* searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true, true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
DialogsActivity.java:            actionBar.setBackButtonImage(R.drawable.ic_ab_back);
DialogsActivity.java:                    Drawable shadowDrawable = getParentActivity().getResources().getDrawable(R.drawable.popup_fixed_alert).mutate();
DialogsActivity.java:                            cell.setTextAndIcon(LocaleController.getString("FilterReorder", R.string.FilterReorder), R.drawable.tabs_reorder);
DialogsActivity.java:                                cell.setTextAndIcon(LocaleController.getString("FilterEditAll", R.string.FilterEditAll), R.drawable.msg_edit);
DialogsActivity.java:                                cell.setTextAndIcon(LocaleController.getString("FilterEdit", R.string.FilterEdit), R.drawable.msg_edit);
DialogsActivity.java:                            cell.setTextAndIcon(LocaleController.getString("FilterDeleteItem", R.string.FilterDeleteItem), R.drawable.msg_delete);
DialogsActivity.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow).mutate();
DialogsActivity.java:            floatingButton.setImageResource(R.drawable.floating_check);
DialogsActivity.java:            FiltersView.MediaFilterData filterData = new FiltersView.MediaFilterData(R.drawable.chats_archive, R.drawable.chats_archive, LocaleController.getString("ArchiveSearchFilter", R.string.ArchiveSearchFilter), null, FiltersView.FILTER_TYPE_ARCHIVE);
DialogsActivity.java:        pinItem = actionMode.addItemWithWidth(pin, R.drawable.msg_pin, AndroidUtilities.dp(54));
DialogsActivity.java:        muteItem = actionMode.addItemWithWidth(mute, R.drawable.msg_mute, AndroidUtilities.dp(54));
DialogsActivity.java:        archive2Item = actionMode.addItemWithWidth(archive2, R.drawable.msg_archive, AndroidUtilities.dp(54));
DialogsActivity.java:        deleteItem = actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete));
DialogsActivity.java:        ActionBarMenuItem otherItem = actionMode.addItemWithWidth(0, R.drawable.ic_ab_other, AndroidUtilities.dp(54), LocaleController.getString("AccDescrMoreOptions", R.string.AccDescrMoreOptions));
DialogsActivity.java:        archiveItem = otherItem.addSubItem(archive, R.drawable.msg_archive, LocaleController.getString("Archive", R.string.Archive));
DialogsActivity.java:        pin2Item = otherItem.addSubItem(pin2, R.drawable.msg_pin, LocaleController.getString("DialogPin", R.string.DialogPin));
DialogsActivity.java:        addToFolderItem = otherItem.addSubItem(add_to_folder, R.drawable.msg_addfolder, LocaleController.getString("FilterAddTo", R.string.FilterAddTo));
DialogsActivity.java:        removeFromFolderItem = otherItem.addSubItem(remove_from_folder, R.drawable.msg_removefolder, LocaleController.getString("FilterRemoveFrom", R.string.FilterRemoveFrom));
DialogsActivity.java:        readItem = otherItem.addSubItem(read, R.drawable.msg_markread, LocaleController.getString("MarkAsRead", R.string.MarkAsRead));
DialogsActivity.java:        clearItem = otherItem.addSubItem(clear, R.drawable.msg_clear, LocaleController.getString("ClearHistory", R.string.ClearHistory));
DialogsActivity.java:        blockItem = otherItem.addSubItem(block, R.drawable.msg_block, LocaleController.getString("BlockUser", R.string.BlockUser));
DialogsActivity.java:                        hasUnread ? R.drawable.menu_read : 0,
DialogsActivity.java:                        SharedConfig.archiveHidden ? R.drawable.chats_pin : R.drawable.chats_unpin,
DialogsActivity.java:            archiveItem.setTextAndIcon(contentDescription, R.drawable.msg_unarchive);
DialogsActivity.java:            archive2Item.setIcon(R.drawable.msg_unarchive);
DialogsActivity.java:            archiveItem.setTextAndIcon(contentDescription, R.drawable.msg_archive);
DialogsActivity.java:            archive2Item.setIcon(R.drawable.msg_archive);
DialogsActivity.java:            muteItem.setIcon(R.drawable.msg_unmute);
DialogsActivity.java:            muteItem.setIcon(R.drawable.msg_mute);
DialogsActivity.java:            readItem.setTextAndIcon(LocaleController.getString("MarkAsRead", R.string.MarkAsRead), R.drawable.msg_markread);
DialogsActivity.java:            readItem.setTextAndIcon(LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread), R.drawable.msg_markunread);
DialogsActivity.java:            pinItem.setIcon(R.drawable.msg_pin);
DialogsActivity.java:            pinItem.setIcon(R.drawable.msg_unpin);
EditWidgetActivity.java:            widgetPreview.setBackgroundResource(R.drawable.widget_bg);
EditWidgetActivity.java:                previewImageView.setImageResource(R.drawable.chats_widget_preview);
EditWidgetActivity.java:                previewImageView.setImageResource(R.drawable.contacts_widget_preview);
EditWidgetActivity.java:            shadowDrawable = Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow);
EditWidgetActivity.java:                            cells[a].findViewById(R.id.shortcut_widget_item_badge).setBackgroundResource(R.drawable.widget_counter_muted);
EditWidgetActivity.java:                            cells[a].findViewById(R.id.shortcut_widget_item_badge).setBackgroundResource(R.drawable.widget_counter);
EditWidgetActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
EditWidgetActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
EditWidgetActivity.java:                    sortImageView.setImageResource(R.drawable.list_reorder);
EditWidgetActivity.java:                    Drawable drawable1 = mContext.getResources().getDrawable(R.drawable.poll_add_circle);
EditWidgetActivity.java:                    Drawable drawable2 = mContext.getResources().getDrawable(R.drawable.poll_add_plus);
ExternalActionActivity.java:        getWindow().setBackgroundDrawableResource(R.drawable.transparent);
ExternalActionActivity.java:            BitmapDrawable drawable = (BitmapDrawable) getResources().getDrawable(R.drawable.catstile);
ExternalActionActivity.java:            layersActionBarLayout.setBackgroundResource(R.drawable.boxshadow);
ExternalActionActivity.java:            BitmapDrawable drawable = (BitmapDrawable) getResources().getDrawable(R.drawable.catstile);
FeaturedStickersActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
FeaturedStickersActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
FilterCreateActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
FilterCreateActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
FilterCreateActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
FilterCreateActivity.java:                        textCell.setTextAndIcon(LocaleController.formatPluralString("FilterShowMoreChats", newAlwaysShow.size() - 5), R.drawable.arrow_more, false);
FilterCreateActivity.java:                        textCell.setTextAndIcon(LocaleController.formatPluralString("FilterShowMoreChats", newNeverShow.size() - 5), R.drawable.arrow_more, false);
FilterCreateActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("FilterAddChats", R.string.FilterAddChats), R.drawable.actions_addchat, position + 1 != includeSectionRow);
FilterCreateActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("FilterRemoveChats", R.string.FilterRemoveChats), R.drawable.actions_addchat, position + 1 != excludeSectionRow);
FilterCreateActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
FilterCreateActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
FilteredSearchView.java:            arrowSpan.setSpan(new ColoredImageSpan(ContextCompat.getDrawable(ApplicationLoader.applicationContext, R.drawable.search_arrow).mutate()), 0, 1, 0);
FiltersSetupActivity.java:            moveImageView.setImageResource(R.drawable.list_reorder);
FiltersSetupActivity.java:            optionsImageView.setImageResource(R.drawable.msg_actions);
FiltersSetupActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
FiltersSetupActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_top, Theme.key_windowBackgroundGrayShadow));
FiltersSetupActivity.java:                                R.drawable.msg_edit,
FiltersSetupActivity.java:                                R.drawable.msg_delete
FiltersSetupActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
FiltersSetupActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
FiltersSetupActivity.java:                        Drawable drawable1 = mContext.getResources().getDrawable(R.drawable.poll_add_circle);
FiltersSetupActivity.java:                        Drawable drawable2 = mContext.getResources().getDrawable(R.drawable.poll_add_plus);
FilterUsersActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
FilterUsersActivity.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow).mutate();
FilterUsersActivity.java:        floatingButton.setImageResource(R.drawable.floating_check);
GroupCallActivity.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
GroupCallActivity.java:        leaveButton.setData(R.drawable.calls_decline, 0xffffffff, Theme.getColor(Theme.key_voipgroup_leaveButton), 0.3f, false, LocaleController.getString("VoipGroupLeave", R.string.VoipGroupLeave), false, false);
GroupCallActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
GroupCallActivity.java:        otherItem.setIcon(R.drawable.ic_ab_other);
GroupCallActivity.java:        pipItem.setIcon(R.drawable.msg_voice_pip);
GroupCallActivity.java:        editTitleItem = otherItem.addSubItem(edit_item, R.drawable.msg_edit, recordCallDrawable, LocaleController.getString("VoipGroupEditTitle", R.string.VoipGroupEditTitle), true, false);
GroupCallActivity.java:        permissionItem = otherItem.addSubItem(permission_item, R.drawable.msg_permissions, recordCallDrawable, LocaleController.getString("VoipGroupEditPermissions", R.string.VoipGroupEditPermissions), false, false);
GroupCallActivity.java:        inviteItem = otherItem.addSubItem(share_invite_link_item, R.drawable.msg_link, LocaleController.getString("VoipGroupShareInviteLink", R.string.VoipGroupShareInviteLink));
GroupCallActivity.java:        leaveItem = otherItem.addSubItem(leave_item, R.drawable.msg_endcall, LocaleController.getString("VoipGroupEndChat", R.string.VoipGroupEndChat));
GroupCallActivity.java:            soundButton.setData(R.drawable.calls_bluetooth, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipAudioRoutingBluetooth", R.string.VoipAudioRoutingBluetooth), false, animated);
GroupCallActivity.java:            soundButton.setData(R.drawable.calls_speaker, Color.WHITE, 0, 0.3f, true, LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
GroupCallActivity.java:                soundButton.setData(R.drawable.calls_headphones, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipAudioRoutingHeadset", R.string.VoipAudioRoutingHeadset), false, animated);
GroupCallActivity.java:                soundButton.setData(R.drawable.calls_speaker, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
GroupCallActivity.java:            Drawable shadowDrawable = getContext().getResources().getDrawable(R.drawable.popup_fixed_alert).mutate();
GroupCallActivity.java:        Drawable shadowDrawable = getContext().getResources().getDrawable(R.drawable.popup_fixed_alert).mutate();
GroupCallActivity.java:            icons.add(R.drawable.msg_handdown);
GroupCallActivity.java:                    icons.add(R.drawable.msg_voice_muted);
GroupCallActivity.java:                        icons.add(R.drawable.msg_allowspeak);
GroupCallActivity.java:                        icons.add(R.drawable.msg_voice_unmuted);
GroupCallActivity.java:                icons.add(R.drawable.msg_channel);
GroupCallActivity.java:                icons.add(R.drawable.msg_openprofile);
GroupCallActivity.java:                icons.add(R.drawable.msg_block2);
GroupCallActivity.java:                icons.add(R.drawable.msg_voice_unmuted);
GroupCallActivity.java:                icons.add(R.drawable.msg_voice_muted);
GroupCallActivity.java:                icons.add(R.drawable.msg_channel);
GroupCallActivity.java:                icons.add(R.drawable.msg_openprofile);
GroupCallActivity.java:                    textCell.setTextAndIcon(LocaleController.getString("VoipGroupInviteMember", R.string.VoipGroupInviteMember), R.drawable.actions_addmember2, true);
GroupCreateActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
GroupCreateActivity.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow).mutate();
GroupCreateActivity.java:            floatingButton.setImageResource(R.drawable.floating_check);
GroupCreateActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("ChannelInviteViaLink", R.string.ChannelInviteViaLink), R.drawable.profile_link, false);
GroupCreateActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("InviteToGroupByLink", R.string.InviteToGroupByLink), R.drawable.profile_link, false);
GroupCreateFinalActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
GroupCreateFinalActivity.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.greydivider_top).mutate();
GroupCreateFinalActivity.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow).mutate();
GroupCreateFinalActivity.java:        floatingButtonIcon.setImageResource(R.drawable.checkbig);
GroupCreateFinalActivity.java:                    Drawable drawable = Theme.getThemedDrawable(context, R.drawable.greydivider_top, Theme.key_windowBackgroundGrayShadow);
GroupInviteActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
GroupInviteActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
GroupInviteActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
GroupStickersActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
GroupStickersActivity.java:        doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
GroupStickersActivity.java:        eraseImageView.setImageResource(R.drawable.ic_close_white);
GroupStickersActivity.java:                            cell.setText(LocaleController.getString("ChooseStickerSetNotFound", R.string.ChooseStickerSetNotFound), LocaleController.getString("ChooseStickerSetNotFoundInfo", R.string.ChooseStickerSetNotFoundInfo), R.drawable.ic_smiles2_sad, false);
GroupStickersActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
GroupStickersActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
hola.txt:Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_invite, false);
hola.txt:Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("AddPeopleNearby", R.string.AddPeopleNearby), R.drawable.menu_location, false);
hola.txt:Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("ChannelInviteViaLink", R.string.ChannelInviteViaLink), R.drawable.profile_link, false);
hola.txt:Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("InviteToGroupByLink", R.string.InviteToGroupByLink), R.drawable.profile_link, false);
hola.txt:Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("NewGroup", R.string.NewGroup), R.drawable.menu_groups, false);
hola.txt:Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_secret, false);
hola.txt:Adapters/ContactsAdapter.java:                            textCell.setTextAndIcon(LocaleController.getString("NewChannel", R.string.NewChannel), R.drawable.menu_broadcast, false);
hola.txt:Adapters/DialogsAdapter.java:                cell.setTextAndIcon(LocaleController.getString("CreateGroupForImport", R.string.CreateGroupForImport), R.drawable.groups_create, dialogsCount != 0);
hola.txt:Adapters/FiltersView.java:            new MediaFilterData(R.drawable.search_media, R.drawable.search_media_filled, LocaleController.getString("SharedMediaTab2", R.string.SharedMediaTab2), new TLRPC.TL_inputMessagesFilterPhotoVideo(), FILTER_TYPE_MEDIA),
hola.txt:Adapters/FiltersView.java:            new MediaFilterData(R.drawable.search_links, R.drawable.search_links_filled, LocaleController.getString("SharedLinksTab2", R.string.SharedLinksTab2), new TLRPC.TL_inputMessagesFilterUrl(), FILTER_TYPE_LINKS),
hola.txt:Adapters/FiltersView.java:            new MediaFilterData(R.drawable.search_files, R.drawable.search_files_filled, LocaleController.getString("SharedFilesTab2", R.string.SharedFilesTab2), new TLRPC.TL_inputMessagesFilterDocument(), FILTER_TYPE_FILES),
hola.txt:Adapters/FiltersView.java:            new MediaFilterData(R.drawable.search_music, R.drawable.search_music_filled, LocaleController.getString("SharedMusicTab2", R.string.SharedMusicTab2), new TLRPC.TL_inputMessagesFilterMusic(), FILTER_TYPE_MUSIC),
hola.txt:Adapters/FiltersView.java:            new MediaFilterData(R.drawable.search_voice, R.drawable.search_voice_filled, LocaleController.getString("SharedVoiceTab2", R.string.SharedVoiceTab2), new TLRPC.TL_inputMessagesFilterRoundVoice(), FILTER_TYPE_VOICE)
hola.txt:ArticleViewer.java:        menuButton.addSubItem(search_item, R.drawable.msg_search, LocaleController.getString("Search", R.string.Search));
hola.txt:ArticleViewer.java:        menuButton.addSubItem(share_item, R.drawable.msg_share, LocaleController.getString("ShareFile", R.string.ShareFile));
hola.txt:ArticleViewer.java:        menuButton.addSubItem(open_item, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
hola.txt:ArticleViewer.java:        menuButton.addSubItem(settings_item, R.drawable.menu_settings, LocaleController.getString("Settings", R.string.Settings));
hola.txt:AvatarPreviewer.java:        OPEN_PROFILE("OpenProfile", R.string.OpenProfile, R.drawable.msg_openprofile),
hola.txt:AvatarPreviewer.java:        OPEN_CHANNEL("OpenChannel2", R.string.OpenChannel2, R.drawable.msg_channel),
hola.txt:AvatarPreviewer.java:        OPEN_GROUP("OpenGroup2", R.string.OpenGroup2, R.drawable.msg_discussion),
hola.txt:AvatarPreviewer.java:        SEND_MESSAGE("SendMessage", R.string.SendMessage, R.drawable.msg_discussion),
hola.txt:AvatarPreviewer.java:        MENTION("Mention", R.string.Mention, R.drawable.msg_mention);
hola.txt:CallLogActivity.java:		otherItem.addSubItem(delete_all_calls, R.drawable.msg_delete, LocaleController.getString("DeleteAllCalls", R.string.DeleteAllCalls));
hola.txt:CallLogActivity.java:		actionModeViews.add(actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete)));
hola.txt:CancelAccountDeletionActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:ChangeNameActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:ChangePhoneActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:ChangeUsernameActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:ChannelCreateActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:ChatActivity.java:                headerItem.addSubItem(call, R.drawable.msg_callback, LocaleController.getString("Call", R.string.Call));
hola.txt:ChatActivity.java:                    headerItem.addSubItem(video_call, R.drawable.msg_videocall, LocaleController.getString("VideoCall", R.string.VideoCall));
hola.txt:ChatActivity.java:                headerItem.addSubItem(search, R.drawable.msg_search, LocaleController.getString("Search", R.string.Search));
hola.txt:ChatActivity.java:                headerItem.addSubItem(report, R.drawable.msg_report, LocaleController.getString("ReportChat", R.string.ReportChat));
hola.txt:ChatActivity.java:                timeItem2 = headerItem.addSubItem(chat_enc_timer, R.drawable.msg_timer, LocaleController.getString("SetTimer", R.string.SetTimer));
hola.txt:ChatActivity.java:                headerItem.addSubItem(clear_history, R.drawable.msg_clear, LocaleController.getString("ClearHistory", R.string.ClearHistory));
hola.txt:ChatActivity.java:                headerItem.addSubItem(auto_delete_timer, R.drawable.msg_timer, LocaleController.getString("AutoDeleteSetTimer", R.string.AutoDeleteSetTimer));
hola.txt:ChatActivity.java:                        headerItem.addSubItem(delete_chat, R.drawable.msg_leave, LocaleController.getString("LeaveMegaMenu", R.string.LeaveMegaMenu));
hola.txt:ChatActivity.java:                        headerItem.addSubItem(delete_chat, R.drawable.msg_leave, LocaleController.getString("LeaveChannelMenu", R.string.LeaveChannelMenu));
hola.txt:ChatActivity.java:                    headerItem.addSubItem(delete_chat, R.drawable.msg_leave, LocaleController.getString("DeleteAndExit", R.string.DeleteAndExit));
hola.txt:ChatActivity.java:                    headerItem.addSubItem(delete_chat, R.drawable.msg_delete, LocaleController.getString("DeleteChatUser", R.string.DeleteChatUser));
hola.txt:ChatActivity.java:                headerItem.addSubItem(add_shortcut, R.drawable.msg_home, LocaleController.getString("AddShortcut", R.string.AddShortcut));
hola.txt:ChatActivity.java:                headerItem.addSubItem(bot_settings, R.drawable.menu_settings, LocaleController.getString("BotSettings", R.string.BotSettings));
hola.txt:ChatActivity.java:                headerItem.addSubItem(bot_help, R.drawable.menu_help, LocaleController.getString("BotHelp", R.string.BotHelp));
hola.txt:ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(save_to, R.drawable.msg_download, AndroidUtilities.dp(54), LocaleController.getString("SaveToMusic", R.string.SaveToMusic)));
hola.txt:ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(edit, R.drawable.msg_edit, AndroidUtilities.dp(54), LocaleController.getString("Edit", R.string.Edit)));
hola.txt:ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(star, R.drawable.msg_fave, AndroidUtilities.dp(54), LocaleController.getString("AddToFavorites", R.string.AddToFavorites)));
hola.txt:ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(copy, R.drawable.msg_copy, AndroidUtilities.dp(54), LocaleController.getString("Copy", R.string.Copy)));
hola.txt:ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(forward, R.drawable.msg_forward, AndroidUtilities.dp(54), LocaleController.getString("Forward", R.string.Forward)));
hola.txt:ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete)));
hola.txt:ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(edit, R.drawable.msg_edit, AndroidUtilities.dp(54), LocaleController.getString("Edit", R.string.Edit)));
hola.txt:ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(star, R.drawable.msg_fave, AndroidUtilities.dp(54), LocaleController.getString("AddToFavorites", R.string.AddToFavorites)));
hola.txt:ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(copy, R.drawable.msg_copy, AndroidUtilities.dp(54), LocaleController.getString("Copy", R.string.Copy)));
hola.txt:ChatActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete)));
hola.txt:ChatActivity.java:                muteItem.setTextAndIcon(LocaleController.getString("UnmuteNotifications", R.string.UnmuteNotifications), R.drawable.msg_unmute);
hola.txt:ChatActivity.java:                muteItem.setTextAndIcon(LocaleController.getString("MuteNotifications", R.string.MuteNotifications), R.drawable.msg_mute);
hola.txt:ChatEditActivity.java:            logCell.setTextAndIcon(LocaleController.getString("EventLog", R.string.EventLog), R.drawable.group_log, false);
hola.txt:ChatEditActivity.java:                setAvatarCell.setTextAndIcon(LocaleController.getString("ChatSetNewPhoto", R.string.ChatSetNewPhoto), R.drawable.menu_camera2, true);
hola.txt:ChatEditActivity.java:                setAvatarCell.setTextAndIcon(LocaleController.getString("ChatSetPhotoOrVideo", R.string.ChatSetPhotoOrVideo), R.drawable.menu_camera2, true);
hola.txt:ChatEditActivity.java:                setAvatarCell.setTextAndIcon(LocaleController.getString("ChatSetNewPhoto", R.string.ChatSetNewPhoto), R.drawable.menu_camera2, true);
hola.txt:ChatEditActivity.java:                    membersCell.setTextAndValueAndIcon(LocaleController.getString("ChannelSubscribers", R.string.ChannelSubscribers), String.format("%d", info.participants_count), R.drawable.actions_viewmembers, true);
hola.txt:ChatEditActivity.java:                    blockCell.setTextAndValueAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), String.format("%d", Math.max(info.banned_count, info.kicked_count)), R.drawable.actions_removed, logCell != null && logCell.getVisibility() == View.VISIBLE);
hola.txt:ChatEditActivity.java:                        membersCell.setTextAndValueAndIcon(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), String.format("%d", info.participants_count), R.drawable.actions_viewmembers, logCell != null && logCell.getVisibility() == View.VISIBLE);
hola.txt:ChatEditActivity.java:                        membersCell.setTextAndValueAndIcon(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), String.format("%d", info.participants.participants.size()), R.drawable.actions_viewmembers, logCell != null && logCell.getVisibility() == View.VISIBLE);
hola.txt:ChatEditActivity.java:                        blockCell.setTextAndValueAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), String.format("%d", Math.max(info.banned_count, info.kicked_count)), R.drawable.actions_removed, logCell != null && logCell.getVisibility() == View.VISIBLE);
hola.txt:ChatEditActivity.java:                        blockCell.setTextAndValueAndIcon(LocaleController.getString("ChannelPermissions", R.string.ChannelPermissions), String.format("%d/%d", count, 8), R.drawable.actions_permissions, true);
hola.txt:ChatEditActivity.java:                adminCell.setTextAndValueAndIcon(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators), String.format("%d", ChatObject.isChannel(currentChat) ? info.admins_count : getAdminCount()), R.drawable.actions_addadmin, true);
hola.txt:ChatEditActivity.java:                    membersCell.setTextAndIcon(LocaleController.getString("ChannelSubscribers", R.string.ChannelSubscribers), R.drawable.actions_viewmembers, true);
hola.txt:ChatEditActivity.java:                    blockCell.setTextAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), R.drawable.actions_removed, logCell != null && logCell.getVisibility() == View.VISIBLE);
hola.txt:ChatEditActivity.java:                    membersCell.setTextAndIcon(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), R.drawable.actions_viewmembers, logCell != null && logCell.getVisibility() == View.VISIBLE);
hola.txt:ChatEditActivity.java:                        blockCell.setTextAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), R.drawable.actions_removed, logCell != null && logCell.getVisibility() == View.VISIBLE);
hola.txt:ChatEditActivity.java:                        blockCell.setTextAndIcon(LocaleController.getString("ChannelPermissions", R.string.ChannelPermissions), R.drawable.actions_permissions, true);
hola.txt:ChatEditActivity.java:                adminCell.setTextAndIcon(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators), R.drawable.actions_addadmin, true);
hola.txt:ChatEditActivity.java:                    inviteLinksCell.setTextAndValueAndIcon(LocaleController.getString("InviteLinks", R.string.InviteLinks), Integer.toString(info.invitesCount), R.drawable.actions_link, true);
hola.txt:ChatEditActivity.java:                    inviteLinksCell.setTextAndValueAndIcon(LocaleController.getString("InviteLinks", R.string.InviteLinks), "1", R.drawable.actions_link, true);
hola.txt:ChatEditTypeActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:ChatEditTypeActivity.java:        manageLinksTextView.setTextAndIcon(LocaleController.getString("ManageInviteLinks", R.string.ManageInviteLinks), R.drawable.actions_link, false);
hola.txt:ChatLinkActivity.java:                            actionCell.setText(LocaleController.getString("DiscussionUnlinkGroup", R.string.DiscussionUnlinkGroup), null, R.drawable.actions_remove_user, false);
hola.txt:ChatLinkActivity.java:                            actionCell.setText(LocaleController.getString("DiscussionCreateGroup", R.string.DiscussionCreateGroup), null, R.drawable.menu_groups, true);
hola.txt:ChatLinkActivity.java:                        actionCell.setText(LocaleController.getString("DiscussionUnlinkChannel", R.string.DiscussionUnlinkChannel), null, R.drawable.actions_remove_user, false);
hola.txt:ChatRightsEditActivity.java:            menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:ChatUsersActivity.java:                doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:ChatUsersActivity.java:                            actionCell.setText(LocaleController.getString("ChannelAddException", R.string.ChannelAddException), null, R.drawable.actions_addmember2, participantsStartRow != -1);
hola.txt:ChatUsersActivity.java:                            actionCell.setText(LocaleController.getString("ChannelBlockUser", R.string.ChannelBlockUser), null, R.drawable.actions_removed, false);
hola.txt:ChatUsersActivity.java:                            actionCell.setText(LocaleController.getString("ChannelAddAdmin", R.string.ChannelAddAdmin), null, R.drawable.add_admin, showDivider);
hola.txt:ChatUsersActivity.java:                                actionCell.setText(LocaleController.getString("AddSubscriber", R.string.AddSubscriber), null, R.drawable.actions_addmember2, showDivider);
hola.txt:ChatUsersActivity.java:                                actionCell.setText(LocaleController.getString("AddMember", R.string.AddMember), null, R.drawable.actions_addmember2, showDivider);
hola.txt:ChatUsersActivity.java:                        actionCell.setText(LocaleController.getString("EventLog", R.string.EventLog), null, R.drawable.group_log, false);
hola.txt:ChatUsersActivity.java:                        actionCell.setText(LocaleController.getString("ChannelInviteViaLink", R.string.ChannelInviteViaLink), null, R.drawable.profile_link, true);
hola.txt:ChatUsersActivity.java:                        actionCell.setText(LocaleController.getString("BroadcastGroupConvert", R.string.BroadcastGroupConvert), null, R.drawable.msg_channel, false);
hola.txt:Components/AudioPlayerAlert.java:        repeatSongItem = repeatButton.addSubItem(3, R.drawable.player_new_repeatone, LocaleController.getString("RepeatSong", R.string.RepeatSong));
hola.txt:Components/AudioPlayerAlert.java:        repeatListItem = repeatButton.addSubItem(4, R.drawable.player_new_repeatall, LocaleController.getString("RepeatList", R.string.RepeatList));
hola.txt:Components/AudioPlayerAlert.java:        shuffleListItem = repeatButton.addSubItem(2, R.drawable.player_new_shuffle, LocaleController.getString("ShuffleList", R.string.ShuffleList));
hola.txt:Components/AudioPlayerAlert.java:        reverseOrderItem = repeatButton.addSubItem(1, R.drawable.player_new_order, LocaleController.getString("ReverseOrder", R.string.ReverseOrder));
hola.txt:Components/AudioPlayerAlert.java:        optionsButton.addSubItem(1, R.drawable.msg_forward, LocaleController.getString("Forward", R.string.Forward));
hola.txt:Components/AudioPlayerAlert.java:        optionsButton.addSubItem(2, R.drawable.msg_shareout, LocaleController.getString("ShareFile", R.string.ShareFile));
hola.txt:Components/AudioPlayerAlert.java:        optionsButton.addSubItem(5, R.drawable.msg_download, LocaleController.getString("SaveToMusic", R.string.SaveToMusic));
hola.txt:Components/AudioPlayerAlert.java:        optionsButton.addSubItem(4, R.drawable.msg_message, LocaleController.getString("ShowInChat", R.string.ShowInChat));
hola.txt:Components/ChatActivityEnterView.java:                        cell.setTextAndIcon(LocaleController.getString("SetReminder", R.string.SetReminder), R.drawable.msg_schedule);
hola.txt:Components/ChatActivityEnterView.java:                        cell.setTextAndIcon(LocaleController.getString("ScheduleMessage", R.string.ScheduleMessage), R.drawable.msg_schedule);
hola.txt:Components/ChatActivityEnterView.java:                    cell.setTextAndIcon(LocaleController.getString("SendWithoutSound", R.string.SendWithoutSound), R.drawable.input_notify_off);
hola.txt:Components/ChatAttachAlert.java:                        itemCells[a].setTextAndIcon(LocaleController.getString("SetReminder", R.string.SetReminder), R.drawable.msg_schedule);
hola.txt:Components/ChatAttachAlert.java:                        itemCells[a].setTextAndIcon(LocaleController.getString("ScheduleMessage", R.string.ScheduleMessage), R.drawable.msg_schedule);
hola.txt:Components/ChatAttachAlert.java:                    itemCells[a].setTextAndIcon(LocaleController.getString("SendWithoutSound", R.string.SendWithoutSound), R.drawable.input_notify_off);
hola.txt:Components/ChatAttachAlertLocationLayout.java:        mapTypeButton.addSubItem(map_list_menu_map, R.drawable.msg_map, LocaleController.getString("Map", R.string.Map));
hola.txt:Components/ChatAttachAlertLocationLayout.java:        mapTypeButton.addSubItem(map_list_menu_satellite, R.drawable.msg_satellite, LocaleController.getString("Satellite", R.string.Satellite));
hola.txt:Components/ChatAttachAlertLocationLayout.java:        mapTypeButton.addSubItem(map_list_menu_hybrid, R.drawable.msg_hybrid, LocaleController.getString("Hybrid", R.string.Hybrid));
hola.txt:Components/ChatAttachAlertPhotoLayout.java:        parentAlert.selectedMenuItem.addSubItem(open_in, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
hola.txt:Components/ColorPicker.java:            menuItem.addSubItem(item_edit, R.drawable.msg_edit, LocaleController.getString("OpenInEditor", R.string.OpenInEditor));
hola.txt:Components/ColorPicker.java:            menuItem.addSubItem(item_share, R.drawable.msg_share, LocaleController.getString("ShareTheme", R.string.ShareTheme));
hola.txt:Components/ColorPicker.java:            menuItem.addSubItem(item_delete, R.drawable.msg_delete, LocaleController.getString("DeleteTheme", R.string.DeleteTheme));
hola.txt:Components/GroupCallPipAlertView.java:        leaveButton.setData(R.drawable.calls_decline, 0xffffffff, 0xFFCE4A4A, 0.3f, false, LocaleController.getString("VoipGroupLeave", R.string.VoipGroupLeave), false, false);
hola.txt:Components/GroupCallPipAlertView.java:            soundButton.setData(R.drawable.calls_bluetooth, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipAudioRoutingBluetooth", R.string.VoipAudioRoutingBluetooth), false, animated);
hola.txt:Components/GroupCallPipAlertView.java:            soundButton.setData(R.drawable.calls_speaker, Color.WHITE, 0, 0.3f, true, LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
hola.txt:Components/GroupCallPipAlertView.java:                soundButton.setData(R.drawable.calls_headphones, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipAudioRoutingHeadset", R.string.VoipAudioRoutingHeadset), false, animated);
hola.txt:Components/GroupCallPipAlertView.java:                soundButton.setData(R.drawable.calls_speaker, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
hola.txt:Components/GroupCallPipAlertView.java:            muteButton.setData(R.drawable.calls_unmute, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.3f)), 0.1f, true, LocaleController.getString("VoipMutedByAdminShort", R.string.VoipMutedByAdminShort), true, animated);
hola.txt:Components/GroupCallPipAlertView.java:            muteButton.setData(R.drawable.calls_unmute, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * (service.isMicMute() ? 0.3f : 0.15f))), 0.1f, true, service.isMicMute() ? LocaleController.getString("VoipUnmute", R.string.VoipUnmute) : LocaleController.getString("VoipMute", R.string.VoipMute), service.isMicMute(), animated);
hola.txt:Components/GroupVoipInviteAlert.java:                        actionCell.setText(LocaleController.getString("VoipGroupCopyInviteLink", R.string.VoipGroupCopyInviteLink), null, R.drawable.msg_link, 7, showDivider);
hola.txt:Components/InviteMembersBottomSheet.java:                    manageChatTextCell.setText(LocaleController.getString("VoipGroupCopyInviteLink", R.string.VoipGroupCopyInviteLink), null, R.drawable.msg_link, 7, true);
hola.txt:Components/LinkActionView.java:                subItem.setTextAndIcon(LocaleController.getString("Edit", R.string.Edit), R.drawable.msg_edit);
hola.txt:Components/LinkActionView.java:            subItem.setTextAndIcon(LocaleController.getString("GetQRCode", R.string.GetQRCode), R.drawable.msg_qrcode);
hola.txt:Components/LinkActionView.java:                subItem.setTextAndIcon(LocaleController.getString("RevokeLink", R.string.RevokeLink), R.drawable.msg_delete);
hola.txt:Components/PhotoPaintView.java:            View radial = buttonForBrush(0, R.drawable.msg_draw_pen, LocaleController.getString("PaintPen", R.string.PaintPen), currentBrush == 0);
hola.txt:Components/PhotoPaintView.java:            View elliptical = buttonForBrush(1, R.drawable.msg_draw_marker, LocaleController.getString("PaintMarker", R.string.PaintMarker), currentBrush == 1);
hola.txt:Components/PhotoPaintView.java:            View neon = buttonForBrush(2, R.drawable.msg_draw_neon, LocaleController.getString("PaintNeon", R.string.PaintNeon), currentBrush == 2);
hola.txt:Components/PhotoPaintView.java:            View arrow = buttonForBrush(3, R.drawable.msg_draw_arrow, LocaleController.getString("PaintArrow", R.string.PaintArrow), currentBrush == 3);
hola.txt:Components/SearchViewPager.java:            gotoItem = actionMode.addItemWithWidth(gotoItemId, R.drawable.msg_message, AndroidUtilities.dp(54), LocaleController.getString("AccDescrGoToMessage", R.string.AccDescrGoToMessage));
hola.txt:Components/SearchViewPager.java:            forwardItem = actionMode.addItemWithWidth(forwardItemId, R.drawable.msg_forward, AndroidUtilities.dp(54), LocaleController.getString("Forward", R.string.Forward));
hola.txt:Components/StickersAlert.java:        optionsButton.addSubItem(1, R.drawable.msg_share, LocaleController.getString("StickersShare", R.string.StickersShare));
hola.txt:Components/StickersAlert.java:        optionsButton.addSubItem(2, R.drawable.msg_link, LocaleController.getString("CopyLink", R.string.CopyLink));
hola.txt:DialogsActivity.java:                            cell.setTextAndIcon(LocaleController.getString("FilterReorder", R.string.FilterReorder), R.drawable.tabs_reorder);
hola.txt:DialogsActivity.java:                                cell.setTextAndIcon(LocaleController.getString("FilterEditAll", R.string.FilterEditAll), R.drawable.msg_edit);
hola.txt:DialogsActivity.java:                                cell.setTextAndIcon(LocaleController.getString("FilterEdit", R.string.FilterEdit), R.drawable.msg_edit);
hola.txt:DialogsActivity.java:                            cell.setTextAndIcon(LocaleController.getString("FilterDeleteItem", R.string.FilterDeleteItem), R.drawable.msg_delete);
hola.txt:DialogsActivity.java:            FiltersView.MediaFilterData filterData = new FiltersView.MediaFilterData(R.drawable.chats_archive, R.drawable.chats_archive, LocaleController.getString("ArchiveSearchFilter", R.string.ArchiveSearchFilter), null, FiltersView.FILTER_TYPE_ARCHIVE);
hola.txt:DialogsActivity.java:        deleteItem = actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete));
hola.txt:DialogsActivity.java:        ActionBarMenuItem otherItem = actionMode.addItemWithWidth(0, R.drawable.ic_ab_other, AndroidUtilities.dp(54), LocaleController.getString("AccDescrMoreOptions", R.string.AccDescrMoreOptions));
hola.txt:DialogsActivity.java:        archiveItem = otherItem.addSubItem(archive, R.drawable.msg_archive, LocaleController.getString("Archive", R.string.Archive));
hola.txt:DialogsActivity.java:        pin2Item = otherItem.addSubItem(pin2, R.drawable.msg_pin, LocaleController.getString("DialogPin", R.string.DialogPin));
hola.txt:DialogsActivity.java:        addToFolderItem = otherItem.addSubItem(add_to_folder, R.drawable.msg_addfolder, LocaleController.getString("FilterAddTo", R.string.FilterAddTo));
hola.txt:DialogsActivity.java:        removeFromFolderItem = otherItem.addSubItem(remove_from_folder, R.drawable.msg_removefolder, LocaleController.getString("FilterRemoveFrom", R.string.FilterRemoveFrom));
hola.txt:DialogsActivity.java:        readItem = otherItem.addSubItem(read, R.drawable.msg_markread, LocaleController.getString("MarkAsRead", R.string.MarkAsRead));
hola.txt:DialogsActivity.java:        clearItem = otherItem.addSubItem(clear, R.drawable.msg_clear, LocaleController.getString("ClearHistory", R.string.ClearHistory));
hola.txt:DialogsActivity.java:        blockItem = otherItem.addSubItem(block, R.drawable.msg_block, LocaleController.getString("BlockUser", R.string.BlockUser));
hola.txt:DialogsActivity.java:            readItem.setTextAndIcon(LocaleController.getString("MarkAsRead", R.string.MarkAsRead), R.drawable.msg_markread);
hola.txt:DialogsActivity.java:            readItem.setTextAndIcon(LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread), R.drawable.msg_markunread);
hola.txt:FilterCreateActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("FilterAddChats", R.string.FilterAddChats), R.drawable.actions_addchat, position + 1 != includeSectionRow);
hola.txt:FilterCreateActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("FilterRemoveChats", R.string.FilterRemoveChats), R.drawable.actions_addchat, position + 1 != excludeSectionRow);
hola.txt:GroupCallActivity.java:        leaveButton.setData(R.drawable.calls_decline, 0xffffffff, Theme.getColor(Theme.key_voipgroup_leaveButton), 0.3f, false, LocaleController.getString("VoipGroupLeave", R.string.VoipGroupLeave), false, false);
hola.txt:GroupCallActivity.java:        editTitleItem = otherItem.addSubItem(edit_item, R.drawable.msg_edit, recordCallDrawable, LocaleController.getString("VoipGroupEditTitle", R.string.VoipGroupEditTitle), true, false);
hola.txt:GroupCallActivity.java:        permissionItem = otherItem.addSubItem(permission_item, R.drawable.msg_permissions, recordCallDrawable, LocaleController.getString("VoipGroupEditPermissions", R.string.VoipGroupEditPermissions), false, false);
hola.txt:GroupCallActivity.java:        inviteItem = otherItem.addSubItem(share_invite_link_item, R.drawable.msg_link, LocaleController.getString("VoipGroupShareInviteLink", R.string.VoipGroupShareInviteLink));
hola.txt:GroupCallActivity.java:        leaveItem = otherItem.addSubItem(leave_item, R.drawable.msg_endcall, LocaleController.getString("VoipGroupEndChat", R.string.VoipGroupEndChat));
hola.txt:GroupCallActivity.java:            soundButton.setData(R.drawable.calls_bluetooth, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipAudioRoutingBluetooth", R.string.VoipAudioRoutingBluetooth), false, animated);
hola.txt:GroupCallActivity.java:            soundButton.setData(R.drawable.calls_speaker, Color.WHITE, 0, 0.3f, true, LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
hola.txt:GroupCallActivity.java:                soundButton.setData(R.drawable.calls_headphones, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipAudioRoutingHeadset", R.string.VoipAudioRoutingHeadset), false, animated);
hola.txt:GroupCallActivity.java:                soundButton.setData(R.drawable.calls_speaker, Color.WHITE, 0, 0.1f, true, LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
hola.txt:GroupCallActivity.java:                    textCell.setTextAndIcon(LocaleController.getString("VoipGroupInviteMember", R.string.VoipGroupInviteMember), R.drawable.actions_addmember2, true);
hola.txt:GroupCreateActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("ChannelInviteViaLink", R.string.ChannelInviteViaLink), R.drawable.profile_link, false);
hola.txt:GroupCreateActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("InviteToGroupByLink", R.string.InviteToGroupByLink), R.drawable.profile_link, false);
hola.txt:GroupStickersActivity.java:        doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:GroupStickersActivity.java:                            cell.setText(LocaleController.getString("ChooseStickerSetNotFound", R.string.ChooseStickerSetNotFound), LocaleController.getString("ChooseStickerSetNotFoundInfo", R.string.ChooseStickerSetNotFoundInfo), R.drawable.ic_smiles2_sad, false);
hola.txt:InviteContactsActivity.java:                    ((InviteTextCell) view).setTextAndIcon(LocaleController.getString("ShareTelegram", R.string.ShareTelegram), R.drawable.share);
hola.txt:LocationActivity.java:                otherItem.addSubItem(open_in, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
hola.txt:LocationActivity.java:                    otherItem.addSubItem(share_live_location, R.drawable.menu_location, LocaleController.getString("SendLiveLocationMenu", R.string.SendLiveLocationMenu));
hola.txt:LocationActivity.java:        mapTypeButton.addSubItem(map_list_menu_map, R.drawable.msg_map, LocaleController.getString("Map", R.string.Map));
hola.txt:LocationActivity.java:        mapTypeButton.addSubItem(map_list_menu_satellite, R.drawable.msg_satellite, LocaleController.getString("Satellite", R.string.Satellite));
hola.txt:LocationActivity.java:        mapTypeButton.addSubItem(map_list_menu_hybrid, R.drawable.msg_hybrid, LocaleController.getString("Hybrid", R.string.Hybrid));
hola.txt:LogoutActivity.java:                        view.setTextAndValueAndIcon(LocaleController.getString("AddAnotherAccount", R.string.AddAnotherAccount), LocaleController.getString("AddAnotherAccountInfo", R.string.AddAnotherAccountInfo), R.drawable.actions_addmember2, true);
hola.txt:LogoutActivity.java:                        view.setTextAndValueAndIcon(LocaleController.getString("SetPasscode", R.string.SetPasscode), LocaleController.getString("SetPasscodeInfo", R.string.SetPasscodeInfo), R.drawable.menu_passcode, true);
hola.txt:LogoutActivity.java:                        view.setTextAndValueAndIcon(LocaleController.getString("ClearCache", R.string.ClearCache), LocaleController.getString("ClearCacheInfo", R.string.ClearCacheInfo), R.drawable.menu_clearcache, true);
hola.txt:LogoutActivity.java:                        view.setTextAndValueAndIcon(LocaleController.getString("ChangePhoneNumber", R.string.ChangePhoneNumber), LocaleController.getString("ChangePhoneNumberInfo", R.string.ChangePhoneNumberInfo), R.drawable.menu_newphone, true);
hola.txt:LogoutActivity.java:                        view.setTextAndValueAndIcon(LocaleController.getString("ContactSupport", R.string.ContactSupport), LocaleController.getString("ContactSupportInfo", R.string.ContactSupportInfo), R.drawable.menu_support, false);
hola.txt:MediaActivity.java:            actionModeViews.add(gotoItem = actionMode.addItemWithWidth(gotochat, R.drawable.msg_message, AndroidUtilities.dp(54), LocaleController.getString("AccDescrGoToMessage", R.string.AccDescrGoToMessage)));
hola.txt:MediaActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(forward, R.drawable.msg_forward, AndroidUtilities.dp(54), LocaleController.getString("Forward", R.string.Forward)));
hola.txt:MediaActivity.java:        actionModeViews.add(actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete)));
hola.txt:MessageStatisticActivity.java:            headerItem.addSubItem(1, R.drawable.msg_stats, LocaleController.getString("ViewChannelStats", R.string.ViewChannelStats));
hola.txt:NotificationsCustomSettingsActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("NotificationsAddAnException", R.string.NotificationsAddAnException), R.drawable.actions_addmember2, exceptionsStartRow != -1);
hola.txt:PasscodeActivity.java:            menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:PassportActivity.java:            doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:PaymentFormActivity.java:            doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:PeopleNearbyActivity.java:                        actionCell.setText(LocaleController.getString("NearbyCreateGroup", R.string.NearbyCreateGroup), null, R.drawable.groups_create, chatsStartRow != -1);
hola.txt:PeopleNearbyActivity.java:                            actionCell.setText(LocaleController.getString("StopShowingMe", R.string.StopShowingMe), null, R.drawable.actions_nearby_off, usersStartRow != -1);
hola.txt:PeopleNearbyActivity.java:                            actionCell.setText(LocaleController.getString("MakeMyselfVisible", R.string.MakeMyselfVisible), null, R.drawable.actions_nearby_on, usersStartRow != -1);
hola.txt:PhotoAlbumPickerActivity.java:            menu.addItem(2, R.drawable.ic_ab_search).setContentDescription(LocaleController.getString("Search", R.string.Search));
hola.txt:PhotoAlbumPickerActivity.java:        menuItem.addSubItem(1, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
hola.txt:PhotoAlbumPickerActivity.java:                            itemCells[a].setTextAndIcon(LocaleController.getString("SetReminder", R.string.SetReminder), R.drawable.msg_schedule);
hola.txt:PhotoAlbumPickerActivity.java:                            itemCells[a].setTextAndIcon(LocaleController.getString("ScheduleMessage", R.string.ScheduleMessage), R.drawable.msg_schedule);
hola.txt:PhotoAlbumPickerActivity.java:                        itemCells[a].setTextAndIcon(LocaleController.getString("SendWithoutSound", R.string.SendWithoutSound), R.drawable.input_notify_off);
hola.txt:PhotoCropActivity.java:        menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:PhotoPickerActivity.java:            showAsListItem = menuItem.addSubItem(change_sort, R.drawable.msg_list, LocaleController.getString("ShowAsList", R.string.ShowAsList));
hola.txt:PhotoPickerActivity.java:            menuItem.addSubItem(open_in, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
hola.txt:PhotoPickerActivity.java:                                itemCells[a].setTextAndIcon(LocaleController.getString("SetReminder", R.string.SetReminder), R.drawable.msg_schedule);
hola.txt:PhotoPickerActivity.java:                                itemCells[a].setTextAndIcon(LocaleController.getString("ScheduleMessage", R.string.ScheduleMessage), R.drawable.msg_schedule);
hola.txt:PhotoPickerActivity.java:                            itemCells[a].setTextAndIcon(LocaleController.getString("SendWithoutSound", R.string.SendWithoutSound), R.drawable.input_notify_off);
hola.txt:PhotoPickerActivity.java:                        cell.setTextAndIcon(LocaleController.getString("ClearRecentHistory", R.string.ClearRecentHistory), R.drawable.menu_clear_recent, false);
hola.txt:PhotoViewer.java:        menuItem.addSubItem(gallery_menu_openin, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp)).setColors(0xfffafafa, 0xfffafafa);
hola.txt:PhotoViewer.java:        allMediaItem = menuItem.addSubItem(gallery_menu_showall, R.drawable.msg_media, LocaleController.getString("ShowAllMedia", R.string.ShowAllMedia));
hola.txt:PhotoViewer.java:        menuItem.addSubItem(gallery_menu_savegif, R.drawable.msg_gif, LocaleController.getString("SaveToGIFs", R.string.SaveToGIFs)).setColors(0xfffafafa, 0xfffafafa);
hola.txt:PhotoViewer.java:        menuItem.addSubItem(gallery_menu_showinchat, R.drawable.msg_message, LocaleController.getString("ShowInChat", R.string.ShowInChat)).setColors(0xfffafafa, 0xfffafafa);
hola.txt:PhotoViewer.java:        menuItem.addSubItem(gallery_menu_masks2, R.drawable.msg_sticker, LocaleController.getString("ShowStickers", R.string.ShowStickers)).setColors(0xfffafafa, 0xfffafafa);
hola.txt:PhotoViewer.java:        menuItem.addSubItem(gallery_menu_share, R.drawable.msg_shareout, LocaleController.getString("ShareFile", R.string.ShareFile)).setColors(0xfffafafa, 0xfffafafa);
hola.txt:PhotoViewer.java:        menuItem.addSubItem(gallery_menu_save, R.drawable.msg_gallery, LocaleController.getString("SaveToGallery", R.string.SaveToGallery)).setColors(0xfffafafa, 0xfffafafa);
hola.txt:PhotoViewer.java:        //menuItem.addSubItem(gallery_menu_edit_avatar, R.drawable.photo_paint, LocaleController.getString("EditPhoto", R.string.EditPhoto)).setColors(0xfffafafa, 0xfffafafa);
hola.txt:PhotoViewer.java:        menuItem.addSubItem(gallery_menu_set_as_main, R.drawable.menu_private, LocaleController.getString("SetAsMain", R.string.SetAsMain)).setColors(0xfffafafa, 0xfffafafa);
hola.txt:PhotoViewer.java:        menuItem.addSubItem(gallery_menu_delete, R.drawable.msg_delete, LocaleController.getString("Delete", R.string.Delete)).setColors(0xfffafafa, 0xfffafafa);
hola.txt:PhotoViewer.java:        menuItem.addSubItem(gallery_menu_cancel_loading, R.drawable.msg_cancel, LocaleController.getString("StopDownload", R.string.StopDownload)).setColors(0xfffafafa, 0xfffafafa);
hola.txt:PhotoViewer.java:                        cell.setTextAndIcon(LocaleController.getString("SetReminder", R.string.SetReminder), R.drawable.msg_schedule);
hola.txt:PhotoViewer.java:                        cell.setTextAndIcon(LocaleController.getString("ScheduleMessage", R.string.ScheduleMessage), R.drawable.msg_schedule);
hola.txt:PhotoViewer.java:                    cell.setTextAndIcon(LocaleController.getString("SendWithoutSound", R.string.SendWithoutSound), R.drawable.input_notify_off);
hola.txt:PhotoViewer.java:                    cell.setTextAndIcon(LocaleController.getString("ReplacePhoto", R.string.ReplacePhoto), R.drawable.msg_replace);
hola.txt:PhotoViewer.java:                    cell.setTextAndIcon(LocaleController.getString("SendAsNewPhoto", R.string.SendAsNewPhoto), R.drawable.msg_sendphoto);
hola.txt:PrivacyControlActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:PrivacyUsersActivity.java:                        actionCell.setText(LocaleController.getString("BlockUser", R.string.BlockUser), null, R.drawable.actions_addmember2, false);
hola.txt:PrivacyUsersActivity.java:                        actionCell.setText(LocaleController.getString("PrivacyAddAnException", R.string.PrivacyAddAnException), null, R.drawable.actions_addmember2, false);
hola.txt:ProfileActivity.java:                otherItem.addSubItem(edit_name, R.drawable.msg_edit, LocaleController.getString("EditName", R.string.EditName));
hola.txt:ProfileActivity.java:                            otherItem.addSubItem(block_contact, R.drawable.msg_block, LocaleController.getString("Unblock", R.string.Unblock));
hola.txt:ProfileActivity.java:                                otherItem.addSubItem(invite_to_group, R.drawable.msg_addbot, LocaleController.getString("BotInvite", R.string.BotInvite));
hola.txt:ProfileActivity.java:                            otherItem.addSubItem(share, R.drawable.msg_share, LocaleController.getString("BotShare", R.string.BotShare));
hola.txt:ProfileActivity.java:                            otherItem.addSubItem(add_contact, R.drawable.msg_addcontact, LocaleController.getString("AddContact", R.string.AddContact));
hola.txt:ProfileActivity.java:                            otherItem.addSubItem(share_contact, R.drawable.msg_share, LocaleController.getString("ShareContact", R.string.ShareContact));
hola.txt:ProfileActivity.java:                            otherItem.addSubItem(block_contact, !userBlocked ? R.drawable.msg_block : R.drawable.msg_retry, !userBlocked ? LocaleController.getString("BotStop", R.string.BotStop) : LocaleController.getString("BotRestart", R.string.BotRestart));
hola.txt:ProfileActivity.java:                            otherItem.addSubItem(block_contact, !userBlocked ? R.drawable.msg_block : R.drawable.msg_block, !userBlocked ? LocaleController.getString("BlockContact", R.string.BlockContact) : LocaleController.getString("Unblock", R.string.Unblock));
hola.txt:ProfileActivity.java:                        otherItem.addSubItem(share_contact, R.drawable.msg_share, LocaleController.getString("ShareContact", R.string.ShareContact));
hola.txt:ProfileActivity.java:                    otherItem.addSubItem(block_contact, !userBlocked ? R.drawable.msg_block : R.drawable.msg_block, !userBlocked ? LocaleController.getString("BlockContact", R.string.BlockContact) : LocaleController.getString("Unblock", R.string.Unblock));
hola.txt:ProfileActivity.java:                    otherItem.addSubItem(edit_contact, R.drawable.msg_edit, LocaleController.getString("EditContact", R.string.EditContact));
hola.txt:ProfileActivity.java:                    otherItem.addSubItem(delete_contact, R.drawable.msg_delete, LocaleController.getString("DeleteContact", R.string.DeleteContact));
hola.txt:ProfileActivity.java:                    otherItem.addSubItem(start_secret_chat, R.drawable.msg_start_secret, LocaleController.getString("StartEncryptedChat", R.string.StartEncryptedChat));
hola.txt:ProfileActivity.java:                otherItem.addSubItem(add_shortcut, R.drawable.msg_home, LocaleController.getString("AddShortcut", R.string.AddShortcut));
hola.txt:ProfileActivity.java:                        otherItem.addSubItem(call_item, R.drawable.msg_voicechat, LocaleController.getString("StartVoipChat", R.string.StartVoipChat));
hola.txt:ProfileActivity.java:                        otherItem.addSubItem(statistics, R.drawable.msg_stats, LocaleController.getString("Statistics", R.string.Statistics));
hola.txt:ProfileActivity.java:                    otherItem.addSubItem(search_members, R.drawable.msg_search, LocaleController.getString("SearchMembers", R.string.SearchMembers));
hola.txt:ProfileActivity.java:                        otherItem.addSubItem(leave_group, R.drawable.msg_leave, LocaleController.getString("LeaveMegaMenu", R.string.LeaveMegaMenu));
hola.txt:ProfileActivity.java:                        otherItem.addSubItem(share, R.drawable.msg_share, LocaleController.getString("BotShare", R.string.BotShare));
hola.txt:ProfileActivity.java:                        otherItem.addSubItem(view_discussion, R.drawable.msg_discussion, LocaleController.getString("ViewDiscussion", R.string.ViewDiscussion));
hola.txt:ProfileActivity.java:                        otherItem.addSubItem(leave_group, R.drawable.msg_leave, LocaleController.getString("LeaveChannelMenu", R.string.LeaveChannelMenu));
hola.txt:ProfileActivity.java:                        otherItem.addSubItem(call_item, R.drawable.msg_voicechat, LocaleController.getString("StartVoipChat", R.string.StartVoipChat));
hola.txt:ProfileActivity.java:                    otherItem.addSubItem(search_members, R.drawable.msg_search, LocaleController.getString("SearchMembers", R.string.SearchMembers));
hola.txt:ProfileActivity.java:                otherItem.addSubItem(leave_group, R.drawable.msg_leave, LocaleController.getString("DeleteAndExit", R.string.DeleteAndExit));
hola.txt:ProfileActivity.java:            otherItem.addSubItem(add_shortcut, R.drawable.msg_home, LocaleController.getString("AddShortcut", R.string.AddShortcut));
hola.txt:ProfileActivity.java:            otherItem.addSubItem(add_photo, R.drawable.msg_addphoto, LocaleController.getString("AddPhoto", R.string.AddPhoto));
hola.txt:ProfileActivity.java:            otherItem.addSubItem(set_as_main, R.drawable.menu_private, LocaleController.getString("SetAsMain", R.string.SetAsMain));
hola.txt:ProfileActivity.java:            otherItem.addSubItem(gallery_menu_save, R.drawable.msg_gallery, LocaleController.getString("SaveToGallery", R.string.SaveToGallery));
hola.txt:ProfileActivity.java:            //otherItem.addSubItem(edit_avatar, R.drawable.photo_paint, LocaleController.getString("EditPhoto", R.string.EditPhoto));
hola.txt:ProfileActivity.java:            otherItem.addSubItem(delete_avatar, R.drawable.msg_delete, LocaleController.getString("Delete", R.string.Delete));
hola.txt:ProfileActivity.java:            otherItem.addSubItem(gallery_menu_save, R.drawable.msg_gallery, LocaleController.getString("SaveToGallery", R.string.SaveToGallery));
hola.txt:ProfileActivity.java:            otherItem.addSubItem(logout, R.drawable.msg_leave, LocaleController.getString("LogOut", R.string.LogOut));
hola.txt:ProfileActivity.java:                                textCell.setTextAndValueAndIcon(LocaleController.getString("ChannelSubscribers", R.string.ChannelSubscribers), String.format("%d", chatInfo.participants_count), R.drawable.actions_viewmembers, position != membersSectionRow - 1);
hola.txt:ProfileActivity.java:                                textCell.setTextAndValueAndIcon(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), String.format("%d", chatInfo.participants_count), R.drawable.actions_viewmembers, position != membersSectionRow - 1);
hola.txt:ProfileActivity.java:                                textCell.setTextAndIcon(LocaleController.getString("ChannelSubscribers", R.string.ChannelSubscribers), R.drawable.actions_viewmembers, position != membersSectionRow - 1);
hola.txt:ProfileActivity.java:                                textCell.setTextAndIcon(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), R.drawable.actions_viewmembers, position != membersSectionRow - 1);
hola.txt:ProfileActivity.java:                            textCell.setTextAndValueAndIcon(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators), String.format("%d", chatInfo.admins_count), R.drawable.actions_addadmin, position != membersSectionRow - 1);
hola.txt:ProfileActivity.java:                            textCell.setTextAndIcon(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators), R.drawable.actions_addadmin, position != membersSectionRow - 1);
hola.txt:ProfileActivity.java:                            textCell.setTextAndValueAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), String.format("%d", Math.max(chatInfo.banned_count, chatInfo.kicked_count)), R.drawable.actions_removed, position != membersSectionRow - 1);
hola.txt:ProfileActivity.java:                            textCell.setTextAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), R.drawable.actions_removed, position != membersSectionRow - 1);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("AddMember", R.string.AddMember), R.drawable.actions_addmember2, membersSectionRow == -1);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("Language", R.string.Language), R.drawable.menu_language, false);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, true);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, true);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, true);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, true);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("Filters", R.string.Filters), R.drawable.menu_folders, true);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("AskAQuestion", R.string.AskAQuestion), R.drawable.menu_support2, true);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("TelegramFAQ", R.string.TelegramFAQ), R.drawable.menu_help, true);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("PrivacyPolicy", R.string.PrivacyPolicy), R.drawable.menu_policy, false);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("Devices", R.string.Devices), R.drawable.menu_devices, true);
hola.txt:ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("SetProfilePhoto", R.string.SetProfilePhoto), R.drawable.msg_addphoto, false);
hola.txt:ProfileActivity.java:                new SearchResult(1, LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(2, LocaleController.getString("NotificationsPrivateChats", R.string.NotificationsPrivateChats), LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsCustomSettingsActivity(NotificationsController.TYPE_PRIVATE, new ArrayList<>(), true))),
hola.txt:ProfileActivity.java:                new SearchResult(3, LocaleController.getString("NotificationsGroups", R.string.NotificationsGroups), LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsCustomSettingsActivity(NotificationsController.TYPE_GROUP, new ArrayList<>(), true))),
hola.txt:ProfileActivity.java:                new SearchResult(4, LocaleController.getString("NotificationsChannels", R.string.NotificationsChannels), LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsCustomSettingsActivity(NotificationsController.TYPE_CHANNEL, new ArrayList<>(), true))),
hola.txt:ProfileActivity.java:                new SearchResult(5, LocaleController.getString("VoipNotificationSettings", R.string.VoipNotificationSettings), "callsSectionRow", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(6, LocaleController.getString("BadgeNumber", R.string.BadgeNumber), "badgeNumberSection", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(7, LocaleController.getString("InAppNotifications", R.string.InAppNotifications), "inappSectionRow", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(8, LocaleController.getString("ContactJoined", R.string.ContactJoined), "contactJoinedRow", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(9, LocaleController.getString("PinnedMessages", R.string.PinnedMessages), "pinnedMessageRow", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(10, LocaleController.getString("ResetAllNotifications", R.string.ResetAllNotifications), "resetNotificationsRow", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(100, LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(101, LocaleController.getString("BlockedUsers", R.string.BlockedUsers), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyUsersActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(105, LocaleController.getString("PrivacyPhone", R.string.PrivacyPhone), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_PHONE, true))),
hola.txt:ProfileActivity.java:                new SearchResult(102, LocaleController.getString("PrivacyLastSeen", R.string.PrivacyLastSeen), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_LASTSEEN, true))),
hola.txt:ProfileActivity.java:                new SearchResult(103, LocaleController.getString("PrivacyProfilePhoto", R.string.PrivacyProfilePhoto), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_PHOTO, true))),
hola.txt:ProfileActivity.java:                new SearchResult(104, LocaleController.getString("PrivacyForwards", R.string.PrivacyForwards), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_FORWARDS, true))),
hola.txt:ProfileActivity.java:                new SearchResult(105, LocaleController.getString("PrivacyP2P", R.string.PrivacyP2P), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_P2P, true))),
hola.txt:ProfileActivity.java:                new SearchResult(106, LocaleController.getString("Calls", R.string.Calls), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_CALLS, true))),
hola.txt:ProfileActivity.java:                new SearchResult(107, LocaleController.getString("GroupsAndChannels", R.string.GroupsAndChannels), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_INVITE, true))),
hola.txt:ProfileActivity.java:                new SearchResult(108, LocaleController.getString("Passcode", R.string.Passcode), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PasscodeActivity(SharedConfig.passcodeHash.length() > 0 ? 2 : 0))),
hola.txt:ProfileActivity.java:                new SearchResult(109, LocaleController.getString("TwoStepVerification", R.string.TwoStepVerification), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new TwoStepVerificationActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(110, LocaleController.getString("SessionsTitle", R.string.SessionsTitle), R.drawable.menu_secret, () -> presentFragment(new SessionsActivity(0))),
hola.txt:ProfileActivity.java:                getMessagesController().autoarchiveAvailable ? new SearchResult(121, LocaleController.getString("ArchiveAndMute", R.string.ArchiveAndMute), "newChatsRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())) : null,
hola.txt:ProfileActivity.java:                new SearchResult(112, LocaleController.getString("DeleteAccountIfAwayFor2", R.string.DeleteAccountIfAwayFor2), "deleteAccountRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(113, LocaleController.getString("PrivacyPaymentsClear", R.string.PrivacyPaymentsClear), "paymentsClearRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(114, LocaleController.getString("WebSessionsTitle", R.string.WebSessionsTitle), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new SessionsActivity(1))),
hola.txt:ProfileActivity.java:                new SearchResult(115, LocaleController.getString("SyncContactsDelete", R.string.SyncContactsDelete), "contactsDeleteRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(116, LocaleController.getString("SyncContacts", R.string.SyncContacts), "contactsSyncRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(117, LocaleController.getString("SuggestContacts", R.string.SuggestContacts), "contactsSuggestRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(118, LocaleController.getString("MapPreviewProvider", R.string.MapPreviewProvider), "secretMapRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(119, LocaleController.getString("SecretWebPage", R.string.SecretWebPage), "secretWebpageRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(120, LocaleController.getString("Devices", R.string.Devices), R.drawable.menu_secret, () -> presentFragment(new SessionsActivity(0))),
hola.txt:ProfileActivity.java:                new SearchResult(200, LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(201, LocaleController.getString("DataUsage", R.string.DataUsage), "usageSectionRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(202, LocaleController.getString("StorageUsage", R.string.StorageUsage), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new CacheControlActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(203, LocaleController.getString("KeepMedia", R.string.KeepMedia), "keepMediaRow", LocaleController.getString("DataSettings", R.string.DataSettings), LocaleController.getString("StorageUsage", R.string.StorageUsage), R.drawable.menu_data, () -> presentFragment(new CacheControlActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(204, LocaleController.getString("ClearMediaCache", R.string.ClearMediaCache), "cacheRow", LocaleController.getString("DataSettings", R.string.DataSettings), LocaleController.getString("StorageUsage", R.string.StorageUsage), R.drawable.menu_data, () -> presentFragment(new CacheControlActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(205, LocaleController.getString("LocalDatabase", R.string.LocalDatabase), "databaseRow", LocaleController.getString("DataSettings", R.string.DataSettings), LocaleController.getString("StorageUsage", R.string.StorageUsage), R.drawable.menu_data, () -> presentFragment(new CacheControlActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(206, LocaleController.getString("NetworkUsage", R.string.NetworkUsage), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataUsageActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(207, LocaleController.getString("AutomaticMediaDownload", R.string.AutomaticMediaDownload), "mediaDownloadSectionRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(208, LocaleController.getString("WhenUsingMobileData", R.string.WhenUsingMobileData), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataAutoDownloadActivity(0))),
hola.txt:ProfileActivity.java:                new SearchResult(209, LocaleController.getString("WhenConnectedOnWiFi", R.string.WhenConnectedOnWiFi), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataAutoDownloadActivity(1))),
hola.txt:ProfileActivity.java:                new SearchResult(210, LocaleController.getString("WhenRoaming", R.string.WhenRoaming), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataAutoDownloadActivity(2))),
hola.txt:ProfileActivity.java:                new SearchResult(211, LocaleController.getString("ResetAutomaticMediaDownload", R.string.ResetAutomaticMediaDownload), "resetDownloadRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(212, LocaleController.getString("AutoplayMedia", R.string.AutoplayMedia), "autoplayHeaderRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(213, LocaleController.getString("AutoplayGIF", R.string.AutoplayGIF), "autoplayGifsRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(214, LocaleController.getString("AutoplayVideo", R.string.AutoplayVideo), "autoplayVideoRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(215, LocaleController.getString("Streaming", R.string.Streaming), "streamSectionRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(216, LocaleController.getString("EnableStreaming", R.string.EnableStreaming), "enableStreamRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(217, LocaleController.getString("Calls", R.string.Calls), "callsSectionRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(218, LocaleController.getString("VoipUseLessData", R.string.VoipUseLessData), "useLessDataForCallsRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(219, LocaleController.getString("VoipQuickReplies", R.string.VoipQuickReplies), "quickRepliesRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(220, LocaleController.getString("ProxySettings", R.string.ProxySettings), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new ProxyListActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(221, LocaleController.getString("UseProxyForCalls", R.string.UseProxyForCalls), "callsRow", LocaleController.getString("DataSettings", R.string.DataSettings), LocaleController.getString("ProxySettings", R.string.ProxySettings), R.drawable.menu_data, () -> presentFragment(new ProxyListActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(111, LocaleController.getString("PrivacyDeleteCloudDrafts", R.string.PrivacyDeleteCloudDrafts), "clearDraftsRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(300, LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
hola.txt:ProfileActivity.java:                new SearchResult(301, LocaleController.getString("TextSizeHeader", R.string.TextSizeHeader), "textSizeHeaderRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
hola.txt:ProfileActivity.java:                new SearchResult(302, LocaleController.getString("ChatBackground", R.string.ChatBackground), LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new WallpapersListActivity(WallpapersListActivity.TYPE_ALL))),
hola.txt:ProfileActivity.java:                new SearchResult(303, LocaleController.getString("SetColor", R.string.SetColor), null, LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("ChatBackground", R.string.ChatBackground), R.drawable.menu_chats, () -> presentFragment(new WallpapersListActivity(WallpapersListActivity.TYPE_COLOR))),
hola.txt:ProfileActivity.java:                new SearchResult(304, LocaleController.getString("ResetChatBackgrounds", R.string.ResetChatBackgrounds), "resetRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("ChatBackground", R.string.ChatBackground), R.drawable.menu_chats, () -> presentFragment(new WallpapersListActivity(WallpapersListActivity.TYPE_ALL))),
hola.txt:ProfileActivity.java:                new SearchResult(305, LocaleController.getString("AutoNightTheme", R.string.AutoNightTheme), LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_NIGHT))),
hola.txt:ProfileActivity.java:                new SearchResult(306, LocaleController.getString("ColorTheme", R.string.ColorTheme), "themeHeaderRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
hola.txt:ProfileActivity.java:                new SearchResult(307, LocaleController.getString("ChromeCustomTabs", R.string.ChromeCustomTabs), "customTabsRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
hola.txt:ProfileActivity.java:                new SearchResult(308, LocaleController.getString("DirectShare", R.string.DirectShare), "directShareRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
hola.txt:ProfileActivity.java:                new SearchResult(309, LocaleController.getString("EnableAnimations", R.string.EnableAnimations), "enableAnimationsRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
hola.txt:ProfileActivity.java:                new SearchResult(310, LocaleController.getString("RaiseToSpeak", R.string.RaiseToSpeak), "raiseToSpeakRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
hola.txt:ProfileActivity.java:                new SearchResult(311, LocaleController.getString("SendByEnter", R.string.SendByEnter), "sendByEnterRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
hola.txt:ProfileActivity.java:                new SearchResult(312, LocaleController.getString("SaveToGallerySettings", R.string.SaveToGallerySettings), "saveToGalleryRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
hola.txt:ProfileActivity.java:                new SearchResult(312, LocaleController.getString("DistanceUnits", R.string.DistanceUnits), "distanceRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
hola.txt:ProfileActivity.java:                new SearchResult(313, LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new StickersActivity(MediaDataController.TYPE_IMAGE))),
hola.txt:ProfileActivity.java:                new SearchResult(314, LocaleController.getString("SuggestStickers", R.string.SuggestStickers), "suggestRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), R.drawable.menu_chats, () -> presentFragment(new StickersActivity(MediaDataController.TYPE_IMAGE))),
hola.txt:ProfileActivity.java:                new SearchResult(315, LocaleController.getString("FeaturedStickers", R.string.FeaturedStickers), null, LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), R.drawable.menu_chats, () -> presentFragment(new FeaturedStickersActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(316, LocaleController.getString("Masks", R.string.Masks), null, LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), R.drawable.menu_chats, () -> presentFragment(new StickersActivity(MediaDataController.TYPE_MASK))),
hola.txt:ProfileActivity.java:                new SearchResult(317, LocaleController.getString("ArchivedStickers", R.string.ArchivedStickers), null, LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), R.drawable.menu_chats, () -> presentFragment(new ArchivedStickersActivity(MediaDataController.TYPE_IMAGE))),
hola.txt:ProfileActivity.java:                new SearchResult(317, LocaleController.getString("ArchivedMasks", R.string.ArchivedMasks), null, LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), R.drawable.menu_chats, () -> presentFragment(new ArchivedStickersActivity(MediaDataController.TYPE_MASK))),
hola.txt:ProfileActivity.java:                new SearchResult(400, LocaleController.getString("Language", R.string.Language), R.drawable.menu_language, () -> presentFragment(new LanguageSelectActivity())),
hola.txt:ProfileActivity.java:                new SearchResult(402, LocaleController.getString("AskAQuestion", R.string.AskAQuestion), LocaleController.getString("SettingsHelp", R.string.SettingsHelp), R.drawable.menu_help, () -> showDialog(AlertsCreator.createSupportAlert(ProfileActivity.this))),
hola.txt:ProfileActivity.java:                new SearchResult(403, LocaleController.getString("TelegramFAQ", R.string.TelegramFAQ), LocaleController.getString("SettingsHelp", R.string.SettingsHelp), R.drawable.menu_help, () -> Browser.openUrl(getParentActivity(), LocaleController.getString("TelegramFaqUrl", R.string.TelegramFaqUrl))),
hola.txt:ProfileActivity.java:                new SearchResult(404, LocaleController.getString("PrivacyPolicy", R.string.PrivacyPolicy), LocaleController.getString("SettingsHelp", R.string.SettingsHelp), R.drawable.menu_help, () -> Browser.openUrl(getParentActivity(), LocaleController.getString("PrivacyPolicyUrl", R.string.PrivacyPolicyUrl))),
hola.txt:ThemeActivity.java:            menuItem.addSubItem(share_theme, R.drawable.msg_share, LocaleController.getString("ShareTheme", R.string.ShareTheme));
hola.txt:ThemeActivity.java:            menuItem.addSubItem(edit_theme, R.drawable.msg_edit, LocaleController.getString("EditThemeColors", R.string.EditThemeColors));
hola.txt:ThemeActivity.java:            menuItem.addSubItem(create_theme, R.drawable.menu_palette, LocaleController.getString("CreateNewThemeMenu", R.string.CreateNewThemeMenu));
hola.txt:ThemeActivity.java:            menuItem.addSubItem(reset_settings, R.drawable.msg_reset, LocaleController.getString("ThemeResetToDefaults", R.string.ThemeResetToDefaults));
hola.txt:ThemeActivity.java:                        cell.setTextAndIcon(LocaleController.getString("ChangeChatBackground", R.string.ChangeChatBackground), R.drawable.msg_background, false);
hola.txt:TwoStepVerificationActivity.java:        doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
hola.txt:VoIPFragment.java:                    notificationsLayout.addNotification(R.drawable.calls_mute_mini, LocaleController.formatString("VoipUserMicrophoneIsOff", R.string.VoipUserMicrophoneIsOff, UserObject.getFirstName(callingUser)), "muted", animated);
hola.txt:VoIPFragment.java:                    notificationsLayout.addNotification(R.drawable.calls_camera_mini, LocaleController.formatString("VoipUserCameraIsOff", R.string.VoipUserCameraIsOff, UserObject.getFirstName(callingUser)), "video", animated);
hola.txt:VoIPFragment.java:                    notificationsLayout.addNotification(R.drawable.calls_mute_mini, LocaleController.formatString("VoipUserMicrophoneIsOff", R.string.VoipUserMicrophoneIsOff, UserObject.getFirstName(callingUser)), "muted", animated);
hola.txt:VoIPFragment.java:            bottomButtons[3].setData(R.drawable.calls_decline, Color.WHITE, 0xFFF01D2C, LocaleController.getString("VoipEndCall", R.string.VoipEndCall), false, animated);
hola.txt:VoIPFragment.java:            bottomButton.setData(R.drawable.calls_unmute, Color.BLACK, Color.WHITE, LocaleController.getString("VoipUnmute", R.string.VoipUnmute), true, animated);
hola.txt:VoIPFragment.java:            bottomButton.setData(R.drawable.calls_unmute, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipMute", R.string.VoipMute), false, animated);
hola.txt:VoIPFragment.java:                bottomButton.setData(R.drawable.calls_video, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipStopVideo", R.string.VoipStopVideo), false, animated);
hola.txt:VoIPFragment.java:                bottomButton.setData(R.drawable.calls_video, Color.BLACK, Color.WHITE, LocaleController.getString("VoipStartVideo", R.string.VoipStartVideo), true, animated);
hola.txt:VoIPFragment.java:            bottomButton.setData(R.drawable.calls_bluetooth, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipAudioRoutingBluetooth", R.string.VoipAudioRoutingBluetooth), false, animated);
hola.txt:VoIPFragment.java:            bottomButton.setData(R.drawable.calls_speaker, Color.BLACK, Color.WHITE, LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
hola.txt:VoIPFragment.java:            bottomButton.setData(R.drawable.calls_speaker, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
hola.txt:VoIPFragment.java:            bottomButton.setData(R.drawable.calls_flip,  ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.5f)), ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipFlip", R.string.VoipFlip), false, animated);
hola.txt:VoIPFragment.java:                bottomButton.setData(R.drawable.calls_flip, Color.BLACK, Color.WHITE, LocaleController.getString("VoipFlip", R.string.VoipFlip), false, animated);
hola.txt:VoIPFragment.java:                bottomButton.setData(R.drawable.calls_flip, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipFlip", R.string.VoipFlip), false, animated);
hola.txt:WallpapersListActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(forward, R.drawable.msg_forward, AndroidUtilities.dp(54), LocaleController.getString("Forward", R.string.Forward)));
hola.txt:WallpapersListActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete)));
hola.txt:WallpapersListActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("SelectFromGallery", R.string.SelectFromGallery), R.drawable.profile_photos, true);
hola.txt:WallpapersListActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("SetColor", R.string.SetColor), R.drawable.menu_palette, false);
hola.txt:WebviewActivity.java:            menuItem.addSubItem(open_in, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
IdenticonActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
IntroActivity.java:            BitmapDrawable drawable = (BitmapDrawable) getResources().getDrawable(R.drawable.catstile);
IntroActivity.java:            frameLayout4.setBackgroundResource(R.drawable.btnshadow);
IntroActivity.java:            loadTexture(R.drawable.intro_fast_arrow_shadow, 0);
IntroActivity.java:            loadTexture(R.drawable.intro_fast_arrow, 1);
IntroActivity.java:            loadTexture(R.drawable.intro_fast_body, 2);
IntroActivity.java:            loadTexture(R.drawable.intro_fast_spiral, 3);
IntroActivity.java:            loadTexture(R.drawable.intro_ic_bubble_dot, 4);
IntroActivity.java:            loadTexture(R.drawable.intro_ic_bubble, 5);
IntroActivity.java:            loadTexture(R.drawable.intro_ic_cam_lens, 6);
IntroActivity.java:            loadTexture(R.drawable.intro_ic_cam, 7);
IntroActivity.java:            loadTexture(R.drawable.intro_ic_pencil, 8);
IntroActivity.java:            loadTexture(R.drawable.intro_ic_pin, 9);
IntroActivity.java:            loadTexture(R.drawable.intro_ic_smile_eye, 10);
IntroActivity.java:            loadTexture(R.drawable.intro_ic_smile, 11);
IntroActivity.java:            loadTexture(R.drawable.intro_ic_videocam, 12);
IntroActivity.java:            loadTexture(R.drawable.intro_knot_down, 13);
IntroActivity.java:            loadTexture(R.drawable.intro_knot_up, 14);
IntroActivity.java:            loadTexture(R.drawable.intro_powerful_infinity_white, 15);
IntroActivity.java:            loadTexture(R.drawable.intro_powerful_infinity, 16);
IntroActivity.java:            loadTexture(R.drawable.intro_powerful_mask, 17);
IntroActivity.java:            loadTexture(R.drawable.intro_powerful_star, 18);
IntroActivity.java:            loadTexture(R.drawable.intro_private_door, 19);
IntroActivity.java:            loadTexture(R.drawable.intro_private_screw, 20);
IntroActivity.java:            loadTexture(R.drawable.intro_tg_plane, 21);
IntroActivity.java:            loadTexture(R.drawable.intro_tg_sphere, 22);
InviteContactsActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
InviteContactsActivity.java:                    ((InviteTextCell) view).setTextAndIcon(LocaleController.getString("ShareTelegram", R.string.ShareTelegram), R.drawable.share);
LanguageSelectActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
LanguageSelectActivity.java:        ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
LanguageSelectActivity.java:                        sectionCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
LanguageSelectActivity.java:                        sectionCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
LaunchActivity.java:        getWindow().setBackgroundDrawableResource(R.drawable.transparent);
LaunchActivity.java:            BitmapDrawable drawable = (BitmapDrawable) getResources().getDrawable(R.drawable.catstile);
LaunchActivity.java:            layersActionBarLayout.setBackgroundResource(R.drawable.boxshadow);
LinkEditActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
LinkEditActivity.java:        dividerUses.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
LinkEditActivity.java:        divider.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
LinkEditActivity.java:                    dividerUses.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
LinkEditActivity.java:                    divider.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
LocationActivity.java:            lastPressedMarkerView.setBackgroundResource(R.drawable.venue_tooltip);
LocationActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
LocationActivity.java:                otherItem = menu.addItem(0, R.drawable.ic_ab_other);
LocationActivity.java:                otherItem.addSubItem(open_in, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
LocationActivity.java:                    otherItem.addSubItem(share_live_location, R.drawable.menu_location, LocaleController.getString("SendLiveLocationMenu", R.string.SendLiveLocationMenu));
LocationActivity.java:                searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
LocationActivity.java:        shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
LocationActivity.java:                Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.places_btn).mutate();
LocationActivity.java:        mapTypeButton.addSubItem(map_list_menu_map, R.drawable.msg_map, LocaleController.getString("Map", R.string.Map));
LocationActivity.java:        mapTypeButton.addSubItem(map_list_menu_satellite, R.drawable.msg_satellite, LocaleController.getString("Satellite", R.string.Satellite));
LocationActivity.java:        mapTypeButton.addSubItem(map_list_menu_hybrid, R.drawable.msg_hybrid, LocaleController.getString("Hybrid", R.string.Hybrid));
LocationActivity.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
LocationActivity.java:        mapTypeButton.setIcon(R.drawable.location_type);
LocationActivity.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
LocationActivity.java:        locationButton.setImageResource(R.drawable.location_current);
LocationActivity.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
LocationActivity.java:                proximityButton.setImageResource(R.drawable.msg_location_alert);
LocationActivity.java:                            proximityButton.setImageResource(R.drawable.msg_location_alert2);
LocationActivity.java:            proximityButton.setImageResource(R.drawable.msg_location_alert);
LocationActivity.java:                proximityButton.setImageResource(R.drawable.msg_location_alert2);
LocationActivity.java:                proximityButton.setImageResource(R.drawable.msg_location_alert);
LocationActivity.java:        emptyImageView.setImageResource(R.drawable.location_empty);
LocationActivity.java:                frameLayout1.setBackgroundResource(R.drawable.livepin);
LocationActivity.java:                imageView.setImageResource(R.drawable.map_pin2);
LocationActivity.java:            Drawable drawable = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.map_pin_photo);
LocationActivity.java:            proximityButton.setImageResource(R.drawable.msg_location_alert2);
LocationActivity.java:            proximityButton.setImageResource(R.drawable.msg_location_alert2);
LocationActivity.java:                            liveLocation.directionMarker.setIcon(BitmapDescriptorFactory.fromResource(R.drawable.map_pin_cone2));
LocationActivity.java:                            liveLocation.directionMarker.setIcon(BitmapDescriptorFactory.fromResource(R.drawable.map_pin_circle));
LocationActivity.java:                    dirOptions.icon(BitmapDescriptorFactory.fromResource(R.drawable.map_pin_circle));
LocationActivity.java:                    googleMap.addMarker(new MarkerOptions().position(latLng).icon(BitmapDescriptorFactory.fromResource(R.drawable.map_pin2)));
LocationActivity.java:                        proximityButton.setImageResource(R.drawable.msg_location_alert);
LocationActivity.java:                                    liveLocation.directionMarker.setIcon(BitmapDescriptorFactory.fromResource(R.drawable.map_pin_cone2));
LocationActivity.java:                                    liveLocation.directionMarker.setIcon(BitmapDescriptorFactory.fromResource(R.drawable.map_pin_circle));
LoginActivity.java:        doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56));
LoginActivity.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow).mutate();
LoginActivity.java:        floatingButtonIcon.setImageResource(R.drawable.actionbtn_next);
LoginActivity.java:                actionBar.setBackButtonImage(views[a].needBackButton() || newAccount ? R.drawable.ic_ab_back : 0);
LoginActivity.java:            actionBar.setBackButtonImage(newView.needBackButton() || newAccount ? R.drawable.ic_ab_back : 0);
LoginActivity.java:            actionBar.setBackButtonImage(views[page].needBackButton() || newAccount ? R.drawable.ic_ab_back : 0);
LoginActivity.java:                imageView.setImageResource(R.drawable.phone_activate);
LoginActivity.java:                    blackImageView.setImageResource(R.drawable.sms_devices);
LoginActivity.java:                    blueImageView.setImageResource(R.drawable.sms_bubble);
LoginActivity.java:                    Drawable pressedDrawable = getResources().getDrawable(R.drawable.search_dark_activated).mutate();
LoginActivity.java:                    avatarEditor.setImageResource(R.drawable.actions_setphoto);
LogoutActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
LogoutActivity.java:                        view.setTextAndValueAndIcon(LocaleController.getString("AddAnotherAccount", R.string.AddAnotherAccount), LocaleController.getString("AddAnotherAccountInfo", R.string.AddAnotherAccountInfo), R.drawable.actions_addmember2, true);
LogoutActivity.java:                        view.setTextAndValueAndIcon(LocaleController.getString("SetPasscode", R.string.SetPasscode), LocaleController.getString("SetPasscodeInfo", R.string.SetPasscodeInfo), R.drawable.menu_passcode, true);
LogoutActivity.java:                        view.setTextAndValueAndIcon(LocaleController.getString("ClearCache", R.string.ClearCache), LocaleController.getString("ClearCacheInfo", R.string.ClearCacheInfo), R.drawable.menu_clearcache, true);
LogoutActivity.java:                        view.setTextAndValueAndIcon(LocaleController.getString("ChangePhoneNumber", R.string.ChangePhoneNumber), LocaleController.getString("ChangePhoneNumberInfo", R.string.ChangePhoneNumberInfo), R.drawable.menu_newphone, true);
LogoutActivity.java:                        view.setTextAndValueAndIcon(LocaleController.getString("ContactSupport", R.string.ContactSupport), LocaleController.getString("ContactSupportInfo", R.string.ContactSupportInfo), R.drawable.menu_support, false);
LogoutActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ManageLinksActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ManageLinksActivity.java:        linkIcon = ContextCompat.getDrawable(context, R.drawable.msg_link_1);
ManageLinksActivity.java:        linkIconRevoked = ContextCompat.getDrawable(context, R.drawable.msg_link_2);
ManageLinksActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundWhite));
ManageLinksActivity.java:                    view.setBackground(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ManageLinksActivity.java:                    cell.setBackground(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ManageLinksActivity.java:                    Drawable drawable1 = mContext.getResources().getDrawable(R.drawable.poll_add_circle);
ManageLinksActivity.java:                    Drawable drawable2 = mContext.getResources().getDrawable(R.drawable.poll_add_plus);
ManageLinksActivity.java:            optionsView.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.ic_ab_other));
ManageLinksActivity.java:                    icons.add(R.drawable.msg_delete);
ManageLinksActivity.java:                    icons.add(R.drawable.msg_copy);
ManageLinksActivity.java:                    icons.add(R.drawable.msg_share);
ManageLinksActivity.java:                        icons.add(R.drawable.msg_edit);
ManageLinksActivity.java:                        icons.add(R.drawable.msg_delete);
MediaActivity.java:        pinnedHeaderShadowDrawable = context.getResources().getDrawable(R.drawable.photos_header_shadow);
MediaActivity.java:        searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
MediaActivity.java:            actionModeViews.add(gotoItem = actionMode.addItemWithWidth(gotochat, R.drawable.msg_message, AndroidUtilities.dp(54), LocaleController.getString("AccDescrGoToMessage", R.string.AccDescrGoToMessage)));
MediaActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(forward, R.drawable.msg_forward, AndroidUtilities.dp(54), LocaleController.getString("Forward", R.string.Forward)));
MediaActivity.java:        actionModeViews.add(actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete)));
MessageStatisticActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
MessageStatisticActivity.java:            ActionBarMenuItem headerItem = menu.addItem(0, R.drawable.ic_ab_other);
MessageStatisticActivity.java:            headerItem.addSubItem(1, R.drawable.msg_stats, LocaleController.getString("ViewChannelStats", R.string.ViewChannelStats));
MessageStatisticActivity.java:                    holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
MessageStatisticActivity.java:            Drawable shadowDrawable = Theme.getThemedDrawable(ApplicationLoader.applicationContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
NewContactActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
NewContactActivity.java:        editDoneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56));
NotificationsCustomSettingsActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
NotificationsCustomSettingsActivity.java:            ActionBarMenuItem searchItem = menu.addItem(search_button, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
NotificationsCustomSettingsActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
NotificationsCustomSettingsActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
NotificationsCustomSettingsActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("NotificationsAddAnException", R.string.NotificationsAddAnException), R.drawable.actions_addmember2, exceptionsStartRow != -1);
NotificationsSettingsActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
NotificationsSettingsActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
NotificationsSettingsActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
NotificationsSettingsActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PasscodeActivity.java:            actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PasscodeActivity.java:            menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
PasscodeActivity.java:                dropDownDrawable = context.getResources().getDrawable(R.drawable.ic_arrow_drop_down).mutate();
PasscodeActivity.java:                            cell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PasscodeActivity.java:                            cell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PasscodeActivity.java:                        cell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PasscodeActivity.java:                        cell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:            checkImageView.setImageResource(R.drawable.sticker_added);
PassportActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PassportActivity.java:            doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
PassportActivity.java:        bottomCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:        noPasswordImageView.setImageResource(R.drawable.no_password);
PassportActivity.java:        passwordInfoRequestTextView.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:        actionBar.createMenu().addItem(info_item, R.drawable.profile_info);
PassportActivity.java:            bottomCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_top, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:            bottomCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:        acceptTextView.setCompoundDrawablesWithIntrinsicBounds(R.drawable.authorize, 0, 0, 0);
PassportActivity.java:        shadow.setBackgroundResource(R.drawable.header_shadow_reverse);
PassportActivity.java:        actionBar.createMenu().addItem(info_item, R.drawable.profile_info);
PassportActivity.java:        sectionCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:        addDocumentSectionCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:        emptyLayout.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:        emptyImageView.setImageResource(R.drawable.no_passport);
PassportActivity.java:            bottomCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:        bottomCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:        bottomCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:        bottomCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:        topErrorCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_top, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:            bottomCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:                bottomCellTranslation.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:            sectionCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:            sectionCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:            sectionCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:                bottomCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:        topErrorCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_top, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:            bottomCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:                bottomCellTranslation.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:            bottomCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:            nativeInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:            sectionCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:            nativeInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:                    sectionCell2.setBackgroundDrawable(Theme.getThemedDrawable(getParentActivity(), R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:                    sectionCell2.setBackgroundDrawable(Theme.getThemedDrawable(getParentActivity(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:                sectionCell2.setBackgroundDrawable(Theme.getThemedDrawable(getParentActivity(), R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PassportActivity.java:                imageView.setImageResource(R.drawable.phone_activate);
PassportActivity.java:                    blackImageView.setImageResource(R.drawable.sms_devices);
PassportActivity.java:                    blueImageView.setImageResource(R.drawable.sms_bubble);
PassportActivity.java:                    blueImageView.setImageResource(R.drawable.sms_code);
PassportActivity.java:                    Drawable pressedDrawable = getResources().getDrawable(R.drawable.search_dark_activated).mutate();
PaymentFormActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PaymentFormActivity.java:            doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
PaymentFormActivity.java:                        bottomCell[1].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:                    bottomCell[0].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:                bottomCell[0].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:                        bottomCell[0].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:            bottomCell[0].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:                    bottomCell[0].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:                    bottomCell[1].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:                shadow.setBackgroundResource(R.drawable.header_shadow_reverse);
PaymentFormActivity.java:            sectionCell[1].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:            bottomCell[2].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:                    bottomCell[0].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:                    bottomCell[1].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:        googlePayButton.setBackgroundResource(R.drawable.googlepay_button_no_shadow_background);
PaymentFormActivity.java:        imageView.setImageResource(R.drawable.buy_with_googlepay_button_content);
PaymentFormActivity.java:        imageView.setImageResource(R.drawable.googlepay_button_overlay);
PaymentFormActivity.java:            sectionCell[2].setBackgroundDrawable(Theme.getThemedDrawable(sectionCell[2].getContext(), R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PaymentFormActivity.java:            sectionCell[2].setBackgroundDrawable(Theme.getThemedDrawable(sectionCell[2].getContext(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PeopleNearbyActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PeopleNearbyActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PeopleNearbyActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PeopleNearbyActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PeopleNearbyActivity.java:                        actionCell.setText(LocaleController.getString("NearbyCreateGroup", R.string.NearbyCreateGroup), null, R.drawable.groups_create, chatsStartRow != -1);
PeopleNearbyActivity.java:                            actionCell.setText(LocaleController.getString("StopShowingMe", R.string.StopShowingMe), null, R.drawable.actions_nearby_off, usersStartRow != -1);
PeopleNearbyActivity.java:                            actionCell.setText(LocaleController.getString("MakeMyselfVisible", R.string.MakeMyselfVisible), null, R.drawable.actions_nearby_on, usersStartRow != -1);
PeopleNearbyActivity.java:                        actionCell.setText(LocaleController.formatPluralString("ShowVotes", users.size() - 5), null, R.drawable.arrow_more, false);
PhotoAlbumPickerActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PhotoAlbumPickerActivity.java:            menu.addItem(2, R.drawable.ic_ab_search).setContentDescription(LocaleController.getString("Search", R.string.Search));
PhotoAlbumPickerActivity.java:        ActionBarMenuItem menuItem = menu.addItem(0, R.drawable.ic_ab_other);
PhotoAlbumPickerActivity.java:        menuItem.addSubItem(1, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
PhotoAlbumPickerActivity.java:        shadow.setBackgroundResource(R.drawable.header_shadow_reverse);
PhotoAlbumPickerActivity.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
PhotoAlbumPickerActivity.java:        writeButton.setImageResource(R.drawable.attach_send);
PhotoAlbumPickerActivity.java:                            itemCells[a].setTextAndIcon(LocaleController.getString("SetReminder", R.string.SetReminder), R.drawable.msg_schedule);
PhotoAlbumPickerActivity.java:                            itemCells[a].setTextAndIcon(LocaleController.getString("ScheduleMessage", R.string.ScheduleMessage), R.drawable.msg_schedule);
PhotoAlbumPickerActivity.java:                        itemCells[a].setTextAndIcon(LocaleController.getString("SendWithoutSound", R.string.SendWithoutSound), R.drawable.input_notify_off);
PhotoCropActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PhotoCropActivity.java:        menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
PhotoPickerActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PhotoPickerActivity.java:            ActionBarMenuItem menuItem = menu.addItem(0, R.drawable.ic_ab_other);
PhotoPickerActivity.java:                    showAsListItem.setIcon(listSort ? R.drawable.msg_media : R.drawable.msg_list);
PhotoPickerActivity.java:            showAsListItem = menuItem.addSubItem(change_sort, R.drawable.msg_list, LocaleController.getString("ShowAsList", R.string.ShowAsList));
PhotoPickerActivity.java:            menuItem.addSubItem(open_in, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
PhotoPickerActivity.java:            searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
PhotoPickerActivity.java:            shadow.setBackgroundResource(R.drawable.header_shadow_reverse);
PhotoPickerActivity.java:                Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
PhotoPickerActivity.java:            writeButton.setImageResource(R.drawable.attach_send);
PhotoPickerActivity.java:                                itemCells[a].setTextAndIcon(LocaleController.getString("SetReminder", R.string.SetReminder), R.drawable.msg_schedule);
PhotoPickerActivity.java:                                itemCells[a].setTextAndIcon(LocaleController.getString("ScheduleMessage", R.string.ScheduleMessage), R.drawable.msg_schedule);
PhotoPickerActivity.java:                            itemCells[a].setTextAndIcon(LocaleController.getString("SendWithoutSound", R.string.SendWithoutSound), R.drawable.input_notify_off);
PhotoPickerActivity.java:                        cell.setTextAndIcon(recentSearches.get(position), R.drawable.menu_recent, false);
PhotoPickerActivity.java:                        cell.setTextAndIcon(LocaleController.getString("ClearRecentHistory", R.string.ClearRecentHistory), R.drawable.menu_clear_recent, false);
PhotoPickerSearchActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PhotoPickerSearchActivity.java:        searchItem = menu.addItem(search_button, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
PhotoViewer.java:            arrowDrawable = context.getResources().getDrawable(R.drawable.photo_tooltip2).mutate();
PhotoViewer.java:            final Drawable circleDrawable = ContextCompat.getDrawable(parentActivity, R.drawable.circle_big);
PhotoViewer.java:            final Drawable circleDrawable = ContextCompat.getDrawable(parentActivity, R.drawable.circle_big);
PhotoViewer.java:                    ContextCompat.getDrawable(parentActivity, R.drawable.cancel_big), // PROGRESS_CANCEL
PhotoViewer.java:                    ContextCompat.getDrawable(parentActivity, R.drawable.load_big), // PROGRESS_LOAD
PhotoViewer.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PhotoViewer.java:        masksItem = menu.addItem(gallery_menu_masks, R.drawable.msg_mask);
PhotoViewer.java:        pipItem = menu.addItem(gallery_menu_pip, R.drawable.ic_goinline);
PhotoViewer.java:        sendItem = menu.addItem(gallery_menu_send, R.drawable.msg_forward);
PhotoViewer.java:        shareItem = menu.addItem(gallery_menu_share2, R.drawable.share);
PhotoViewer.java:        menuItem = menu.addItem(0, R.drawable.ic_ab_other);
PhotoViewer.java:        menuItem.addSubItem(gallery_menu_openin, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp)).setColors(0xfffafafa, 0xfffafafa);
PhotoViewer.java:        allMediaItem = menuItem.addSubItem(gallery_menu_showall, R.drawable.msg_media, LocaleController.getString("ShowAllMedia", R.string.ShowAllMedia));
PhotoViewer.java:        menuItem.addSubItem(gallery_menu_savegif, R.drawable.msg_gif, LocaleController.getString("SaveToGIFs", R.string.SaveToGIFs)).setColors(0xfffafafa, 0xfffafafa);
PhotoViewer.java:        menuItem.addSubItem(gallery_menu_showinchat, R.drawable.msg_message, LocaleController.getString("ShowInChat", R.string.ShowInChat)).setColors(0xfffafafa, 0xfffafafa);
PhotoViewer.java:        menuItem.addSubItem(gallery_menu_masks2, R.drawable.msg_sticker, LocaleController.getString("ShowStickers", R.string.ShowStickers)).setColors(0xfffafafa, 0xfffafafa);
PhotoViewer.java:        menuItem.addSubItem(gallery_menu_share, R.drawable.msg_shareout, LocaleController.getString("ShareFile", R.string.ShareFile)).setColors(0xfffafafa, 0xfffafafa);
PhotoViewer.java:        menuItem.addSubItem(gallery_menu_save, R.drawable.msg_gallery, LocaleController.getString("SaveToGallery", R.string.SaveToGallery)).setColors(0xfffafafa, 0xfffafafa);
PhotoViewer.java:        //menuItem.addSubItem(gallery_menu_edit_avatar, R.drawable.photo_paint, LocaleController.getString("EditPhoto", R.string.EditPhoto)).setColors(0xfffafafa, 0xfffafafa);
PhotoViewer.java:        menuItem.addSubItem(gallery_menu_set_as_main, R.drawable.menu_private, LocaleController.getString("SetAsMain", R.string.SetAsMain)).setColors(0xfffafafa, 0xfffafafa);
PhotoViewer.java:        menuItem.addSubItem(gallery_menu_delete, R.drawable.msg_delete, LocaleController.getString("Delete", R.string.Delete)).setColors(0xfffafafa, 0xfffafafa);
PhotoViewer.java:        menuItem.addSubItem(gallery_menu_cancel_loading, R.drawable.msg_cancel, LocaleController.getString("StopDownload", R.string.StopDownload)).setColors(0xfffafafa, 0xfffafafa);
PhotoViewer.java:            fullscreenButton[a].setImageResource(R.drawable.msg_maxvideo);
PhotoViewer.java:        miniProgressView.setBackgroundResource(R.drawable.circle_big);
PhotoViewer.java:        paintButton.setImageResource(R.drawable.photo_paint);
PhotoViewer.java:        shareButton.setImageResource(R.drawable.share);
PhotoViewer.java:        progressView.setBackgroundResource(R.drawable.circle_big);
PhotoViewer.java:        pickerViewSendButton.setImageResource(R.drawable.attach_send);
PhotoViewer.java:                        cell.setTextAndIcon(LocaleController.getString("SetReminder", R.string.SetReminder), R.drawable.msg_schedule);
PhotoViewer.java:                        cell.setTextAndIcon(LocaleController.getString("ScheduleMessage", R.string.ScheduleMessage), R.drawable.msg_schedule);
PhotoViewer.java:                    cell.setTextAndIcon(LocaleController.getString("SendWithoutSound", R.string.SendWithoutSound), R.drawable.input_notify_off);
PhotoViewer.java:                    cell.setTextAndIcon(LocaleController.getString("ReplacePhoto", R.string.ReplacePhoto), R.drawable.msg_replace);
PhotoViewer.java:                    cell.setTextAndIcon(LocaleController.getString("SendAsNewPhoto", R.string.SendAsNewPhoto), R.drawable.msg_sendphoto);
PhotoViewer.java:        cropItem.setImageResource(R.drawable.photo_crop);
PhotoViewer.java:        rotateItem.setImageResource(R.drawable.tool_rotate);
PhotoViewer.java:        mirrorItem.setImageResource(R.drawable.photo_flip);
PhotoViewer.java:        paintItem.setImageResource(R.drawable.photo_paint);
PhotoViewer.java:        cameraItem.setImageResource(R.drawable.photo_add);
PhotoViewer.java:        tuneItem.setImageResource(R.drawable.photo_tools);
PhotoViewer.java:            compressItem.setImageResource(R.drawable.video_quality1);
PhotoViewer.java:            compressItem.setImageResource(R.drawable.video_quality2);
PhotoViewer.java:            compressItem.setImageResource(R.drawable.video_quality3);
PhotoViewer.java:        timeItem.setImageResource(R.drawable.photo_timer);
PhotoViewer.java:        checkImageView = new CheckBox(containerView.getContext(), R.drawable.selectphoto_large) {
PhotoViewer.java:        exitFullscreenButton.setImageResource(R.drawable.msg_minvideo);
PhotoViewer.java:        muteItem.setImageResource(R.drawable.video_send_unmute);
PhotoViewer.java:                        imageReceiver.setImage(ImageLocation.getForWebFile(webDocument), filter, placeHolder != null ? new BitmapDrawable(placeHolder.bitmap) : (isVideo && parentActivity != null ? parentActivity.getResources().getDrawable(R.drawable.nophotos) : null), null, object, cacheType);
PhotoViewer.java:                    imageReceiver.setImage(path, filter, placeHolder != null ? new BitmapDrawable(placeHolder.bitmap) : (isVideo && parentActivity != null ? parentActivity.getResources().getDrawable(R.drawable.nophotos) : null), null, imageSize);
PhotoViewer.java:                        imageReceiver.setImageBitmap(parentActivity.getResources().getDrawable(R.drawable.photoview_placeholder));
PhotoViewer.java:                    imageReceiver.setImageBitmap(parentActivity.getResources().getDrawable(R.drawable.photoview_placeholder));
PhotoViewer.java:                    imageReceiver.setImageBitmap(parentActivity.getResources().getDrawable(R.drawable.photoview_placeholder));
PhotoViewer.java:                        imageReceiver.setImageBitmap(parentActivity.getResources().getDrawable(R.drawable.photoview_placeholder));
PhotoViewer.java:                    imageReceiver.setImageBitmap(parentActivity.getResources().getDrawable(R.drawable.photoview_placeholder));
PhotoViewer.java:                pickerViewSendButton.setImageResource(R.drawable.attach_send);
PhotoViewer.java:                pickerViewSendButton.setImageResource(R.drawable.floating_check);
PhotoViewer.java:                pickerViewSendButton.setImageResource(R.drawable.attach_send);
PhotoViewer.java:                muteItem.setImageResource(R.drawable.video_send_mute);
PhotoViewer.java:                muteItem.setImageResource(R.drawable.video_send_unmute);
PhotoViewer.java:            compressItem.setImageResource(R.drawable.video_quality1);
PhotoViewer.java:            compressItem.setImageResource(R.drawable.video_quality2);
PhotoViewer.java:            compressItem.setImageResource(R.drawable.video_quality3);
PhotoViewer.java:                    imageView.setImage(photoEntry.thumbPath, null, mContext.getResources().getDrawable(R.drawable.nophotos));
PhotoViewer.java:                        imageView.setImage("vthumb://" + photoEntry.imageId + ":" + photoEntry.path, null, mContext.getResources().getDrawable(R.drawable.nophotos));
PhotoViewer.java:                        imageView.setImage("thumb://" + photoEntry.imageId + ":" + photoEntry.path, null, mContext.getResources().getDrawable(R.drawable.nophotos));
PhotoViewer.java:                    imageView.setImageResource(R.drawable.nophotos);
PollCreateActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PollCreateActivity.java:                    cell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PollCreateActivity.java:                    Drawable drawable1 = mContext.getResources().getDrawable(R.drawable.poll_add_circle);
PollCreateActivity.java:                    Drawable drawable2 = mContext.getResources().getDrawable(R.drawable.poll_add_plus);
PopupNotificationActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_close_white);
PopupNotificationActivity.java:                nameTextView.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_lock_white, 0, 0, 0);
PrivacyControlActivity.java:            shadowDrawable = Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow);
PrivacyControlActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PrivacyControlActivity.java:        doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
PrivacyControlActivity.java:                    Drawable drawable = Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
PrivacyControlActivity.java:                        backgroundResId = R.drawable.greydivider;
PrivacyControlActivity.java:                            backgroundResId = R.drawable.greydivider;
PrivacyControlActivity.java:                            backgroundResId = R.drawable.greydivider_bottom;
PrivacyControlActivity.java:                        backgroundResId = R.drawable.greydivider_bottom;
PrivacySettingsActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PrivacySettingsActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PrivacySettingsActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PrivacySettingsActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PrivacySettingsActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PrivacySettingsActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PrivacySettingsActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PrivacySettingsActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PrivacyUsersActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
PrivacyUsersActivity.java:                            privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PrivacyUsersActivity.java:                            privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
PrivacyUsersActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
PrivacyUsersActivity.java:                        actionCell.setText(LocaleController.getString("BlockUser", R.string.BlockUser), null, R.drawable.actions_addmember2, false);
PrivacyUsersActivity.java:                        actionCell.setText(LocaleController.getString("PrivacyAddAnException", R.string.PrivacyAddAnException), null, R.drawable.actions_addmember2, false);
ProfileActivity.java:            searchItem = menu.addItem(search_button, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
ProfileActivity.java:        videoCallItem = menu.addItem(video_call_item, R.drawable.profile_video);
ProfileActivity.java:            callItem = menu.addItem(call_item, R.drawable.msg_voicechat2);
ProfileActivity.java:            callItem = menu.addItem(call_item, R.drawable.ic_call);
ProfileActivity.java:        editItem = menu.addItem(edit_channel, R.drawable.group_edit_profile);
ProfileActivity.java:        otherItem = menu.addItem(10, R.drawable.ic_ab_other);
ProfileActivity.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
ProfileActivity.java:                writeButton.setImageResource(R.drawable.profile_newmsg);
ProfileActivity.java:            writeButton.setImageResource(R.drawable.profile_discuss);
ProfileActivity.java:                icons.add(R.drawable.actions_addadmin);
ProfileActivity.java:                icons.add(R.drawable.actions_permissions);
ProfileActivity.java:                icons.add(R.drawable.actions_remove_user);
ProfileActivity.java:                    animatingItem = menu.addItem(10, R.drawable.ic_ab_other);
ProfileActivity.java:            verifiedCrossfadeDrawable = new CrossfadeDrawable(new CombinedDrawable(verifiedDrawable, verifiedCheckDrawable), ContextCompat.getDrawable(getParentActivity(), R.drawable.verified_profile));
ProfileActivity.java:                otherItem.addSubItem(edit_name, R.drawable.msg_edit, LocaleController.getString("EditName", R.string.EditName));
ProfileActivity.java:                            otherItem.addSubItem(block_contact, R.drawable.msg_block, LocaleController.getString("Unblock", R.string.Unblock));
ProfileActivity.java:                                otherItem.addSubItem(invite_to_group, R.drawable.msg_addbot, LocaleController.getString("BotInvite", R.string.BotInvite));
ProfileActivity.java:                            otherItem.addSubItem(share, R.drawable.msg_share, LocaleController.getString("BotShare", R.string.BotShare));
ProfileActivity.java:                            otherItem.addSubItem(add_contact, R.drawable.msg_addcontact, LocaleController.getString("AddContact", R.string.AddContact));
ProfileActivity.java:                            otherItem.addSubItem(share_contact, R.drawable.msg_share, LocaleController.getString("ShareContact", R.string.ShareContact));
ProfileActivity.java:                            otherItem.addSubItem(block_contact, !userBlocked ? R.drawable.msg_block : R.drawable.msg_retry, !userBlocked ? LocaleController.getString("BotStop", R.string.BotStop) : LocaleController.getString("BotRestart", R.string.BotRestart));
ProfileActivity.java:                            otherItem.addSubItem(block_contact, !userBlocked ? R.drawable.msg_block : R.drawable.msg_block, !userBlocked ? LocaleController.getString("BlockContact", R.string.BlockContact) : LocaleController.getString("Unblock", R.string.Unblock));
ProfileActivity.java:                        otherItem.addSubItem(share_contact, R.drawable.msg_share, LocaleController.getString("ShareContact", R.string.ShareContact));
ProfileActivity.java:                    otherItem.addSubItem(block_contact, !userBlocked ? R.drawable.msg_block : R.drawable.msg_block, !userBlocked ? LocaleController.getString("BlockContact", R.string.BlockContact) : LocaleController.getString("Unblock", R.string.Unblock));
ProfileActivity.java:                    otherItem.addSubItem(edit_contact, R.drawable.msg_edit, LocaleController.getString("EditContact", R.string.EditContact));
ProfileActivity.java:                    otherItem.addSubItem(delete_contact, R.drawable.msg_delete, LocaleController.getString("DeleteContact", R.string.DeleteContact));
ProfileActivity.java:                    otherItem.addSubItem(start_secret_chat, R.drawable.msg_start_secret, LocaleController.getString("StartEncryptedChat", R.string.StartEncryptedChat));
ProfileActivity.java:                otherItem.addSubItem(add_shortcut, R.drawable.msg_home, LocaleController.getString("AddShortcut", R.string.AddShortcut));
ProfileActivity.java:                        otherItem.addSubItem(call_item, R.drawable.msg_voicechat, LocaleController.getString("StartVoipChat", R.string.StartVoipChat));
ProfileActivity.java:                        otherItem.addSubItem(statistics, R.drawable.msg_stats, LocaleController.getString("Statistics", R.string.Statistics));
ProfileActivity.java:                    otherItem.addSubItem(search_members, R.drawable.msg_search, LocaleController.getString("SearchMembers", R.string.SearchMembers));
ProfileActivity.java:                        otherItem.addSubItem(leave_group, R.drawable.msg_leave, LocaleController.getString("LeaveMegaMenu", R.string.LeaveMegaMenu));
ProfileActivity.java:                        otherItem.addSubItem(share, R.drawable.msg_share, LocaleController.getString("BotShare", R.string.BotShare));
ProfileActivity.java:                        otherItem.addSubItem(view_discussion, R.drawable.msg_discussion, LocaleController.getString("ViewDiscussion", R.string.ViewDiscussion));
ProfileActivity.java:                        otherItem.addSubItem(leave_group, R.drawable.msg_leave, LocaleController.getString("LeaveChannelMenu", R.string.LeaveChannelMenu));
ProfileActivity.java:                        otherItem.addSubItem(call_item, R.drawable.msg_voicechat, LocaleController.getString("StartVoipChat", R.string.StartVoipChat));
ProfileActivity.java:                    otherItem.addSubItem(search_members, R.drawable.msg_search, LocaleController.getString("SearchMembers", R.string.SearchMembers));
ProfileActivity.java:                otherItem.addSubItem(leave_group, R.drawable.msg_leave, LocaleController.getString("DeleteAndExit", R.string.DeleteAndExit));
ProfileActivity.java:            otherItem.addSubItem(add_shortcut, R.drawable.msg_home, LocaleController.getString("AddShortcut", R.string.AddShortcut));
ProfileActivity.java:            otherItem.addSubItem(add_photo, R.drawable.msg_addphoto, LocaleController.getString("AddPhoto", R.string.AddPhoto));
ProfileActivity.java:            otherItem.addSubItem(set_as_main, R.drawable.menu_private, LocaleController.getString("SetAsMain", R.string.SetAsMain));
ProfileActivity.java:            otherItem.addSubItem(gallery_menu_save, R.drawable.msg_gallery, LocaleController.getString("SaveToGallery", R.string.SaveToGallery));
ProfileActivity.java:            //otherItem.addSubItem(edit_avatar, R.drawable.photo_paint, LocaleController.getString("EditPhoto", R.string.EditPhoto));
ProfileActivity.java:            otherItem.addSubItem(delete_avatar, R.drawable.msg_delete, LocaleController.getString("Delete", R.string.Delete));
ProfileActivity.java:            otherItem.addSubItem(gallery_menu_save, R.drawable.msg_gallery, LocaleController.getString("SaveToGallery", R.string.SaveToGallery));
ProfileActivity.java:            otherItem.addSubItem(logout, R.drawable.msg_leave, LocaleController.getString("LogOut", R.string.LogOut));
ProfileActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ProfileActivity.java:                                textCell.setTextAndValueAndIcon(LocaleController.getString("ChannelSubscribers", R.string.ChannelSubscribers), String.format("%d", chatInfo.participants_count), R.drawable.actions_viewmembers, position != membersSectionRow - 1);
ProfileActivity.java:                                textCell.setTextAndValueAndIcon(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), String.format("%d", chatInfo.participants_count), R.drawable.actions_viewmembers, position != membersSectionRow - 1);
ProfileActivity.java:                                textCell.setTextAndIcon(LocaleController.getString("ChannelSubscribers", R.string.ChannelSubscribers), R.drawable.actions_viewmembers, position != membersSectionRow - 1);
ProfileActivity.java:                                textCell.setTextAndIcon(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), R.drawable.actions_viewmembers, position != membersSectionRow - 1);
ProfileActivity.java:                            textCell.setTextAndValueAndIcon(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators), String.format("%d", chatInfo.admins_count), R.drawable.actions_addadmin, position != membersSectionRow - 1);
ProfileActivity.java:                            textCell.setTextAndIcon(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators), R.drawable.actions_addadmin, position != membersSectionRow - 1);
ProfileActivity.java:                            textCell.setTextAndValueAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), String.format("%d", Math.max(chatInfo.banned_count, chatInfo.kicked_count)), R.drawable.actions_removed, position != membersSectionRow - 1);
ProfileActivity.java:                            textCell.setTextAndIcon(LocaleController.getString("ChannelBlacklist", R.string.ChannelBlacklist), R.drawable.actions_removed, position != membersSectionRow - 1);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("AddMember", R.string.AddMember), R.drawable.actions_addmember2, membersSectionRow == -1);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("Language", R.string.Language), R.drawable.menu_language, false);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, true);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, true);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, true);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, true);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("Filters", R.string.Filters), R.drawable.menu_folders, true);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("AskAQuestion", R.string.AskAQuestion), R.drawable.menu_support2, true);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("TelegramFAQ", R.string.TelegramFAQ), R.drawable.menu_help, true);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("PrivacyPolicy", R.string.PrivacyPolicy), R.drawable.menu_policy, false);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("Devices", R.string.Devices), R.drawable.menu_devices, true);
ProfileActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("SetProfilePhoto", R.string.SetProfilePhoto), R.drawable.msg_addphoto, false);
ProfileActivity.java:                        sectionCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ProfileActivity.java:                        sectionCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ProfileActivity.java:                new SearchResult(1, LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
ProfileActivity.java:                new SearchResult(2, LocaleController.getString("NotificationsPrivateChats", R.string.NotificationsPrivateChats), LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsCustomSettingsActivity(NotificationsController.TYPE_PRIVATE, new ArrayList<>(), true))),
ProfileActivity.java:                new SearchResult(3, LocaleController.getString("NotificationsGroups", R.string.NotificationsGroups), LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsCustomSettingsActivity(NotificationsController.TYPE_GROUP, new ArrayList<>(), true))),
ProfileActivity.java:                new SearchResult(4, LocaleController.getString("NotificationsChannels", R.string.NotificationsChannels), LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsCustomSettingsActivity(NotificationsController.TYPE_CHANNEL, new ArrayList<>(), true))),
ProfileActivity.java:                new SearchResult(5, LocaleController.getString("VoipNotificationSettings", R.string.VoipNotificationSettings), "callsSectionRow", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
ProfileActivity.java:                new SearchResult(6, LocaleController.getString("BadgeNumber", R.string.BadgeNumber), "badgeNumberSection", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
ProfileActivity.java:                new SearchResult(7, LocaleController.getString("InAppNotifications", R.string.InAppNotifications), "inappSectionRow", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
ProfileActivity.java:                new SearchResult(8, LocaleController.getString("ContactJoined", R.string.ContactJoined), "contactJoinedRow", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
ProfileActivity.java:                new SearchResult(9, LocaleController.getString("PinnedMessages", R.string.PinnedMessages), "pinnedMessageRow", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
ProfileActivity.java:                new SearchResult(10, LocaleController.getString("ResetAllNotifications", R.string.ResetAllNotifications), "resetNotificationsRow", LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.menu_notifications, () -> presentFragment(new NotificationsSettingsActivity())),
ProfileActivity.java:                new SearchResult(100, LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
ProfileActivity.java:                new SearchResult(101, LocaleController.getString("BlockedUsers", R.string.BlockedUsers), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyUsersActivity())),
ProfileActivity.java:                new SearchResult(105, LocaleController.getString("PrivacyPhone", R.string.PrivacyPhone), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_PHONE, true))),
ProfileActivity.java:                new SearchResult(102, LocaleController.getString("PrivacyLastSeen", R.string.PrivacyLastSeen), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_LASTSEEN, true))),
ProfileActivity.java:                new SearchResult(103, LocaleController.getString("PrivacyProfilePhoto", R.string.PrivacyProfilePhoto), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_PHOTO, true))),
ProfileActivity.java:                new SearchResult(104, LocaleController.getString("PrivacyForwards", R.string.PrivacyForwards), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_FORWARDS, true))),
ProfileActivity.java:                new SearchResult(105, LocaleController.getString("PrivacyP2P", R.string.PrivacyP2P), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_P2P, true))),
ProfileActivity.java:                new SearchResult(106, LocaleController.getString("Calls", R.string.Calls), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_CALLS, true))),
ProfileActivity.java:                new SearchResult(107, LocaleController.getString("GroupsAndChannels", R.string.GroupsAndChannels), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacyControlActivity(ContactsController.PRIVACY_RULES_TYPE_INVITE, true))),
ProfileActivity.java:                new SearchResult(108, LocaleController.getString("Passcode", R.string.Passcode), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PasscodeActivity(SharedConfig.passcodeHash.length() > 0 ? 2 : 0))),
ProfileActivity.java:                new SearchResult(109, LocaleController.getString("TwoStepVerification", R.string.TwoStepVerification), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new TwoStepVerificationActivity())),
ProfileActivity.java:                new SearchResult(110, LocaleController.getString("SessionsTitle", R.string.SessionsTitle), R.drawable.menu_secret, () -> presentFragment(new SessionsActivity(0))),
ProfileActivity.java:                getMessagesController().autoarchiveAvailable ? new SearchResult(121, LocaleController.getString("ArchiveAndMute", R.string.ArchiveAndMute), "newChatsRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())) : null,
ProfileActivity.java:                new SearchResult(112, LocaleController.getString("DeleteAccountIfAwayFor2", R.string.DeleteAccountIfAwayFor2), "deleteAccountRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
ProfileActivity.java:                new SearchResult(113, LocaleController.getString("PrivacyPaymentsClear", R.string.PrivacyPaymentsClear), "paymentsClearRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
ProfileActivity.java:                new SearchResult(114, LocaleController.getString("WebSessionsTitle", R.string.WebSessionsTitle), LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new SessionsActivity(1))),
ProfileActivity.java:                new SearchResult(115, LocaleController.getString("SyncContactsDelete", R.string.SyncContactsDelete), "contactsDeleteRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
ProfileActivity.java:                new SearchResult(116, LocaleController.getString("SyncContacts", R.string.SyncContacts), "contactsSyncRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
ProfileActivity.java:                new SearchResult(117, LocaleController.getString("SuggestContacts", R.string.SuggestContacts), "contactsSuggestRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
ProfileActivity.java:                new SearchResult(118, LocaleController.getString("MapPreviewProvider", R.string.MapPreviewProvider), "secretMapRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
ProfileActivity.java:                new SearchResult(119, LocaleController.getString("SecretWebPage", R.string.SecretWebPage), "secretWebpageRow", LocaleController.getString("PrivacySettings", R.string.PrivacySettings), R.drawable.menu_secret, () -> presentFragment(new PrivacySettingsActivity())),
ProfileActivity.java:                new SearchResult(120, LocaleController.getString("Devices", R.string.Devices), R.drawable.menu_secret, () -> presentFragment(new SessionsActivity(0))),
ProfileActivity.java:                new SearchResult(200, LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(201, LocaleController.getString("DataUsage", R.string.DataUsage), "usageSectionRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(202, LocaleController.getString("StorageUsage", R.string.StorageUsage), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new CacheControlActivity())),
ProfileActivity.java:                new SearchResult(203, LocaleController.getString("KeepMedia", R.string.KeepMedia), "keepMediaRow", LocaleController.getString("DataSettings", R.string.DataSettings), LocaleController.getString("StorageUsage", R.string.StorageUsage), R.drawable.menu_data, () -> presentFragment(new CacheControlActivity())),
ProfileActivity.java:                new SearchResult(204, LocaleController.getString("ClearMediaCache", R.string.ClearMediaCache), "cacheRow", LocaleController.getString("DataSettings", R.string.DataSettings), LocaleController.getString("StorageUsage", R.string.StorageUsage), R.drawable.menu_data, () -> presentFragment(new CacheControlActivity())),
ProfileActivity.java:                new SearchResult(205, LocaleController.getString("LocalDatabase", R.string.LocalDatabase), "databaseRow", LocaleController.getString("DataSettings", R.string.DataSettings), LocaleController.getString("StorageUsage", R.string.StorageUsage), R.drawable.menu_data, () -> presentFragment(new CacheControlActivity())),
ProfileActivity.java:                new SearchResult(206, LocaleController.getString("NetworkUsage", R.string.NetworkUsage), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataUsageActivity())),
ProfileActivity.java:                new SearchResult(207, LocaleController.getString("AutomaticMediaDownload", R.string.AutomaticMediaDownload), "mediaDownloadSectionRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(208, LocaleController.getString("WhenUsingMobileData", R.string.WhenUsingMobileData), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataAutoDownloadActivity(0))),
ProfileActivity.java:                new SearchResult(209, LocaleController.getString("WhenConnectedOnWiFi", R.string.WhenConnectedOnWiFi), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataAutoDownloadActivity(1))),
ProfileActivity.java:                new SearchResult(210, LocaleController.getString("WhenRoaming", R.string.WhenRoaming), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataAutoDownloadActivity(2))),
ProfileActivity.java:                new SearchResult(211, LocaleController.getString("ResetAutomaticMediaDownload", R.string.ResetAutomaticMediaDownload), "resetDownloadRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(212, LocaleController.getString("AutoplayMedia", R.string.AutoplayMedia), "autoplayHeaderRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(213, LocaleController.getString("AutoplayGIF", R.string.AutoplayGIF), "autoplayGifsRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(214, LocaleController.getString("AutoplayVideo", R.string.AutoplayVideo), "autoplayVideoRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(215, LocaleController.getString("Streaming", R.string.Streaming), "streamSectionRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(216, LocaleController.getString("EnableStreaming", R.string.EnableStreaming), "enableStreamRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(217, LocaleController.getString("Calls", R.string.Calls), "callsSectionRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(218, LocaleController.getString("VoipUseLessData", R.string.VoipUseLessData), "useLessDataForCallsRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(219, LocaleController.getString("VoipQuickReplies", R.string.VoipQuickReplies), "quickRepliesRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(220, LocaleController.getString("ProxySettings", R.string.ProxySettings), LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new ProxyListActivity())),
ProfileActivity.java:                new SearchResult(221, LocaleController.getString("UseProxyForCalls", R.string.UseProxyForCalls), "callsRow", LocaleController.getString("DataSettings", R.string.DataSettings), LocaleController.getString("ProxySettings", R.string.ProxySettings), R.drawable.menu_data, () -> presentFragment(new ProxyListActivity())),
ProfileActivity.java:                new SearchResult(111, LocaleController.getString("PrivacyDeleteCloudDrafts", R.string.PrivacyDeleteCloudDrafts), "clearDraftsRow", LocaleController.getString("DataSettings", R.string.DataSettings), R.drawable.menu_data, () -> presentFragment(new DataSettingsActivity())),
ProfileActivity.java:                new SearchResult(300, LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
ProfileActivity.java:                new SearchResult(301, LocaleController.getString("TextSizeHeader", R.string.TextSizeHeader), "textSizeHeaderRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
ProfileActivity.java:                new SearchResult(302, LocaleController.getString("ChatBackground", R.string.ChatBackground), LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new WallpapersListActivity(WallpapersListActivity.TYPE_ALL))),
ProfileActivity.java:                new SearchResult(303, LocaleController.getString("SetColor", R.string.SetColor), null, LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("ChatBackground", R.string.ChatBackground), R.drawable.menu_chats, () -> presentFragment(new WallpapersListActivity(WallpapersListActivity.TYPE_COLOR))),
ProfileActivity.java:                new SearchResult(304, LocaleController.getString("ResetChatBackgrounds", R.string.ResetChatBackgrounds), "resetRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("ChatBackground", R.string.ChatBackground), R.drawable.menu_chats, () -> presentFragment(new WallpapersListActivity(WallpapersListActivity.TYPE_ALL))),
ProfileActivity.java:                new SearchResult(305, LocaleController.getString("AutoNightTheme", R.string.AutoNightTheme), LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_NIGHT))),
ProfileActivity.java:                new SearchResult(306, LocaleController.getString("ColorTheme", R.string.ColorTheme), "themeHeaderRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
ProfileActivity.java:                new SearchResult(307, LocaleController.getString("ChromeCustomTabs", R.string.ChromeCustomTabs), "customTabsRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
ProfileActivity.java:                new SearchResult(308, LocaleController.getString("DirectShare", R.string.DirectShare), "directShareRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
ProfileActivity.java:                new SearchResult(309, LocaleController.getString("EnableAnimations", R.string.EnableAnimations), "enableAnimationsRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
ProfileActivity.java:                new SearchResult(310, LocaleController.getString("RaiseToSpeak", R.string.RaiseToSpeak), "raiseToSpeakRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
ProfileActivity.java:                new SearchResult(311, LocaleController.getString("SendByEnter", R.string.SendByEnter), "sendByEnterRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
ProfileActivity.java:                new SearchResult(312, LocaleController.getString("SaveToGallerySettings", R.string.SaveToGallerySettings), "saveToGalleryRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
ProfileActivity.java:                new SearchResult(312, LocaleController.getString("DistanceUnits", R.string.DistanceUnits), "distanceRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new ThemeActivity(ThemeActivity.THEME_TYPE_BASIC))),
ProfileActivity.java:                new SearchResult(313, LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), LocaleController.getString("ChatSettings", R.string.ChatSettings), R.drawable.menu_chats, () -> presentFragment(new StickersActivity(MediaDataController.TYPE_IMAGE))),
ProfileActivity.java:                new SearchResult(314, LocaleController.getString("SuggestStickers", R.string.SuggestStickers), "suggestRow", LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), R.drawable.menu_chats, () -> presentFragment(new StickersActivity(MediaDataController.TYPE_IMAGE))),
ProfileActivity.java:                new SearchResult(315, LocaleController.getString("FeaturedStickers", R.string.FeaturedStickers), null, LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), R.drawable.menu_chats, () -> presentFragment(new FeaturedStickersActivity())),
ProfileActivity.java:                new SearchResult(316, LocaleController.getString("Masks", R.string.Masks), null, LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), R.drawable.menu_chats, () -> presentFragment(new StickersActivity(MediaDataController.TYPE_MASK))),
ProfileActivity.java:                new SearchResult(317, LocaleController.getString("ArchivedStickers", R.string.ArchivedStickers), null, LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), R.drawable.menu_chats, () -> presentFragment(new ArchivedStickersActivity(MediaDataController.TYPE_IMAGE))),
ProfileActivity.java:                new SearchResult(317, LocaleController.getString("ArchivedMasks", R.string.ArchivedMasks), null, LocaleController.getString("ChatSettings", R.string.ChatSettings), LocaleController.getString("StickersAndMasks", R.string.StickersAndMasks), R.drawable.menu_chats, () -> presentFragment(new ArchivedStickersActivity(MediaDataController.TYPE_MASK))),
ProfileActivity.java:                new SearchResult(400, LocaleController.getString("Language", R.string.Language), R.drawable.menu_language, () -> presentFragment(new LanguageSelectActivity())),
ProfileActivity.java:                new SearchResult(402, LocaleController.getString("AskAQuestion", R.string.AskAQuestion), LocaleController.getString("SettingsHelp", R.string.SettingsHelp), R.drawable.menu_help, () -> showDialog(AlertsCreator.createSupportAlert(ProfileActivity.this))),
ProfileActivity.java:                new SearchResult(403, LocaleController.getString("TelegramFAQ", R.string.TelegramFAQ), LocaleController.getString("SettingsHelp", R.string.SettingsHelp), R.drawable.menu_help, () -> Browser.openUrl(getParentActivity(), LocaleController.getString("TelegramFaqUrl", R.string.TelegramFaqUrl))),
ProfileActivity.java:                new SearchResult(404, LocaleController.getString("PrivacyPolicy", R.string.PrivacyPolicy), LocaleController.getString("SettingsHelp", R.string.SettingsHelp), R.drawable.menu_help, () -> Browser.openUrl(getParentActivity(), LocaleController.getString("PrivacyPolicyUrl", R.string.PrivacyPolicyUrl))),
ProfileNotificationsActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ProfileNotificationsActivity.java:                        textCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ProfileNotificationsActivity.java:                        textCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ProfileNotificationsActivity.java:                        textCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ProfileNotificationsActivity.java:                        textCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ProfileNotificationsActivity.java:                        textCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ProxyListActivity.java:            checkImageView.setImageResource(R.drawable.profile_info);
ProxyListActivity.java:                    checkDrawable = getResources().getDrawable(R.drawable.proxy_check).mutate();
ProxyListActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ProxyListActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ProxyListActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ProxyListActivity.java:                        cell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ProxyListActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ProxySettingsActivity.java:            checkImage.setImageResource(R.drawable.sticker_added);
ProxySettingsActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ProxySettingsActivity.java:        doneItem = actionBar.createMenu().addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56));
ProxySettingsActivity.java:            bottomCells[i].setBackground(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ProxySettingsActivity.java:        sectionCell[2].setBackground(Theme.getThemedDrawable(fragmentView.getContext(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ProxySettingsActivity.java:        sectionCell[1].setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
QuickRepliesSettingsActivity.java:		actionBar.setBackButtonImage(R.drawable.ic_ab_back);
QuickRepliesSettingsActivity.java:					cell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
SecretMediaViewer.java:            drawable = context.getResources().getDrawable(R.drawable.flame_small);
SecretMediaViewer.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
SessionsActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
SessionsActivity.java:        emptyLayout.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
SessionsActivity.java:            imageView.setImageResource(R.drawable.devices);
SessionsActivity.java:            imageView.setImageResource(R.drawable.no_apps);
SessionsActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
SessionsActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
SessionsActivity.java:                            privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
SessionsActivity.java:                            privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
StatisticActivity.java:                icons.add(R.drawable.msg_stats);
StatisticActivity.java:                icons.add(R.drawable.menu_chats);
StatisticActivity.java:                manageChatTextCell.setText(LocaleController.formatPluralString("ShowVotes", topMembersAll.size() - topMembersVisible.size()), null, R.drawable.arrow_more, false);
StatisticActivity.java:            Drawable shadowDrawable = Theme.getThemedDrawable(ApplicationLoader.applicationContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
StatisticActivity.java:            icons.add(R.drawable.menu_private);
StatisticActivity.java:            icons.add(R.drawable.menu_chats);
StatisticActivity.java:                    icons.add(isAdmin ? R.drawable.actions_addadmin : R.drawable.actions_permissions);
StickersActivity.java:        archiveMenuItem = actionMode.addItemWithWidth(MENU_ARCHIVE, R.drawable.msg_archive, AndroidUtilities.dp(54));
StickersActivity.java:        deleteMenuItem = actionMode.addItemWithWidth(MENU_DELETE, R.drawable.msg_delete, AndroidUtilities.dp(54));
StickersActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
StickersActivity.java:                            icons = new int[]{R.drawable.msg_archive, R.drawable.msg_reorder};
StickersActivity.java:                                    R.drawable.msg_archive,
StickersActivity.java:                                    R.drawable.msg_link,
StickersActivity.java:                                    R.drawable.msg_reorder,
StickersActivity.java:                                    R.drawable.msg_share,
StickersActivity.java:                                    R.drawable.msg_delete
StickersActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
TestActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ThemeActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ThemeActivity.java:            menuItem = menu.addItem(0, R.drawable.ic_ab_other);
ThemeActivity.java:            menuItem.addSubItem(share_theme, R.drawable.msg_share, LocaleController.getString("ShareTheme", R.string.ShareTheme));
ThemeActivity.java:            menuItem.addSubItem(edit_theme, R.drawable.msg_edit, LocaleController.getString("EditThemeColors", R.string.EditThemeColors));
ThemeActivity.java:            menuItem.addSubItem(create_theme, R.drawable.menu_palette, LocaleController.getString("CreateNewThemeMenu", R.string.CreateNewThemeMenu));
ThemeActivity.java:            menuItem.addSubItem(reset_settings, R.drawable.msg_reset, LocaleController.getString("ThemeResetToDefaults", R.string.ThemeResetToDefaults));
ThemeActivity.java:                        R.drawable.msg_shareout
ThemeActivity.java:                        R.drawable.msg_share,
ThemeActivity.java:                        R.drawable.msg_shareout,
ThemeActivity.java:                        R.drawable.msg_edit,
ThemeActivity.java:                        R.drawable.msg_link,
ThemeActivity.java:                        R.drawable.msg_delete
ThemeActivity.java:                    view.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ThemeActivity.java:                                    R.drawable.msg_edit,
ThemeActivity.java:                                    R.drawable.msg_share,
ThemeActivity.java:                                    R.drawable.msg_link,
ThemeActivity.java:                                    R.drawable.msg_delete
ThemeActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ThemeActivity.java:                        holder.itemView.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ThemeActivity.java:                        cell.setTextAndIcon(LocaleController.getString("ChangeChatBackground", R.string.ChangeChatBackground), R.drawable.msg_background, false);
ThemePreviewActivity.java:        final ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
ThemePreviewActivity.java:            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow).mutate();
ThemePreviewActivity.java:        floatingButton.setImageResource(R.drawable.floating_pencil);
ThemePreviewActivity.java:                    menu2.addItem(5, R.drawable.ic_share_video);
ThemePreviewActivity.java:                Drawable dropDownDrawable = context.getResources().getDrawable(R.drawable.ic_arrow_drop_down).mutate();
ThemePreviewActivity.java:            sheetDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();
ThemeSetUrlActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
ThemeSetUrlActivity.java:        checkInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ThemeSetUrlActivity.java:            helpInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ThemeSetUrlActivity.java:            createInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ThemeSetUrlActivity.java:            helpInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(context, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ThemeSetUrlActivity.java:                helpInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(getParentActivity(), R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow));
ThemeSetUrlActivity.java:                helpInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(getParentActivity(), R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
ThemeSetUrlActivity.java:                helpInfoCell.setBackgroundDrawable(Theme.getThemedDrawable(getParentActivity(), R.drawable.greydivider_top, Theme.key_windowBackgroundGrayShadow));
TooManyCommunitiesActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
TooManyCommunitiesActivity.java:        ActionBarMenuItem searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
TooManyCommunitiesActivity.java:                    Drawable drawable = Theme.getThemedDrawable(parent.getContext(), R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
TwoStepVerificationActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
TwoStepVerificationActivity.java:        doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56), LocaleController.getString("Done", R.string.Done));
TwoStepVerificationActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
TwoStepVerificationActivity.java:                        privacyCell.setBackgroundDrawable(Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow));
TwoStepVerificationSetupActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
TwoStepVerificationSetupActivity.java:            ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_other);
TwoStepVerificationSetupActivity.java:                showPasswordButton.setImageResource(R.drawable.msg_message);
VoIPFragment.java:        backIcon.setImageResource(R.drawable.ic_ab_back);
VoIPFragment.java:                    notificationsLayout.addNotification(R.drawable.calls_mute_mini, LocaleController.formatString("VoipUserMicrophoneIsOff", R.string.VoipUserMicrophoneIsOff, UserObject.getFirstName(callingUser)), "muted", animated);
VoIPFragment.java:                    notificationsLayout.addNotification(R.drawable.calls_camera_mini, LocaleController.formatString("VoipUserCameraIsOff", R.string.VoipUserCameraIsOff, UserObject.getFirstName(callingUser)), "video", animated);
VoIPFragment.java:                    notificationsLayout.addNotification(R.drawable.calls_mute_mini, LocaleController.formatString("VoipUserMicrophoneIsOff", R.string.VoipUserMicrophoneIsOff, UserObject.getFirstName(callingUser)), "muted", animated);
VoIPFragment.java:            bottomButtons[3].setData(R.drawable.calls_decline, Color.WHITE, 0xFFF01D2C, LocaleController.getString("VoipEndCall", R.string.VoipEndCall), false, animated);
VoIPFragment.java:            bottomButton.setData(R.drawable.calls_unmute, Color.BLACK, Color.WHITE, LocaleController.getString("VoipUnmute", R.string.VoipUnmute), true, animated);
VoIPFragment.java:            bottomButton.setData(R.drawable.calls_unmute, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipMute", R.string.VoipMute), false, animated);
VoIPFragment.java:                bottomButton.setData(R.drawable.calls_video, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipStopVideo", R.string.VoipStopVideo), false, animated);
VoIPFragment.java:                bottomButton.setData(R.drawable.calls_video, Color.BLACK, Color.WHITE, LocaleController.getString("VoipStartVideo", R.string.VoipStartVideo), true, animated);
VoIPFragment.java:            bottomButton.setData(R.drawable.calls_video, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.5f)), ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), "Video", false, animated);
VoIPFragment.java:            speakerPhoneIcon.setImageResource(R.drawable.calls_bluetooth);
VoIPFragment.java:            speakerPhoneIcon.setImageResource(R.drawable.calls_speaker);
VoIPFragment.java:                speakerPhoneIcon.setImageResource(R.drawable.calls_menu_headset);
VoIPFragment.java:                speakerPhoneIcon.setImageResource(R.drawable.calls_menu_phone);
VoIPFragment.java:            bottomButton.setData(R.drawable.calls_bluetooth, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipAudioRoutingBluetooth", R.string.VoipAudioRoutingBluetooth), false, animated);
VoIPFragment.java:            bottomButton.setData(R.drawable.calls_speaker, Color.BLACK, Color.WHITE, LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
VoIPFragment.java:            bottomButton.setData(R.drawable.calls_speaker, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipSpeaker", R.string.VoipSpeaker), false, animated);
VoIPFragment.java:            bottomButton.setData(R.drawable.calls_flip,  ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.5f)), ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipFlip", R.string.VoipFlip), false, animated);
VoIPFragment.java:                bottomButton.setData(R.drawable.calls_flip, Color.BLACK, Color.WHITE, LocaleController.getString("VoipFlip", R.string.VoipFlip), false, animated);
VoIPFragment.java:                bottomButton.setData(R.drawable.calls_flip, Color.WHITE, ColorUtils.setAlphaComponent(Color.WHITE, (int) (255 * 0.12f)), LocaleController.getString("VoipFlip", R.string.VoipFlip), false, animated);
WallpapersListActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
WallpapersListActivity.java:            searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
WallpapersListActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(forward, R.drawable.msg_forward, AndroidUtilities.dp(54), LocaleController.getString("Forward", R.string.Forward)));
WallpapersListActivity.java:            actionModeViews.add(actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete)));
WallpapersListActivity.java:            catsWallpaper = new FileWallpaper(Theme.DEFAULT_BACKGROUND_SLUG, R.drawable.background_hd, R.drawable.catstile);
WallpapersListActivity.java:                    Drawable drawable = Theme.getThemedDrawable(mContext, wallPaperStartRow == -1 ? R.drawable.greydivider_bottom : R.drawable.greydivider, Theme.key_windowBackgroundGrayShadow);
WallpapersListActivity.java:                    Drawable drawable = Theme.getThemedDrawable(mContext, R.drawable.greydivider_bottom, Theme.key_windowBackgroundGrayShadow);
WallpapersListActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("SelectFromGallery", R.string.SelectFromGallery), R.drawable.profile_photos, true);
WallpapersListActivity.java:                        textCell.setTextAndIcon(LocaleController.getString("SetColor", R.string.SetColor), R.drawable.menu_palette, false);
WebviewActivity.java:        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
WebviewActivity.java:        progressItem = menu.addItemWithWidth(share, R.drawable.share, AndroidUtilities.dp(54));
WebviewActivity.java:            ActionBarMenuItem menuItem = menu.addItem(0, R.drawable.ic_ab_other);
WebviewActivity.java:            menuItem.addSubItem(open_in, R.drawable.msg_openin, LocaleController.getString("OpenInExternalApp", R.string.OpenInExternalApp));
